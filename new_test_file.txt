=== RUN   TestResourceVersionReactor
=== RUN   TestResourceVersionReactor/first_resource
=== RUN   TestResourceVersionReactor/replace_resource_version
--- PASS: TestResourceVersionReactor (0.00s)
    --- PASS: TestResourceVersionReactor/first_resource (0.00s)
    --- PASS: TestResourceVersionReactor/replace_resource_version (0.00s)
=== RUN   TestExamples
    path_filtering.go:62: Allowing only "stable" examples
=== PAUSE TestExamples
=== RUN   TestYamls
    path_filtering.go:62: Allowing only "stable" examples
=== PAUSE TestYamls
=== RUN   TestStablePathFilter
=== RUN   TestStablePathFilter/_test.yaml
=== RUN   TestStablePathFilter/_alpha_test.yaml
=== RUN   TestStablePathFilter/_beta_test.yaml
=== RUN   TestStablePathFilter/_foo_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_taskruns_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_taskruns_alpha_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml#01
=== RUN   TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01
--- PASS: TestStablePathFilter (0.00s)
    --- PASS: TestStablePathFilter/_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_beta_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_foo_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_taskruns_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml#01 (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01 (0.00s)
=== RUN   TestAlphaPathFilter
=== RUN   TestAlphaPathFilter/_test.yaml
=== RUN   TestAlphaPathFilter/_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_foo_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_taskruns_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_taskruns_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml#01
=== RUN   TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01
--- PASS: TestAlphaPathFilter (0.00s)
    --- PASS: TestAlphaPathFilter/_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_foo_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_taskruns_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml#01 (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01 (0.00s)
=== RUN   TestCreateImage
2021/09/24 04:08:00 GET /v2/
2021/09/24 04:08:00 HEAD /v2/task/test-create-image/blobs/sha256:dde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6 404 BLOB_UNKNOWN Unknown blob
2021/09/24 04:08:00 HEAD /v2/task/test-create-image/blobs/sha256:9ab10150462e0b713850897e4d47ddc1e0e82a392683c177b430652929c36cc4 404 BLOB_UNKNOWN Unknown blob
2021/09/24 04:08:00 POST /v2/task/test-create-image/blobs/uploads/
2021/09/24 04:08:00 POST /v2/task/test-create-image/blobs/uploads/
2021/09/24 04:08:00 PATCH /v2/task/test-create-image/blobs/uploads/2281142991555664012
2021/09/24 04:08:00 PATCH /v2/task/test-create-image/blobs/uploads/1493518699956231266
2021/09/24 04:08:00 PUT /v2/task/test-create-image/blobs/uploads/2281142991555664012?digest=sha256%3Adde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6
2021/09/24 04:08:00 PUT /v2/task/test-create-image/blobs/uploads/1493518699956231266?digest=sha256%3A9ab10150462e0b713850897e4d47ddc1e0e82a392683c177b430652929c36cc4
2021/09/24 04:08:00 PUT /v2/task/test-create-image/manifests/latest
2021/09/24 04:08:00 GET /v2/
2021/09/24 04:08:00 GET /v2/task/test-create-image/manifests/sha256:78e6c563134c9d91efdcb2ee897ac03f12945318efe148dd84ff298c855d1416
2021/09/24 04:08:00 GET /v2/task/test-create-image/blobs/sha256:dde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6
--- PASS: TestCreateImage (0.05s)
=== CONT  TestYamls
    examples_test.go:201: Adding test yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:201: Adding test yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== RUN   TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== PAUSE TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== RUN   TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/clustertask-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources.yaml
=== PAUSE TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/demo-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/output-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/task_results_example.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/build-push-kaniko.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/cloud-event.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/configmap.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/custom-env.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/custom-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/dind-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/gcs-resource.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-resource.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-ssh-creds.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/home-is-set.yaml
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/home-volume.yaml
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/optional-resources-with-clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/pullrequest.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-env.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-volume-params.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-interp.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-ready-script.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-ready.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/step-by-digest.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/step-script.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/steps-run-in-order.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/steptemplate-env-merge.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-multiple-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-result.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-volume-args.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/template-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/unnamed-steps.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workingdir.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace-readonly.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/clustertask-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/demo-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/optional-workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/output-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipeline-result-conditions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-results-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-results.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-task-execution-status.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-extra-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-resourcespec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-when-expressions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/task_results_example.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using-retries-and-retry-count-variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using_context_variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/authenticating-git-commands.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/cloud-event.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/configmap.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/custom-env.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/custom-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/dind-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/gcs-resource.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-resource.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-ssh-creds-without-known_hosts.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-ssh-creds.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/home-is-set.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/home-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/image-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-resources-with-clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/pullrequest.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/pullrequest_input_copystep_output.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/run-steps-as-non-root.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-env.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-volume-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-interp.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-ready-script.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-ready.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/step-by-digest.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/step-script.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/steps-run-in-order.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/steptemplate-env-merge.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-multiple-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-result.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-volume-args.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/template-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/unnamed-steps.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/using_context_variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workingdir.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-in-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-readonly.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace.yaml
=== RUN   TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/demo-optional-resources
=== PAUSE TestExamples/v1alpha1/pipelineruns/demo-optional-resources
=== RUN   TestExamples/v1alpha1/pipelineruns/output-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/output-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/task_results_example
=== PAUSE TestExamples/v1alpha1/pipelineruns/task_results_example
=== RUN   TestExamples/v1alpha1/pipelineruns/workspaces
=== PAUSE TestExamples/v1alpha1/pipelineruns/workspaces
=== RUN   TestExamples/v1alpha1/taskruns/build-push-kaniko
=== PAUSE TestExamples/v1alpha1/taskruns/build-push-kaniko
=== RUN   TestExamples/v1alpha1/taskruns/cloud-event
=== PAUSE TestExamples/v1alpha1/taskruns/cloud-event
=== RUN   TestExamples/v1alpha1/taskruns/clustertask
=== PAUSE TestExamples/v1alpha1/taskruns/clustertask
=== RUN   TestExamples/v1alpha1/taskruns/configmap
=== PAUSE TestExamples/v1alpha1/taskruns/configmap
=== RUN   TestExamples/v1alpha1/taskruns/custom-env
=== PAUSE TestExamples/v1alpha1/taskruns/custom-env
=== RUN   TestExamples/v1alpha1/taskruns/custom-volume
=== PAUSE TestExamples/v1alpha1/taskruns/custom-volume
=== RUN   TestExamples/v1alpha1/taskruns/dind-sidecar
=== PAUSE TestExamples/v1alpha1/taskruns/dind-sidecar
=== RUN   TestExamples/v1alpha1/taskruns/gcs-resource
=== PAUSE TestExamples/v1alpha1/taskruns/gcs-resource
=== RUN   TestExamples/v1alpha1/taskruns/git-resource
=== PAUSE TestExamples/v1alpha1/taskruns/git-resource
=== RUN   TestExamples/v1alpha1/taskruns/git-ssh-creds
=== PAUSE TestExamples/v1alpha1/taskruns/git-ssh-creds
=== RUN   TestExamples/v1alpha1/taskruns/git-volume
=== PAUSE TestExamples/v1alpha1/taskruns/git-volume
=== RUN   TestExamples/v1alpha1/taskruns/home-is-set
=== PAUSE TestExamples/v1alpha1/taskruns/home-is-set
=== RUN   TestExamples/v1alpha1/taskruns/home-volume
=== PAUSE TestExamples/v1alpha1/taskruns/home-volume
=== RUN   TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
=== PAUSE TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
=== RUN   TestExamples/v1alpha1/taskruns/optional-resources
=== PAUSE TestExamples/v1alpha1/taskruns/optional-resources
=== RUN   TestExamples/v1alpha1/taskruns/pullrequest
=== PAUSE TestExamples/v1alpha1/taskruns/pullrequest
=== RUN   TestExamples/v1alpha1/taskruns/secret-env
=== PAUSE TestExamples/v1alpha1/taskruns/secret-env
=== RUN   TestExamples/v1alpha1/taskruns/secret-volume-params
=== PAUSE TestExamples/v1alpha1/taskruns/secret-volume-params
=== RUN   TestExamples/v1alpha1/taskruns/secret-volume
=== PAUSE TestExamples/v1alpha1/taskruns/secret-volume
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-interp
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-interp
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-ready-script
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-ready-script
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-ready
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-ready
=== RUN   TestExamples/v1alpha1/taskruns/step-by-digest
=== PAUSE TestExamples/v1alpha1/taskruns/step-by-digest
=== RUN   TestExamples/v1alpha1/taskruns/step-script
=== PAUSE TestExamples/v1alpha1/taskruns/step-script
=== RUN   TestExamples/v1alpha1/taskruns/steps-run-in-order
=== PAUSE TestExamples/v1alpha1/taskruns/steps-run-in-order
=== RUN   TestExamples/v1alpha1/taskruns/steptemplate-env-merge
=== PAUSE TestExamples/v1alpha1/taskruns/steptemplate-env-merge
=== RUN   TestExamples/v1alpha1/taskruns/task-multiple-output-image
=== PAUSE TestExamples/v1alpha1/taskruns/task-multiple-output-image
=== RUN   TestExamples/v1alpha1/taskruns/task-output-image
=== PAUSE TestExamples/v1alpha1/taskruns/task-output-image
=== RUN   TestExamples/v1alpha1/taskruns/task-result
=== PAUSE TestExamples/v1alpha1/taskruns/task-result
=== RUN   TestExamples/v1alpha1/taskruns/task-volume-args
=== PAUSE TestExamples/v1alpha1/taskruns/task-volume-args
=== RUN   TestExamples/v1alpha1/taskruns/template-volume
=== PAUSE TestExamples/v1alpha1/taskruns/template-volume
=== RUN   TestExamples/v1alpha1/taskruns/unnamed-steps
=== PAUSE TestExamples/v1alpha1/taskruns/unnamed-steps
=== RUN   TestExamples/v1alpha1/taskruns/workingdir
=== PAUSE TestExamples/v1alpha1/taskruns/workingdir
=== RUN   TestExamples/v1alpha1/taskruns/workspace-readonly
=== PAUSE TestExamples/v1alpha1/taskruns/workspace-readonly
=== RUN   TestExamples/v1alpha1/taskruns/workspace-volume
=== PAUSE TestExamples/v1alpha1/taskruns/workspace-volume
=== RUN   TestExamples/v1alpha1/taskruns/workspace
=== PAUSE TestExamples/v1alpha1/taskruns/workspace
=== RUN   TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/demo-optional-resources
=== PAUSE TestExamples/v1beta1/pipelineruns/demo-optional-resources
=== RUN   TestExamples/v1beta1/pipelineruns/optional-workspaces
=== PAUSE TestExamples/v1beta1/pipelineruns/optional-workspaces
=== RUN   TestExamples/v1beta1/pipelineruns/output-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/output-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
=== PAUSE TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-results
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-results
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/task_results_example
=== PAUSE TestExamples/v1beta1/pipelineruns/task_results_example
=== RUN   TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== PAUSE TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== RUN   TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
=== PAUSE TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
=== RUN   TestExamples/v1beta1/pipelineruns/using_context_variables
=== PAUSE TestExamples/v1beta1/pipelineruns/using_context_variables
=== RUN   TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
=== PAUSE TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
=== RUN   TestExamples/v1beta1/pipelineruns/workspaces
=== PAUSE TestExamples/v1beta1/pipelineruns/workspaces
=== RUN   TestExamples/v1beta1/taskruns/authenticating-git-commands
=== PAUSE TestExamples/v1beta1/taskruns/authenticating-git-commands
=== RUN   TestExamples/v1beta1/taskruns/cloud-event
=== PAUSE TestExamples/v1beta1/taskruns/cloud-event
=== RUN   TestExamples/v1beta1/taskruns/clustertask
=== PAUSE TestExamples/v1beta1/taskruns/clustertask
=== RUN   TestExamples/v1beta1/taskruns/configmap
=== PAUSE TestExamples/v1beta1/taskruns/configmap
=== RUN   TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
=== PAUSE TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
=== RUN   TestExamples/v1beta1/taskruns/custom-env
=== PAUSE TestExamples/v1beta1/taskruns/custom-env
=== RUN   TestExamples/v1beta1/taskruns/custom-volume
=== PAUSE TestExamples/v1beta1/taskruns/custom-volume
=== RUN   TestExamples/v1beta1/taskruns/dind-sidecar
=== PAUSE TestExamples/v1beta1/taskruns/dind-sidecar
=== RUN   TestExamples/v1beta1/taskruns/gcs-resource
=== PAUSE TestExamples/v1beta1/taskruns/gcs-resource
=== RUN   TestExamples/v1beta1/taskruns/git-resource
=== PAUSE TestExamples/v1beta1/taskruns/git-resource
=== RUN   TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
=== PAUSE TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
=== RUN   TestExamples/v1beta1/taskruns/git-ssh-creds
=== PAUSE TestExamples/v1beta1/taskruns/git-ssh-creds
=== RUN   TestExamples/v1beta1/taskruns/git-volume
=== PAUSE TestExamples/v1beta1/taskruns/git-volume
=== RUN   TestExamples/v1beta1/taskruns/home-is-set
=== PAUSE TestExamples/v1beta1/taskruns/home-is-set
=== RUN   TestExamples/v1beta1/taskruns/home-volume
=== PAUSE TestExamples/v1beta1/taskruns/home-volume
=== RUN   TestExamples/v1beta1/taskruns/image-params
=== PAUSE TestExamples/v1beta1/taskruns/image-params
=== RUN   TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
=== PAUSE TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
=== RUN   TestExamples/v1beta1/taskruns/optional-resources
=== PAUSE TestExamples/v1beta1/taskruns/optional-resources
=== RUN   TestExamples/v1beta1/taskruns/optional-workspaces
=== PAUSE TestExamples/v1beta1/taskruns/optional-workspaces
=== RUN   TestExamples/v1beta1/taskruns/pullrequest
=== PAUSE TestExamples/v1beta1/taskruns/pullrequest
=== RUN   TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
=== PAUSE TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
=== RUN   TestExamples/v1beta1/taskruns/run-steps-as-non-root
=== PAUSE TestExamples/v1beta1/taskruns/run-steps-as-non-root
=== RUN   TestExamples/v1beta1/taskruns/secret-env
=== PAUSE TestExamples/v1beta1/taskruns/secret-env
=== RUN   TestExamples/v1beta1/taskruns/secret-volume-params
=== PAUSE TestExamples/v1beta1/taskruns/secret-volume-params
=== RUN   TestExamples/v1beta1/taskruns/secret-volume
=== PAUSE TestExamples/v1beta1/taskruns/secret-volume
=== RUN   TestExamples/v1beta1/taskruns/sidecar-interp
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-interp
=== RUN   TestExamples/v1beta1/taskruns/sidecar-ready-script
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-ready-script
=== RUN   TestExamples/v1beta1/taskruns/sidecar-ready
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-ready
=== RUN   TestExamples/v1beta1/taskruns/step-by-digest
=== PAUSE TestExamples/v1beta1/taskruns/step-by-digest
=== RUN   TestExamples/v1beta1/taskruns/step-script
=== PAUSE TestExamples/v1beta1/taskruns/step-script
=== RUN   TestExamples/v1beta1/taskruns/steps-run-in-order
=== PAUSE TestExamples/v1beta1/taskruns/steps-run-in-order
=== RUN   TestExamples/v1beta1/taskruns/steptemplate-env-merge
=== PAUSE TestExamples/v1beta1/taskruns/steptemplate-env-merge
=== RUN   TestExamples/v1beta1/taskruns/task-multiple-output-image
=== PAUSE TestExamples/v1beta1/taskruns/task-multiple-output-image
=== RUN   TestExamples/v1beta1/taskruns/task-output-image
=== PAUSE TestExamples/v1beta1/taskruns/task-output-image
=== RUN   TestExamples/v1beta1/taskruns/task-result
=== PAUSE TestExamples/v1beta1/taskruns/task-result
=== RUN   TestExamples/v1beta1/taskruns/task-volume-args
=== PAUSE TestExamples/v1beta1/taskruns/task-volume-args
=== RUN   TestExamples/v1beta1/taskruns/template-volume
=== PAUSE TestExamples/v1beta1/taskruns/template-volume
=== RUN   TestExamples/v1beta1/taskruns/unnamed-steps
=== PAUSE TestExamples/v1beta1/taskruns/unnamed-steps
=== RUN   TestExamples/v1beta1/taskruns/using_context_variables
=== PAUSE TestExamples/v1beta1/taskruns/using_context_variables
=== RUN   TestExamples/v1beta1/taskruns/workingdir
=== PAUSE TestExamples/v1beta1/taskruns/workingdir
=== RUN   TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== PAUSE TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== RUN   TestExamples/v1beta1/taskruns/workspace-readonly
=== PAUSE TestExamples/v1beta1/taskruns/workspace-readonly
=== RUN   TestExamples/v1beta1/taskruns/workspace-volume
=== PAUSE TestExamples/v1beta1/taskruns/workspace-volume
=== RUN   TestExamples/v1beta1/taskruns/workspace
=== PAUSE TestExamples/v1beta1/taskruns/workspace
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
=== CONT  TestExamples/v1alpha1/taskruns/workspace
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
    init_test.go:135: Create namespace arendelle-r5kjc to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    init_test.go:135: Create namespace arendelle-6v4l4 to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    init_test.go:135: Create namespace arendelle-628k2 to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
    init_test.go:135: Create namespace arendelle-rlcqz to deploy to
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
    init_test.go:135: Create namespace arendelle-nhqjg to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
    init_test.go:135: Create namespace arendelle-xlbt5 to deploy to
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    init_test.go:135: Create namespace arendelle-dd5cn to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    init_test.go:135: Create namespace arendelle-9hsmh to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rlcqz"
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6v4l4"
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-628k2"
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-r5kjc"
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dd5cn"
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xlbt5"
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-nhqjg"
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-9hsmh"
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
    examples_test.go:169: Deleting namespace arendelle-r5kjc
=== CONT  TestExamples/v1beta1/taskruns/workspace
    init_test.go:135: Create namespace arendelle-pxpn9 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-pxpn9"
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
    examples_test.go:169: Deleting namespace arendelle-nhqjg
=== CONT  TestExamples/v1beta1/pipelineruns/demo-optional-resources
    init_test.go:135: Create namespace arendelle-4b928 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4b928"
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    examples_test.go:169: Deleting namespace arendelle-628k2
=== CONT  TestExamples/v1beta1/pipelineruns/output-pipelinerun
    init_test.go:135: Create namespace arendelle-7pbhp to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7pbhp"
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    examples_test.go:169: Deleting namespace arendelle-6v4l4
=== CONT  TestExamples/v1alpha1/taskruns/task-output-image
    init_test.go:135: Create namespace arendelle-fkcv8 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fkcv8"
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
    examples_test.go:169: Deleting namespace arendelle-xlbt5
=== CONT  TestExamples/v1alpha1/taskruns/clustertask
    init_test.go:135: Create namespace arendelle-ffwp4 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ffwp4"
=== CONT  TestExamples/v1beta1/pipelineruns/demo-optional-resources
    examples_test.go:169: Deleting namespace arendelle-4b928
=== CONT  TestExamples/v1beta1/taskruns/git-resource
    init_test.go:135: Create namespace arendelle-8grf2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8grf2"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
    examples_test.go:169: Deleting namespace arendelle-rlcqz
=== CONT  TestExamples/v1beta1/taskruns/custom-env
    init_test.go:135: Create namespace arendelle-ttc2h to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ttc2h"
=== CONT  TestExamples/v1alpha1/taskruns/clustertask
    examples_test.go:109: Deleting clustertask clustertask-v1alpha1
    examples_test.go:169: Deleting namespace arendelle-ffwp4
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
    init_test.go:135: Create namespace arendelle-p8srw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-p8srw"
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    examples_test.go:169: Deleting namespace arendelle-9hsmh
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    init_test.go:135: Create namespace arendelle-5hd92 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-5hd92"
=== CONT  TestExamples/v1alpha1/taskruns/task-output-image
    examples_test.go:169: Deleting namespace arendelle-fkcv8
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    init_test.go:135: Create namespace arendelle-stzxp to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-stzxp"
=== CONT  TestExamples/v1beta1/taskruns/workspace
    examples_test.go:169: Deleting namespace arendelle-pxpn9
=== CONT  TestExamples/v1alpha1/taskruns/step-script
    init_test.go:135: Create namespace arendelle-2dvnq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-2dvnq"
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    examples_test.go:169: Deleting namespace arendelle-5hd92
=== CONT  TestExamples/v1beta1/taskruns/authenticating-git-commands
    init_test.go:135: Create namespace arendelle-zjlcx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-zjlcx"
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
    examples_test.go:169: Deleting namespace arendelle-p8srw
=== CONT  TestExamples/v1beta1/taskruns/home-volume
    init_test.go:135: Create namespace arendelle-shzkc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-shzkc"
=== CONT  TestExamples/v1beta1/pipelineruns/output-pipelinerun
    examples_test.go:169: Deleting namespace arendelle-7pbhp
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
    init_test.go:135: Create namespace arendelle-84ftl to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-84ftl"
=== CONT  TestExamples/v1beta1/taskruns/custom-env
    examples_test.go:169: Deleting namespace arendelle-ttc2h
=== CONT  TestExamples/v1beta1/taskruns/secret-volume
    init_test.go:135: Create namespace arendelle-2rnxc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-2rnxc"
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:169: Deleting namespace arendelle-dd5cn
=== CONT  TestExamples/v1alpha1/taskruns/git-volume
--- PASS: TestYamls (0.00s)
    --- SKIP: TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml (0.00s)
    --- PASS: TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml (244.56s)
=== CONT  TestExamples/v1alpha1/taskruns/git-volume
    init_test.go:135: Create namespace arendelle-8ghtc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8ghtc"
=== CONT  TestExamples/v1beta1/taskruns/git-resource
    examples_test.go:169: Deleting namespace arendelle-8grf2
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
    init_test.go:135: Create namespace arendelle-h9gz4 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-h9gz4"
    examples_test.go:62: Failed waiting for task run done: "workspace-volume-nw8tv" failed
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-h9gz4 ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:12:23Z"
          generateName: workspace-volume-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:12:23Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:12:36Z"
          name: workspace-volume-nw8tv
          namespace: arendelle-h9gz4
          resourceVersion: "3880185"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-h9gz4/taskruns/workspace-volume-nw8tv
          uid: 618bc9fe-4608-48fd-9b71-f01e19ef68e3
        spec:
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: echo some stuff > /workspace/stuff
            - image: ubuntu
              name: read
              resources: {}
              script: cat /workspace/stuff
            - image: ubuntu
              name: override-workspace
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ ! -f /workspace/stuff ]]
              volumeMounts:
              - mountPath: /workspace
                name: empty
            volumes:
            - emptyDir: {}
              name: empty
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-24T08:12:36Z"
          conditions:
          - lastTransitionTime: "2021-09-24T08:12:36Z"
            message: 'failed to create task run pod "workspace-volume-nw8tv": No API token
              found for service account "default", retry after the token is automatically
              created and added to the service account. Maybe invalid TaskSpec'
            reason: CouldntGetTask
            status: "False"
            type: Succeeded
          podName: ""
          startTime: "2021-09-24T08:12:25Z"
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: echo some stuff > /workspace/stuff
            - image: ubuntu
              name: read
              resources: {}
              script: cat /workspace/stuff
            - image: ubuntu
              name: override-workspace
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ ! -f /workspace/stuff ]]
              volumeMounts:
              - mountPath: /workspace
                name: empty
            volumes:
            - emptyDir: {}
              name: empty
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-h9gz4 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume-params
    init_test.go:135: Create namespace arendelle-xwpnq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xwpnq"
=== CONT  TestExamples/v1beta1/taskruns/authenticating-git-commands
    examples_test.go:169: Deleting namespace arendelle-zjlcx
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results
    init_test.go:135: Create namespace arendelle-4fjwm to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4fjwm"
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
    examples_test.go:169: Deleting namespace arendelle-84ftl
=== CONT  TestExamples/v1alpha1/taskruns/home-is-set
    init_test.go:135: Create namespace arendelle-k8qbw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-k8qbw"
=== CONT  TestExamples/v1beta1/taskruns/home-volume
    examples_test.go:169: Deleting namespace arendelle-shzkc
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
    init_test.go:135: Create namespace arendelle-gdjcp to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gdjcp"
=== CONT  TestExamples/v1beta1/taskruns/secret-volume
    examples_test.go:169: Deleting namespace arendelle-2rnxc
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    init_test.go:135: Create namespace arendelle-4kbfz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4kbfz"
=== CONT  TestExamples/v1alpha1/taskruns/git-volume
    examples_test.go:169: Deleting namespace arendelle-8ghtc
=== CONT  TestExamples/v1alpha1/taskruns/home-volume
    init_test.go:135: Create namespace arendelle-gm9tc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gm9tc"
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    examples_test.go:169: Deleting namespace arendelle-stzxp
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    init_test.go:135: Create namespace arendelle-2d8rx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-2d8rx"
=== CONT  TestExamples/v1alpha1/taskruns/step-script
    examples_test.go:169: Deleting namespace arendelle-2dvnq
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    init_test.go:135: Create namespace arendelle-tjb4k to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tjb4k"
=== CONT  TestExamples/v1alpha1/taskruns/home-is-set
    examples_test.go:169: Deleting namespace arendelle-k8qbw
=== CONT  TestExamples/v1alpha1/taskruns/gcs-resource
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
    init_test.go:135: Create namespace arendelle-2xjjw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-2xjjw"
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
    examples_test.go:109: Deleting clustertask clustertask-with-optional-resources-v1alpha1
    examples_test.go:169: Deleting namespace arendelle-gdjcp
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
    init_test.go:135: Create namespace arendelle-8vjg7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8vjg7"
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume-params
    examples_test.go:169: Deleting namespace arendelle-xwpnq
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    init_test.go:135: Create namespace arendelle-v7nw6 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-v7nw6"
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    examples_test.go:169: Deleting namespace arendelle-2d8rx
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources
    init_test.go:135: Create namespace arendelle-psw4d to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-psw4d"
=== CONT  TestExamples/v1alpha1/taskruns/home-volume
    examples_test.go:169: Deleting namespace arendelle-gm9tc
=== CONT  TestExamples/v1alpha1/taskruns/configmap
    init_test.go:135: Create namespace arendelle-zpstc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-zpstc"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
    examples_test.go:169: Deleting namespace arendelle-8vjg7
=== CONT  TestExamples/v1alpha1/taskruns/secret-env
    init_test.go:135: Create namespace arendelle-ckhk2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ckhk2"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    examples_test.go:169: Deleting namespace arendelle-4kbfz
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    init_test.go:135: Create namespace arendelle-vzr4s to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vzr4s"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results
    examples_test.go:169: Deleting namespace arendelle-4fjwm
=== CONT  TestExamples/v1alpha1/taskruns/cloud-event
    init_test.go:135: Create namespace arendelle-rjzpw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rjzpw"
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    examples_test.go:169: Deleting namespace arendelle-tjb4k
=== CONT  TestExamples/v1alpha1/pipelineruns/workspaces
    init_test.go:135: Create namespace arendelle-hgwqs to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-hgwqs"
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    examples_test.go:169: Deleting namespace arendelle-v7nw6
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    init_test.go:135: Create namespace arendelle-sglhk to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-sglhk"
=== CONT  TestExamples/v1alpha1/taskruns/secret-env
    examples_test.go:169: Deleting namespace arendelle-ckhk2
=== CONT  TestExamples/v1beta1/taskruns/workingdir
=== CONT  TestExamples/v1alpha1/taskruns/configmap
    examples_test.go:169: Deleting namespace arendelle-zpstc
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    init_test.go:135: Create namespace arendelle-crh28 to deploy to
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    init_test.go:135: Create namespace arendelle-xplfg to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-crh28"
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xplfg"
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    examples_test.go:169: Deleting namespace arendelle-vzr4s
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
    init_test.go:135: Create namespace arendelle-f245r to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-f245r"
=== CONT  TestExamples/v1alpha1/taskruns/cloud-event
    examples_test.go:169: Deleting namespace arendelle-rjzpw
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    init_test.go:135: Create namespace arendelle-22nf5 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-22nf5"
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources
    examples_test.go:169: Deleting namespace arendelle-psw4d
=== CONT  TestExamples/v1alpha1/taskruns/pullrequest
    init_test.go:135: Create namespace arendelle-s2vpb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-s2vpb"
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
    examples_test.go:169: Deleting namespace arendelle-2xjjw
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
    init_test.go:135: Create namespace arendelle-v5dfz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-v5dfz"
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    examples_test.go:62: Failed waiting for task run done: "workspace-in-sidecar-7jb69" failed
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-sglhk ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:17:24Z"
          generateName: workspace-in-sidecar-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:sidecars: {}
                  f:steps: {}
                  f:workspaces: {}
                f:timeout: {}
                f:workspaces: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:17:24Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:sidecars: {}
                  f:steps: {}
                  f:workspaces: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:18:25Z"
          name: workspace-in-sidecar-7jb69
          namespace: arendelle-sglhk
          resourceVersion: "3884758"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-sglhk/taskruns/workspace-in-sidecar-7jb69
          uid: c1f481ae-52ae-40e0-b2a8-87b5645b4f7d
        spec:
          serviceAccountName: default
          taskSpec:
            sidecars:
            - image: alpine:3.12.0
              name: ""
              resources:
                requests:
                  cpu: 250m
                  memory: 64Mi
              script: |
                #!/usr/bin/env ash
                while [ ! -f "$(workspaces.signals.path)"/bar ] ; do
                  echo "Waiting for $(workspaces.signals.path)/bar"
                  sleep 1
                done
                touch "$(workspaces.signals.path)"/ready
                echo "Wrote ready file"
              volumeMounts:
              - mountPath: $(workspaces.signals.path)
                name: $(workspaces.signals.volume)
            steps:
            - image: alpine:3.12.0
              name: ""
              resources:
                requests:
                  cpu: 250m
                  memory: 64Mi
              script: |
                #!/usr/bin/env ash
                echo "foo" > "$(workspaces.signals.path)"/bar
                echo "Wrote bar file"
                while [ ! -f "$(workspaces.signals.path)"/ready ] ; do
                  echo "Waiting for $(workspaces.signals.path)/ready"
                  sleep 1
                done
                echo "Saw ready file"
            workspaces:
            - name: signals
          timeout: 1m0s
          workspaces:
          - emptyDir: {}
            name: signals
        status:
          completionTime: "2021-09-24T08:18:25Z"
          conditions:
          - lastTransitionTime: "2021-09-24T08:18:25Z"
            message: TaskRun "workspace-in-sidecar-7jb69" failed to finish within "1m0s"
            reason: TaskRunTimeout
            status: "False"
            type: Succeeded
          podName: workspace-in-sidecar-7jb69-pod-z8s7s
          startTime: "2021-09-24T08:17:25Z"
          steps:
          - container: step-unnamed-0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            name: unnamed-0
            terminated:
              exitCode: 1
              finishedAt: "2021-09-24T08:18:25Z"
              reason: TaskRunTimeout
              startedAt: "2021-09-24T08:18:16Z"
          taskSpec:
            sidecars:
            - image: alpine:3.12.0
              name: ""
              resources:
                requests:
                  cpu: 250m
                  memory: 64Mi
              script: |
                #!/usr/bin/env ash
                while [ ! -f "$(workspaces.signals.path)"/bar ] ; do
                  echo "Waiting for $(workspaces.signals.path)/bar"
                  sleep 1
                done
                touch "$(workspaces.signals.path)"/ready
                echo "Wrote ready file"
              volumeMounts:
              - mountPath: $(workspaces.signals.path)
                name: $(workspaces.signals.volume)
            steps:
            - image: alpine:3.12.0
              name: ""
              resources:
                requests:
                  cpu: 250m
                  memory: 64Mi
              script: |
                #!/usr/bin/env ash
                echo "foo" > "$(workspaces.signals.path)"/bar
                echo "Wrote bar file"
                while [ ! -f "$(workspaces.signals.path)"/ready ] ; do
                  echo "Waiting for $(workspaces.signals.path)/ready"
                  sleep 1
                done
                echo "Saw ready file"
            workspaces:
            - name: signals
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 80387ab4019069127d4d38d79649aaddc1a20b33480ba01accf8ce35dd3e40be
            cni.projectcalico.org/podIP: 172.20.64.56/32
            cni.projectcalico.org/podIPs: 172.20.64.56/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:17:25Z"
          deletionGracePeriodSeconds: 30
          deletionTimestamp: "2021-09-24T08:18:55Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: workspace-in-sidecar-7jb69
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:18:02Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"c1f481ae-52ae-40e0-b2a8-87b5645b4f7d"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"sidecar"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources:
                      .: {}
                      f:requests:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/workspace/signals"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources:
                      .: {}
                      f:requests:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace/signals"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"ws-w8slw"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:18:22Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.56"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:18:22Z"
          name: workspace-in-sidecar-7jb69-pod-z8s7s
          namespace: arendelle-sglhk
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: workspace-in-sidecar-7jb69
            uid: c1f481ae-52ae-40e0-b2a8-87b5645b4f7d
          resourceVersion: "3884752"
          selfLink: /api/v1/namespaces/arendelle-sglhk/pods/workspace-in-sidecar-7jb69-pod-z8s7s
          uid: 32d38108-9c38-4e78-b164-0fd6dfe00634
        spec:
          activeDeadlineSeconds: 90
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-fq5b4
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources:
              requests:
                cpu: 250m
                memory: 64Mi
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /workspace/signals
              name: ws-w8slw
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mvdxs
              readOnly: true
          - command:
            - /tekton/scripts/sidecar-script-0-9tqbp
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: sidecar
            resources:
              requests:
                cpu: 250m
                memory: 64Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /workspace/signals
              name: ws-w8slw
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mvdxs
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mvdxs
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-fq5b4"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYXNoCmVjaG8gImZvbyIgPiAiL3dvcmtzcGFjZS9zaWduYWxzIi9iYXIKZWNobyAiV3JvdGUgYmFyIGZpbGUiCndoaWxlIFsgISAtZiAiL3dvcmtzcGFjZS9zaWduYWxzIi9yZWFkeSBdIDsgZG8KICBlY2hvICJXYWl0aW5nIGZvciAvd29ya3NwYWNlL3NpZ25hbHMvcmVhZHkiCiAgc2xlZXAgMQpkb25lCmVjaG8gIlNhdyByZWFkeSBmaWxlIgo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/sidecar-script-0-9tqbp"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYXNoCndoaWxlIFsgISAtZiAiL3dvcmtzcGFjZS9zaWduYWxzIi9iYXIgXSA7IGRvCiAgZWNobyAiV2FpdGluZyBmb3IgL3dvcmtzcGFjZS9zaWduYWxzL2JhciIKICBzbGVlcCAxCmRvbmUKdG91Y2ggIi93b3Jrc3BhY2Uvc2lnbmFscyIvcmVhZHkKZWNobyAiV3JvdGUgcmVhZHkgZmlsZSIK
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mvdxs
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir: {}
            name: ws-w8slw
          - name: default-token-mvdxs
            secret:
              defaultMode: 420
              secretName: default-token-mvdxs
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:18:13Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:18:21Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:18:21Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:17:57Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://0764a3466d7a9461802735d613b24936c5a7d2130ca9300c87e5fce7580e97d2
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: sidecar
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:18:20Z"
          - containerID: docker://02ebb724ded25fa99b65707487efacbca8ff794d56482f11a1abc18f34caf7be
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:18:16Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://39d874ad47c7ae3f46db4f3bcdb8190bcaa0954c31d22eaf0a8eb12b6a45a6d5
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://39d874ad47c7ae3f46db4f3bcdb8190bcaa0954c31d22eaf0a8eb12b6a45a6d5
                exitCode: 0
                finishedAt: "2021-09-24T08:18:05Z"
                reason: Completed
                startedAt: "2021-09-24T08:18:05Z"
          - containerID: docker://5993a720c8c88317663eca6361a2ac1ac773d3b998b8eccc4312ad449886b5be
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://5993a720c8c88317663eca6361a2ac1ac773d3b998b8eccc4312ad449886b5be
                exitCode: 0
                finishedAt: "2021-09-24T08:18:09Z"
                reason: Completed
                startedAt: "2021-09-24T08:18:09Z"
          phase: Running
          podIP: 172.20.64.56
          podIPs:
          - ip: 172.20.64.56
          qosClass: Burstable
          startTime: "2021-09-24T08:17:57Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-sglhk ###
    panic.go:636: #####################################################
    build_logs.go:37: build logs 
        >>> Container step-unnamed-0:
        Wrote bar file
        Waiting for /workspace/signals/ready
        Saw ready file
        
        >>> Container sidecar:
        Waiting for /workspace/signals/bar
        Waiting for /workspace/signals/bar
        Waiting for /workspace/signals/bar
        Waiting for /workspace/signals/bar
        Wrote ready file
=== CONT  TestExamples/v1beta1/taskruns/unnamed-steps
    init_test.go:135: Create namespace arendelle-mgg2l to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mgg2l"
=== CONT  TestExamples/v1alpha1/pipelineruns/workspaces
    examples_test.go:169: Deleting namespace arendelle-hgwqs
=== CONT  TestExamples/v1alpha1/taskruns/build-push-kaniko
    init_test.go:135: Create namespace arendelle-bqgxw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-bqgxw"
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    examples_test.go:169: Deleting namespace arendelle-crh28
=== CONT  TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
    init_test.go:135: Create namespace arendelle-h5skl to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-h5skl"
    examples_test.go:144: exit status 1 Output: pipeline.tekton.dev/sample-pipeline-cluster-task-4 created
        pipelinerun.tekton.dev/demo-pipeline-run-4 created
        Error from server (AlreadyExists): error when creating "STDIN": clustertasks.tekton.dev "cluster-task-pipeline-4" already exists
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-h5skl ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-24T08:18:43Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:18:43Z"
          name: sample-pipeline-cluster-task-4
          namespace: arendelle-h5skl
          resourceVersion: "3885160"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-h5skl/pipelines/sample-pipeline-cluster-task-4
          uid: 11038a8f-f314-4677-b0e0-204f14fd27ed
        spec:
          tasks:
          - name: cluster-task-pipeline-4
            taskRef:
              kind: ClusterTask
              name: cluster-task-pipeline-4
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-24T08:18:43Z"
          generation: 1
          labels:
            tekton.dev/pipeline: sample-pipeline-cluster-task-4
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:18:43Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:18:43Z"
          name: demo-pipeline-run-4
          namespace: arendelle-h5skl
          resourceVersion: "3885168"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-h5skl/pipelineruns/demo-pipeline-run-4
          uid: 5110f207-b88f-441b-b3a5-7a5e30506421
        spec:
          pipelineRef:
            name: sample-pipeline-cluster-task-4
          serviceAccountName: default
          timeout: 1h0m0s
        status: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:18:43Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/clusterTask: cluster-task-pipeline-4
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sample-pipeline-cluster-task-4
            tekton.dev/pipelineRun: demo-pipeline-run-4
            tekton.dev/pipelineTask: cluster-task-pipeline-4
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/clusterTask: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"5110f207-b88f-441b-b3a5-7a5e30506421"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:podName: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:18:43Z"
          name: demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2
          namespace: arendelle-h5skl
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-4
            uid: 5110f207-b88f-441b-b3a5-7a5e30506421
          resourceVersion: "3885172"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-h5skl/taskruns/demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2
          uid: d9c0439a-912f-4e64-942b-c82351e58666
        spec:
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: ClusterTask
            name: cluster-task-pipeline-4
          timeout: 1h0m0s
        status:
          podName: ""
        
        ---
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:18:43Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/clusterTask: cluster-task-pipeline-4
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sample-pipeline-cluster-task-4
            tekton.dev/pipelineRun: demo-pipeline-run-4
            tekton.dev/pipelineTask: cluster-task-pipeline-4
            tekton.dev/taskRun: demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/clusterTask: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"d9c0439a-912f-4e64-942b-c82351e58666"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-task-two-step-one"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:18:43Z"
          name: demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2-pod-z897m
          namespace: arendelle-h5skl
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2
            uid: d9c0439a-912f-4e64-942b-c82351e58666
          resourceVersion: "3885171"
          selfLink: /api/v1/namespaces/arendelle-h5skl/pods/demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2-pod-z897m
          uid: a7d1eb3e-63ac-4559-92a4-81d6f6ddd316
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-task-two-step-one
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /bin/bash
            - --
            - -c
            - echo success
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-task-two-step-one
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-fbtg5
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-fbtg5
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-fbtg5
            secret:
              defaultMode: 420
              secretName: default-token-fbtg5
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:18:43Z"
            status: "True"
            type: PodScheduled
          phase: Pending
          qosClass: BestEffort
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-h5skl ###
    panic.go:636: #####################################################
    build_logs.go:35: Could not get logs for pod demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2-pod-z897m: container "step-task-two-step-one" in pod "demo-pipeline-run-4-cluster-task-pipeline-4-rd5j2-pod-z897m" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1alpha1/taskruns/task-result
    init_test.go:135: Create namespace arendelle-4zd5v to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4zd5v"
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    examples_test.go:169: Deleting namespace arendelle-xplfg
=== CONT  TestExamples/v1alpha1/taskruns/task-result
    examples_test.go:153: pipelinerun or taskrun not created for ../examples/v1alpha1/taskruns/task-result.yaml
    panic.go:636: Deleting namespace arendelle-4zd5v
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    init_test.go:135: Create namespace arendelle-c7kql to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
    init_test.go:135: Create namespace arendelle-mgdzs to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mgdzs"
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-c7kql"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    examples_test.go:169: Deleting namespace arendelle-22nf5
=== CONT  TestExamples/v1beta1/taskruns/gcs-resource
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    init_test.go:135: Create namespace arendelle-zwx94 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-zwx94"
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
    examples_test.go:169: Deleting namespace arendelle-f245r
=== CONT  TestExamples/v1beta1/taskruns/dind-sidecar
    init_test.go:135: Create namespace arendelle-lhhts to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-lhhts"
=== CONT  TestExamples/v1alpha1/taskruns/pullrequest
    examples_test.go:169: Deleting namespace arendelle-s2vpb
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    init_test.go:135: Create namespace arendelle-g5d5s to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-g5d5s"
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
    examples_test.go:169: Deleting namespace arendelle-mgdzs
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    init_test.go:135: Create namespace arendelle-vhfcq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vhfcq"
=== CONT  TestExamples/v1beta1/taskruns/unnamed-steps
    examples_test.go:169: Deleting namespace arendelle-mgg2l
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    init_test.go:135: Create namespace arendelle-nnxd8 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-nnxd8"
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    examples_test.go:169: Deleting namespace arendelle-c7kql
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    init_test.go:135: Create namespace arendelle-g467j to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-g467j"
=== CONT  TestExamples/v1alpha1/taskruns/build-push-kaniko
    examples_test.go:62: Failed waiting for task run done: "build-push-kaniko" failed
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-bqgxw ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-24T08:18:34Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:18:34Z"
          name: skaffold-git-build-push-kaniko
          namespace: arendelle-bqgxw
          resourceVersion: "3884994"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-bqgxw/pipelineresources/skaffold-git-build-push-kaniko
          uid: 97370cad-b1c8-4fc9-8d3b-10de6ef3ba88
        spec:
          params:
          - name: revision
            value: v1.32.0
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          type: git
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-24T08:18:34Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:18:34Z"
          name: skaffold-image-leeroy-web-build-push-kaniko
          namespace: arendelle-bqgxw
          resourceVersion: "3884991"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-bqgxw/pipelineresources/skaffold-image-leeroy-web-build-push-kaniko
          uid: 679d7008-effd-4ffb-a957-1ab6e8747d78
        spec:
          params:
          - name: url
            value: localhost:5000/leeroy-web
          type: image
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:18:34Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:outputs:
                  .: {}
                  f:resources: {}
                f:sidecars: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:18:34Z"
          name: build-push-kaniko
          namespace: arendelle-bqgxw
          resourceVersion: "3884997"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-bqgxw/tasks/build-push-kaniko
          uid: acf60f1c-b40c-4442-bd71-888102f22c1e
        spec:
          params:
          - default: /workspace/workspace/Dockerfile
            description: The path to the dockerfile to build
            name: pathToDockerFile
            type: string
          - default: /workspace/workspace
            description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
            name: pathToContext
            type: string
          - default: alpine:3.9
            name: BASE
            type: string
          resources:
            inputs:
            - name: workspace
              type: git
            outputs:
            - name: builtImage
              type: image
          sidecars:
          - image: ppc64le/registry:2
            name: registry
            resources: {}
          steps:
          - args:
            - --dockerfile=$(inputs.params.pathToDockerFile)
            - --destination=$(outputs.resources.builtImage.url)
            - --context=$(inputs.params.pathToContext)
            - --oci-layout-path=$(inputs.resources.builtImage.path)
            - --build-arg=$(inputs.params.BASE)
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            name: build-and-push
            resources: {}
            securityContext:
              runAsUser: 0
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:18:34Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/task: build-push-kaniko
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:outputs:
                  .: {}
                  f:resources: {}
                f:taskRef:
                  .: {}
                  f:name: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:18:34Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  f:tekton.dev/task: {}
              f:status:
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:sidecars: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:sidecars: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:19:42Z"
          name: build-push-kaniko
          namespace: arendelle-bqgxw
          resourceVersion: "3886317"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-bqgxw/taskruns/build-push-kaniko
          uid: 0aa67a70-79f8-4370-ba10-3bbbed4aea2a
        spec:
          params:
          - name: pathToDockerFile
            value: Dockerfile
          - name: pathToContext
            value: /workspace/workspace/examples/microservices/leeroy-web
          - name: BASE
            value: alpine:3.9
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-build-push-kaniko
            outputs:
            - name: builtImage
              resourceRef:
                name: skaffold-image-leeroy-web-build-push-kaniko
          serviceAccountName: default
          taskRef:
            kind: Task
            name: build-push-kaniko
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-24T08:19:42Z"
          conditions:
          - lastTransitionTime: "2021-09-24T08:19:42Z"
            message: |
              "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-bqgxw logs build-push-kaniko-pod-8t7rr -c step-build-and-push
            reason: Failed
            status: "False"
            type: Succeeded
          podName: build-push-kaniko-pod-8t7rr
          sidecars:
          - container: sidecar-registry
            imageID: docker-pullable://ppc64le/registry@sha256:b30e5b352ab4e523d7a02a0a99ca0dc32b1c61c71507b82c17f26b31c6a75632
            name: registry
            running:
              startedAt: "2021-09-24T08:19:14Z"
          startTime: "2021-09-24T08:18:37Z"
          steps:
          - container: step-create-dir-builtimage-b844t
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-builtimage-b844t
            terminated:
              containerID: docker://5058e5f17bc361edfa39afe9e159d80efc61d4de701b2e1aaaec3423edaba17e
              exitCode: 0
              finishedAt: "2021-09-24T08:19:20Z"
              reason: Completed
              startedAt: "2021-09-24T08:19:19Z"
          - container: step-git-source-workspace-xtgm6
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-xtgm6
            terminated:
              containerID: docker://581a29c24bdeb19ed64362d245f9eaa90b3a5c065190d34934f7f5c65dd24162
              exitCode: 0
              finishedAt: "2021-09-24T08:19:34Z"
              message: '[{"key":"commit","value":"edd1d458902d64e51e17b83514e1fc693c248259","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-24T08:19:20Z"
          - container: step-build-and-push
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            name: build-and-push
            terminated:
              containerID: docker://86374c94bba6a331c554ca0e3fd1cd7df9c57e5a27f82d981db07d5994477ad9
              exitCode: 1
              finishedAt: "2021-09-24T08:19:36Z"
              reason: Error
              startedAt: "2021-09-24T08:19:33Z"
          - container: step-image-digest-exporter-l9pkl
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            name: image-digest-exporter-l9pkl
            terminated:
              containerID: docker://e9e7860c49ca9c6ce6f155b34bc89582be22e596aa95b15b11ec3303788ef862
              exitCode: 1
              finishedAt: "2021-09-24T08:19:36Z"
              reason: Error
              startedAt: "2021-09-24T08:19:36Z"
          taskSpec:
            params:
            - default: /workspace/workspace/Dockerfile
              description: The path to the dockerfile to build
              name: pathToDockerFile
              type: string
            - default: /workspace/workspace
              description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
              name: pathToContext
              type: string
            - default: alpine:3.9
              name: BASE
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
              outputs:
              - name: builtImage
                type: image
            sidecars:
            - image: ppc64le/registry:2
              name: registry
              resources: {}
            steps:
            - args:
              - --dockerfile=$(inputs.params.pathToDockerFile)
              - --destination=$(outputs.resources.builtImage.url)
              - --context=$(inputs.params.pathToContext)
              - --oci-layout-path=$(inputs.resources.builtImage.path)
              - --build-arg=$(inputs.params.BASE)
              env:
              - name: DOCKER_CONFIG
                value: /tekton/home/.docker/
              image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
              name: build-and-push
              resources: {}
              securityContext:
                runAsUser: 0
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: a5bd5ef0ad32c05359867cf3d8874f2a71e3cbb7fd944eb61fa9ae4896d132c6
            cni.projectcalico.org/podIP: 172.20.64.34/32
            cni.projectcalico.org/podIPs: 172.20.64.34/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:18:35Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/task: build-push-kaniko
            tekton.dev/taskRun: build-push-kaniko
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:18:44Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.34"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:19:41Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0aa67a70-79f8-4370-ba10-3bbbed4aea2a"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"sidecar-registry"}:
                    .: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                  k:{"name":"step-build-and-push"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"DOCKER_CONFIG"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:securityContext:
                      .: {}
                      f:runAsUser: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-create-dir-builtimage-b844t"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-xtgm6"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-image-digest-exporter-l9pkl"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:19:42Z"
          name: build-push-kaniko-pod-8t7rr
          namespace: arendelle-bqgxw
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: build-push-kaniko
            uid: 0aa67a70-79f8-4370-ba10-3bbbed4aea2a
          resourceVersion: "3886327"
          selfLink: /api/v1/namespaces/arendelle-bqgxw/pods/build-push-kaniko-pod-8t7rr
          uid: 844371a2-aff7-40ab-8348-495a763473dd
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-builtimage-b844t
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/builtImage
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-builtimage-b844t
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-2l4p8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-xtgm6
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/workspace
            - -revision
            - v1.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-xtgm6
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-2l4p8
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-build-and-push
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /kaniko/executor
            - --
            - --dockerfile=Dockerfile
            - --destination=localhost:5000/leeroy-web
            - --context=/workspace/workspace/examples/microservices/leeroy-web
            - --oci-layout-path=$(inputs.resources.builtImage.path)
            - --build-arg=alpine:3.9
            command:
            - /tekton/bin/entrypoint
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: index.docker.io/ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            imagePullPolicy: IfNotPresent
            name: step-build-and-push
            resources: {}
            securityContext:
              runAsUser: 0
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-2l4p8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-image-digest-exporter-l9pkl
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /ko-app/imagedigestexporter
            - --
            - -images
            - '[{"name":"builtImage","type":"image","url":"localhost:5000/leeroy-web","digest":"","OutputImageDir":"/workspace/output/builtImage"}]'
            command:
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imagePullPolicy: IfNotPresent
            name: step-image-digest-exporter-l9pkl
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-2l4p8
              readOnly: true
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/nop-8eac7c133edad5df719dc37b36b62482@sha256:c6acf12a6d572eabade934756e3125bd20ca2c3ebf4018127db0b523b2693545
            imagePullPolicy: IfNotPresent
            name: sidecar-registry
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-2l4p8
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-2l4p8
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: default-token-2l4p8
            secret:
              defaultMode: 420
              secretName: default-token-2l4p8
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:18:54Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:23Z"
            message: 'containers with unready status: [step-create-dir-builtimage-b844t step-git-source-workspace-xtgm6
              step-build-and-push step-image-digest-exporter-l9pkl]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:23Z"
            message: 'containers with unready status: [step-create-dir-builtimage-b844t step-git-source-workspace-xtgm6
              step-build-and-push step-image-digest-exporter-l9pkl]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:18:35Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://2c9fe277d69b3430b06147b9e9c7a34c2314737d064d67ff2523187a1e030724
            image: ppc64le/registry:2
            imageID: docker-pullable://ppc64le/registry@sha256:b30e5b352ab4e523d7a02a0a99ca0dc32b1c61c71507b82c17f26b31c6a75632
            lastState: {}
            name: sidecar-registry
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:19:14Z"
          - containerID: docker://86374c94bba6a331c554ca0e3fd1cd7df9c57e5a27f82d981db07d5994477ad9
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            lastState: {}
            name: step-build-and-push
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://86374c94bba6a331c554ca0e3fd1cd7df9c57e5a27f82d981db07d5994477ad9
                exitCode: 1
                finishedAt: "2021-09-24T08:19:36Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:33.376Z","type":3}]'
                reason: Error
                startedAt: "2021-09-24T08:19:06Z"
          - containerID: docker://5058e5f17bc361edfa39afe9e159d80efc61d4de701b2e1aaaec3423edaba17e
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-builtimage-b844t
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://5058e5f17bc361edfa39afe9e159d80efc61d4de701b2e1aaaec3423edaba17e
                exitCode: 0
                finishedAt: "2021-09-24T08:19:20Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:19.980Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:18:56Z"
          - containerID: docker://581a29c24bdeb19ed64362d245f9eaa90b3a5c065190d34934f7f5c65dd24162
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-xtgm6
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://581a29c24bdeb19ed64362d245f9eaa90b3a5c065190d34934f7f5c65dd24162
                exitCode: 0
                finishedAt: "2021-09-24T08:19:34Z"
                message: '[{"key":"commit","value":"edd1d458902d64e51e17b83514e1fc693c248259","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-24T08:19:20.946Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:19:01Z"
          - containerID: docker://e9e7860c49ca9c6ce6f155b34bc89582be22e596aa95b15b11ec3303788ef862
            image: sha256:6f40bd0d4755ea63b7c947c27d7693efd3c474110f5adf8da91beffc7582df41
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            lastState: {}
            name: step-image-digest-exporter-l9pkl
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://e9e7860c49ca9c6ce6f155b34bc89582be22e596aa95b15b11ec3303788ef862
                exitCode: 1
                finishedAt: "2021-09-24T08:19:36Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:36.475Z","type":3}]'
                reason: Error
                startedAt: "2021-09-24T08:19:11Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://366d49886e2f3a99387515acc0d6017d148a286b90862310183718a62dd68f0f
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://366d49886e2f3a99387515acc0d6017d148a286b90862310183718a62dd68f0f
                exitCode: 0
                finishedAt: "2021-09-24T08:18:49Z"
                reason: Completed
                startedAt: "2021-09-24T08:18:49Z"
          phase: Running
          podIP: 172.20.64.34
          podIPs:
          - ip: 172.20.64.34
          qosClass: BestEffort
          startTime: "2021-09-24T08:18:38Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-bqgxw ###
    panic.go:636: #####################################################
    build_logs.go:37: build logs 
        >>> Container step-create-dir-builtimage-b844t:
        
        >>> Container step-git-source-workspace-xtgm6:
        {"level":"info","ts":1632471569.5658395,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ edd1d458902d64e51e17b83514e1fc693c248259 (grafted, HEAD) in path /workspace/workspace"}
        {"level":"info","ts":1632471569.5926828,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/workspace"}
        
        >>> Container step-build-and-push:
        [36mINFO[0m[0000] Resolved base name golang:1.15 to golang:1.15 
        [36mINFO[0m[0000] Resolved base name $BASE to                  
        [36mINFO[0m[0000] Resolved base name golang:1.15 to golang:1.15 
        [36mINFO[0m[0000] Resolved base name $BASE to                  
        [36mINFO[0m[0000] Retrieving image manifest golang:1.15        
        [36mINFO[0m[0001] Retrieving image manifest golang:1.15        
        [31mERRO[0m[0001] Error while retrieving image from cache:  could not parse reference:  
        [36mINFO[0m[0001] Retrieving image manifest                    
        error building image: could not parse reference: 
        
        >>> Container step-image-digest-exporter-l9pkl:
        2021/09/24 08:19:36 Skipping step because a previous step failed
        
        >>> Container sidecar-registry:
        time="2021-09-24T08:19:15.376326Z" level=info msg="debug server listening localhost:5001" 
        time="2021-09-24T08:19:15.377172Z" level=warning msg="No HTTP secret provided - generated random secret. This may cause problems with uploads if multiple registries are behind a load-balancer. To provide a shared secret, fill in http.secret in the configuration file or set the REGISTRY_HTTP_SECRET environment variable." environment=development go.version=go1.6.2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:15.377234Z" level=info msg="endpoint local-5003 disabled, skipping" environment=development go.version=go1.6.2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:15.377274Z" level=info msg="endpoint local-8083 disabled, skipping" environment=development go.version=go1.6.2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:15.379427Z" level=info msg="using redis blob descriptor cache" environment=development go.version=go1.6.2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:15.379565Z" level=info msg="listening on [::]:5000" environment=development go.version=go1.6.2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:25.379994Z" level=debug msg="filesystem.List(\"/\")" environment=development go.version=go1.6.2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=145µs trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).List" trace.id=cfc9f231-bad7-47ce-8939-82af9cd701e1 trace.line=150 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:34.611012Z" level=debug msg="authorizing request" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=1546cb72-4ca9-4f3c-803e-62ce9833cf47 http.request.method=GET http.request.remoteaddr="127.0.0.1:47198" http.request.uri="/v2/" http.request.useragent="Go-http-client/1.1" instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:34.611104Z" level=info msg="response completed" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=1546cb72-4ca9-4f3c-803e-62ce9833cf47 http.request.method=GET http.request.remoteaddr="127.0.0.1:47198" http.request.uri="/v2/" http.request.useragent="Go-http-client/1.1" http.response.contenttype="application/json; charset=utf-8" http.response.duration=4.014ms http.response.status=200 http.response.written=2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        127.0.0.1 - - [24/Sep/2021:08:19:34 +0000] "GET /v2/ HTTP/1.1" 200 2 "" "Go-http-client/1.1"
        time="2021-09-24T08:19:34.615245Z" level=debug msg="authorizing request" environment=development go.version=go1.6.2 http.request.contenttype="application/json" http.request.host="localhost:5000" http.request.id=8b927a8c-6cd7-407e-bad8-c2f46afde3b0 http.request.method=POST http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry vars.name=leeroy-web version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:34.615356Z" level=debug msg="(*linkedBlobStore).Writer" environment=development go.version=go1.6.2 http.request.contenttype="application/json" http.request.host="localhost:5000" http.request.id=8b927a8c-6cd7-407e-bad8-c2f46afde3b0 http.request.method=POST http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry vars.name=leeroy-web version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.006021Z" level=debug msg="filesystem.PutContent(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677/startedat\")" environment=development go.version=go1.6.2 http.request.contenttype="application/json" http.request.host="localhost:5000" http.request.id=8b927a8c-6cd7-407e-bad8-c2f46afde3b0 http.request.method=POST http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=390.544ms trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).PutContent" trace.id=6bbdfefc-0d75-4361-b437-80575804f1ed trace.line=95 vars.name=leeroy-web version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.006535Z" level=debug msg="filesystem.Writer(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677/data\", false)" environment=development go.version=go1.6.2 http.request.contenttype="application/json" http.request.host="localhost:5000" http.request.id=8b927a8c-6cd7-407e-bad8-c2f46afde3b0 http.request.method=POST http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=319µs trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).Writer" trace.id=30a70820-7543-4ff5-a5a6-25e4ceac689c trace.line=124 vars.name=leeroy-web version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.316127Z" level=debug msg="filesystem.PutContent(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677/hashstates/sha256/0\")" environment=development go.version=go1.6.2 http.request.contenttype="application/json" http.request.host="localhost:5000" http.request.id=8b927a8c-6cd7-407e-bad8-c2f46afde3b0 http.request.method=POST http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=309.055ms trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).PutContent" trace.id=1efa583b-adfd-459c-bfd3-4efa1e55f25c trace.line=95 vars.name=leeroy-web version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.316612Z" level=info msg="response completed" environment=development go.version=go1.6.2 http.request.contenttype="application/json" http.request.host="localhost:5000" http.request.id=8b927a8c-6cd7-407e-bad8-c2f46afde3b0 http.request.method=POST http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/" http.request.useragent=go-containerregistry http.response.duration=702.778ms http.response.status=202 http.response.written=0 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        127.0.0.1 - - [24/Sep/2021:08:19:34 +0000] "POST /v2/leeroy-web/blobs/uploads/ HTTP/1.1" 202 0 "" "go-containerregistry"
        time="2021-09-24T08:19:35.324551Z" level=debug msg="authorizing request" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.324929Z" level=debug msg="(*linkedBlobStore).Resume" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.325331Z" level=debug msg="filesystem.GetContent(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677/startedat\")" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=197µs trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).GetContent" trace.id=3c87e6e0-8b13-4e20-b6d4-6d2447bebb3d trace.line=82 vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.327779Z" level=debug msg="filesystem.Writer(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677/data\", true)" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=113µs trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).Writer" trace.id=3fef77a9-6bfd-437d-80fa-381bf910fc24 trace.line=124 vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.32796Z" level=debug msg="(*blobWriter).Cancel" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.36608Z" level=debug msg="filesystem.PutContent(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677/hashstates/sha256/0\")" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=37.525ms trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).PutContent" trace.id=77ab0639-6018-4b73-9879-a6c2c2d8619f trace.line=95 vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.366179Z" level=error msg="error closing blobwriter: fsync: bad file descriptor" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.366915Z" level=debug msg="filesystem.Delete(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677\")" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=632µs trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).Delete" trace.id=6be957b2-7085-4be2-8049-b876e1c5f8c4 trace.line=177 vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.383315Z" level=debug msg="filesystem.List(\"/\")" environment=development go.version=go1.6.2 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=79µs trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).List" trace.id=472f59d1-487b-4bf3-933b-d6c5d6b5017d trace.line=150 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.536307Z" level=debug msg="filesystem.PutContent(\"/docker/registry/v2/repositories/leeroy-web/_uploads/8165ce7d-3097-4382-835f-3b564ebc2677/hashstates/sha256/0\")" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry trace.duration=169.025ms trace.file="/go/src/github.com/docker/distribution/registry/storage/driver/base/base.go" trace.func="github.com/docker/distribution/registry/storage/driver/base.(*Base).PutContent" trace.id=a7e330ce-97db-4ad6-ab16-e1b61784f645 trace.line=95 vars.name=leeroy-web vars.uuid=8165ce7d-3097-4382-835f-3b564ebc2677 version=v2.5.0-rc.1-67-g4abae2a.m 
        time="2021-09-24T08:19:35.536529Z" level=info msg="response completed" environment=development go.version=go1.6.2 http.request.host="localhost:5000" http.request.id=c679db97-235f-4a68-a8a6-be5e7cf14471 http.request.method=DELETE http.request.remoteaddr="127.0.0.1:47200" http.request.uri="/v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D" http.request.useragent=go-containerregistry http.response.duration=215.297ms http.response.status=204 http.response.written=0 instance.id=75de7347-0c4b-45fa-9d03-7b01d03978fe service=registry version=v2.5.0-rc.1-67-g4abae2a.m 
        127.0.0.1 - - [24/Sep/2021:08:19:35 +0000] "DELETE /v2/leeroy-web/blobs/uploads/8165ce7d-3097-4382-835f-3b564ebc2677?_state=r8im13FfF6-J_zTGCETYOO2hKRMKIaiWMqP6U_H7O8t7Ik5hbWUiOiJsZWVyb3ktd2ViIiwiVVVJRCI6IjgxNjVjZTdkLTMwOTctNDM4Mi04MzVmLTNiNTY0ZWJjMjY3NyIsIk9mZnNldCI6MCwiU3RhcnRlZEF0IjoiMjAyMS0wOS0yNFQwODoxOTozNC42MTUzOTVaIn0%3D HTTP/1.1" 204 0 "" "go-containerregistry"
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    init_test.go:135: Create namespace arendelle-nmhrb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-nmhrb"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
    examples_test.go:169: Deleting namespace arendelle-v5dfz
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    init_test.go:135: Create namespace arendelle-mpq8l to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mpq8l"
=== CONT  TestExamples/v1beta1/taskruns/dind-sidecar
    examples_test.go:169: Deleting namespace arendelle-lhhts
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:135: Create namespace arendelle-l59c6 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-l59c6"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-nnxd8 ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-mpq8l ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-zwx94 ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-vhfcq ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-nmhrb ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-g467j ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-g5d5s ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-l59c6 ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:46Z"
          generateName: custom-volume-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:46Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:07Z"
          name: custom-volume-q4z9p
          namespace: arendelle-nmhrb
          resourceVersion: "3887181"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nmhrb/taskruns/custom-volume-q4z9p
          uid: 7cd22c55-2cf4-4a37-924f-7be5adbd0ba5
        spec:
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo some stuff > /im/a/custom/mount/path/file
              volumeMounts:
              - mountPath: /im/a/custom/mount/path
                name: custom
            - image: ubuntu
              name: read
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /short/and/stout/file | grep stuff
              volumeMounts:
              - mountPath: /short/and/stout
                name: custom
            volumes:
            - emptyDir: {}
              name: custom
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:07Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: custom-volume-q4z9p-pod-tmhtc
          startTime: "2021-09-24T08:19:46Z"
          steps:
          - container: step-write
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: write
            running:
              startedAt: "2021-09-24T08:20:50Z"
          - container: step-read
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: read
            running:
              startedAt: "2021-09-24T08:20:56Z"
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo some stuff > /im/a/custom/mount/path/file
              volumeMounts:
              - mountPath: /im/a/custom/mount/path
                name: custom
            - image: ubuntu
              name: read
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /short/and/stout/file | grep stuff
              volumeMounts:
              - mountPath: /short/and/stout
                name: custom
            volumes:
            - emptyDir: {}
              name: custom
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: a91a76e3766ab0b54ef60e4e0b7cc730d0a3c697a35da92efa5b6b97a82820da
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:46Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: custom-volume-q4z9p
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"7cd22c55-2cf4-4a37-924f-7be5adbd0ba5"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-read"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/short/and/stout"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-write"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/im/a/custom/mount/path"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"custom"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:07Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.23"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:40Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:52Z"
          name: custom-volume-q4z9p-pod-tmhtc
          namespace: arendelle-nmhrb
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: custom-volume-q4z9p
            uid: 7cd22c55-2cf4-4a37-924f-7be5adbd0ba5
          resourceVersion: "3887497"
          selfLink: /api/v1/namespaces/arendelle-nmhrb/pods/custom-volume-q4z9p-pod-tmhtc
          uid: 88129ae3-cac7-46c1-947a-7018b9bb3c20
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-92j66
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /im/a/custom/mount/path
              name: custom
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-8dq4p
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-read
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-jf5gq
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-read
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /short/and/stout
              name: custom
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-8dq4p
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-8dq4p
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-92j66"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaAplY2hvIHNvbWUgc3R1ZmYgPiAvaW0vYS9jdXN0b20vbW91bnQvcGF0aC9maWxlCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-1-jf5gq"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApjYXQgL3Nob3J0L2FuZC9zdG91dC9maWxlIHwgZ3JlcCBzdHVmZgo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-8dq4p
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir: {}
            name: custom
          - name: default-token-8dq4p
            secret:
              defaultMode: 420
              secretName: default-token-8dq4p
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:39Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:28Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:28Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:46Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://4878c919fc29665326f92ff903b37b68d8d9a0ae9039e9bd1cb4d90c245ead8b
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-read
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://4878c919fc29665326f92ff903b37b68d8d9a0ae9039e9bd1cb4d90c245ead8b
                exitCode: 0
                finishedAt: "2021-09-24T08:21:11Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:11.198Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:56Z"
          - containerID: docker://383edfd76bedbe9c04ae2bfef3306ae341605450e751091f437cac5ee0853be4
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://383edfd76bedbe9c04ae2bfef3306ae341605450e751091f437cac5ee0853be4
                exitCode: 0
                finishedAt: "2021-09-24T08:21:10Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:10.658Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:50Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://a7b8017fe08ace7d25276799011c85ef7581c34df498217e82d84e449e8cf283
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://a7b8017fe08ace7d25276799011c85ef7581c34df498217e82d84e449e8cf283
                exitCode: 0
                finishedAt: "2021-09-24T08:20:18Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:18Z"
          - containerID: docker://3586c5cb0cfc7fa37cf728e37663987395aaf5c4ede965e908c33c12a09929ee
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://3586c5cb0cfc7fa37cf728e37663987395aaf5c4ede965e908c33c12a09929ee
                exitCode: 0
                finishedAt: "2021-09-24T08:20:31Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:31Z"
          phase: Succeeded
          podIP: 172.20.64.23
          podIPs:
          - ip: 172.20.64.23
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:47Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-nmhrb ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:29Z"
          generateName: steptemplate-env-merge-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                f:taskSpec:
                  .: {}
                  f:inputs:
                    .: {}
                    f:params: {}
                  f:stepTemplate:
                    .: {}
                    f:env: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:29Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:stepTemplate:
                    .: {}
                    f:env: {}
                    f:name: {}
                    f:resources: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:11Z"
          name: steptemplate-env-merge-5mppk
          namespace: arendelle-vhfcq
          resourceVersion: "3887269"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-vhfcq/taskruns/steptemplate-env-merge-5mppk
          uid: cba993f0-7cdc-40d2-bccf-43b831e31da6
        spec:
          params:
          - name: FOO
            value: foo
          - name: BAR
            value: bar
          serviceAccountName: default
          taskSpec:
            params:
            - description: FOO variable
              name: FOO
              type: string
            - description: BAR variable
              name: BAR
              type: string
            - default: foobar
              description: FOOBAR variable
              name: FOOBAR
              type: string
            stepTemplate:
              env:
              - name: QUX
                value: original
              name: ""
              resources: {}
            steps:
            - env:
              - name: FOO
                value: $(inputs.params.FOO)
              image: ubuntu
              name: foo
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $FOO == "foo" ]]
            - env:
              - name: FOOBAR
                value: $(inputs.params.FOOBAR)
              image: ubuntu
              name: foobar
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $FOOBAR == "foobar" ]]
            - env:
              - name: BAR
                value: $(inputs.params.BAR)
              image: ubuntu
              name: bar
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $BAR == "bar" ]]
            - image: ubuntu
              name: qux-no-override
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $QUX == "original" ]]
            - env:
              - name: QUX
                value: override
              image: ubuntu
              name: qux-override
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $QUX == "override" ]]
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:11Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: steptemplate-env-merge-5mppk-pod-cphzb
          startTime: "2021-09-24T08:19:35Z"
          steps:
          - container: step-foo
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: foo
            running:
              startedAt: "2021-09-24T08:20:18Z"
          - container: step-foobar
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: foobar
            running:
              startedAt: "2021-09-24T08:20:35Z"
          - container: step-bar
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: bar
            running:
              startedAt: "2021-09-24T08:20:49Z"
          - container: step-qux-no-override
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: qux-no-override
            running:
              startedAt: "2021-09-24T08:20:53Z"
          - container: step-qux-override
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: qux-override
            running:
              startedAt: "2021-09-24T08:21:06Z"
          taskSpec:
            params:
            - description: FOO variable
              name: FOO
              type: string
            - description: BAR variable
              name: BAR
              type: string
            - default: foobar
              description: FOOBAR variable
              name: FOOBAR
              type: string
            stepTemplate:
              env:
              - name: QUX
                value: original
              name: ""
              resources: {}
            steps:
            - env:
              - name: FOO
                value: $(inputs.params.FOO)
              image: ubuntu
              name: foo
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $FOO == "foo" ]]
            - env:
              - name: FOOBAR
                value: $(inputs.params.FOOBAR)
              image: ubuntu
              name: foobar
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $FOOBAR == "foobar" ]]
            - env:
              - name: BAR
                value: $(inputs.params.BAR)
              image: ubuntu
              name: bar
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $BAR == "bar" ]]
            - image: ubuntu
              name: qux-no-override
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $QUX == "original" ]]
            - env:
              - name: QUX
                value: override
              image: ubuntu
              name: qux-override
              resources: {}
              script: |
                #!/usr/bin/env bash
                [[ $QUX == "override" ]]
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: b996e16b6ce76a5e9e7e9e6e0f6acf3f6831834f6c93cac1b3abeb4a7cd2ad53
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:35Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: steptemplate-env-merge-5mppk
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"cba993f0-7cdc-40d2-bccf-43b831e31da6"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-bar"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"BAR"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"QUX"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-foo"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"FOO"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"QUX"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-foobar"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"FOOBAR"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"QUX"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-qux-no-override"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"QUX"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-qux-override"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"QUX"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-4"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:11Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:40Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.45"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:50Z"
          name: steptemplate-env-merge-5mppk-pod-cphzb
          namespace: arendelle-vhfcq
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: steptemplate-env-merge-5mppk
            uid: cba993f0-7cdc-40d2-bccf-43b831e31da6
          resourceVersion: "3887490"
          selfLink: /api/v1/namespaces/arendelle-vhfcq/pods/steptemplate-env-merge-5mppk-pod-cphzb
          uid: dc4ebbfc-4afa-45ca-b739-5fac6ef641ba
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-foo
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-67h5z
            - --
            command:
            - /tekton/bin/entrypoint
            env:
            - name: FOO
              value: foo
            - name: QUX
              value: original
            image: ubuntu
            imagePullPolicy: Always
            name: step-foo
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dlhdh
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-foobar
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-n827q
            - --
            command:
            - /tekton/bin/entrypoint
            env:
            - name: FOOBAR
              value: foobar
            - name: QUX
              value: original
            image: ubuntu
            imagePullPolicy: Always
            name: step-foobar
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dlhdh
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-bar
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /tekton/scripts/script-2-pbnqn
            - --
            command:
            - /tekton/bin/entrypoint
            env:
            - name: BAR
              value: bar
            - name: QUX
              value: original
            image: ubuntu
            imagePullPolicy: Always
            name: step-bar
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dlhdh
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-qux-no-override
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /tekton/scripts/script-3-rdb46
            - --
            command:
            - /tekton/bin/entrypoint
            env:
            - name: QUX
              value: original
            image: ubuntu
            imagePullPolicy: Always
            name: step-qux-no-override
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dlhdh
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/3
            - -post_file
            - /tekton/run/4
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-qux-override
            - -step_metadata_dir_link
            - /tekton/steps/4
            - -entrypoint
            - /tekton/scripts/script-4-d2dck
            - --
            command:
            - /tekton/bin/entrypoint
            env:
            - name: QUX
              value: override
            image: ubuntu
            imagePullPolicy: Always
            name: step-qux-override
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-4
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dlhdh
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dlhdh
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-67h5z"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApbWyAkRk9PID09ICJmb28iIF1dCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-1-n827q"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApbWyAkRk9PQkFSID09ICJmb29iYXIiIF1dCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-2-pbnqn"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApbWyAkQkFSID09ICJiYXIiIF1dCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-3-rdb46"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApbWyAkUVVYID09ICJvcmlnaW5hbCIgXV0K
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-4-d2dck"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApbWyAkUVVYID09ICJvdmVycmlkZSIgXV0K
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dlhdh
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-4
          - name: default-token-dlhdh
            secret:
              defaultMode: 420
              secretName: default-token-dlhdh
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:05Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:29Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:29Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:35Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://0062c75d4492287c9f38e3947b05e85f67659dfd90ffdaeec704c8d5f5594a3d
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-bar
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://0062c75d4492287c9f38e3947b05e85f67659dfd90ffdaeec704c8d5f5594a3d
                exitCode: 0
                finishedAt: "2021-09-24T08:21:21Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:20.400Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:49Z"
          - containerID: docker://36c7104bc475c148d7d4227131e255fd27f75058677dde930ba5b252d7bdd39c
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-foo
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://36c7104bc475c148d7d4227131e255fd27f75058677dde930ba5b252d7bdd39c
                exitCode: 0
                finishedAt: "2021-09-24T08:21:19Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:19.568Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:18Z"
          - containerID: docker://fbba2001b08d868b7ef90891c8327f19a4f4cc6479c49ed47d345f5dde5f7f06
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-foobar
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://fbba2001b08d868b7ef90891c8327f19a4f4cc6479c49ed47d345f5dde5f7f06
                exitCode: 0
                finishedAt: "2021-09-24T08:21:21Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:20.104Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:35Z"
          - containerID: docker://ce5dbf3be6dfd4fbcc68ae61b60927dd8524d7944bc36c43c3ddcf90ceae596f
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-qux-no-override
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://ce5dbf3be6dfd4fbcc68ae61b60927dd8524d7944bc36c43c3ddcf90ceae596f
                exitCode: 0
                finishedAt: "2021-09-24T08:21:20Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:20.430Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:53Z"
          - containerID: docker://28d2f99fbac3e4e9bb58086328e3f07243eb3eeda7844b6a5e903be6167b07c3
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-qux-override
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://28d2f99fbac3e4e9bb58086328e3f07243eb3eeda7844b6a5e903be6167b07c3
                exitCode: 0
                finishedAt: "2021-09-24T08:21:22Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:20.612Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:21:06Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://91b31e77df7913c16a6d87112954b71e2d4c2eb1aa850cc3ae10092509c6330d
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://91b31e77df7913c16a6d87112954b71e2d4c2eb1aa850cc3ae10092509c6330d
                exitCode: 0
                finishedAt: "2021-09-24T08:19:45Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:45Z"
          - containerID: docker://2fad9fee653cff164c6f2f4ed133d0806a3d9485872ffb99e09038e54cc69688
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://2fad9fee653cff164c6f2f4ed133d0806a3d9485872ffb99e09038e54cc69688
                exitCode: 0
                finishedAt: "2021-09-24T08:19:50Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:49Z"
          phase: Succeeded
          podIP: 172.20.64.45
          podIPs:
          - ip: 172.20.64.45
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:36Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-vhfcq ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-24T08:19:09Z"
          generateName: retry-example-
          generation: 1
          labels:
            tekton.dev/pipeline: retry-example-f92nq
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:retry-example-f92nq-retry-me-chm92:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:retriesStatus: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:19Z"
          name: retry-example-f92nq
          namespace: arendelle-g5d5s
          resourceVersion: "3887412"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g5d5s/pipelineruns/retry-example-f92nq
          uid: f26f22b1-08fa-4f2d-8964-130ff94e5586
        spec:
          pipelineSpec:
            tasks:
            - name: retry-me
              params:
              - name: pipelineTask-retries
                value: $(context.pipelineTask.retries)
              - name: pipelineTask-retry-count
                value: $(context.task.retry-count)
              retries: 5
              taskSpec:
                metadata: {}
                params:
                - name: pipelineTask-retries
                  type: string
                - name: pipelineTask-retry-count
                  type: string
                spec: null
                steps:
                - image: alpine:3.12.0
                  name: ""
                  resources: {}
                  script: |
                    #!/usr/bin/env sh
                    if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                      echo "This is the last retry."
                      exit 0;
                    fi
                    echo "The PipelineTask has retried $(context.task.retry-count) times."
                    exit 1
            - name: hello-world
              runAfter:
              - retry-me
              taskSpec:
                metadata: {}
                spec: null
                steps:
                - image: busybox
                  name: ""
                  resources: {}
                  script: |
                    echo "hello world"
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:19:09Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 2, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            tasks:
            - name: retry-me
              params:
              - name: pipelineTask-retries
                value: $(context.pipelineTask.retries)
              - name: pipelineTask-retry-count
                value: $(context.task.retry-count)
              retries: 5
              taskSpec:
                metadata: {}
                params:
                - name: pipelineTask-retries
                  type: string
                - name: pipelineTask-retry-count
                  type: string
                spec: null
                steps:
                - image: alpine:3.12.0
                  name: ""
                  resources: {}
                  script: |
                    #!/usr/bin/env sh
                    if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                      echo "This is the last retry."
                      exit 0;
                    fi
                    echo "The PipelineTask has retried $(context.task.retry-count) times."
                    exit 1
            - name: hello-world
              runAfter:
              - retry-me
              taskSpec:
                metadata: {}
                spec: null
                steps:
                - image: busybox
                  name: ""
                  resources: {}
                  script: |
                    echo "hello world"
          startTime: "2021-09-24T08:19:09Z"
          taskRuns:
            retry-example-f92nq-retry-me-chm92:
              pipelineTaskName: retry-me
              status:
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:19Z"
                  message: 'pod status "Initialized":"False"; message: "containers with incomplete
                    status: [place-scripts]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: retry-example-f92nq-retry-me-chm92-pod-wz8cs
                retriesStatus:
                - completionTime: "2021-09-24T08:19:41Z"
                  conditions:
                  - lastTransitionTime: "2021-09-24T08:19:41Z"
                    message: |
                      "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-g5d5s logs retry-example-f92nq-retry-me-chm92-pod-9kttn -c step-unnamed-0
                    reason: Failed
                    status: "False"
                    type: Succeeded
                  podName: retry-example-f92nq-retry-me-chm92-pod-9kttn
                  startTime: "2021-09-24T08:19:09Z"
                  steps:
                  - container: step-unnamed-0
                    imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                    name: unnamed-0
                    terminated:
                      containerID: docker://2ab931336d63c4719f4f73746130399c271fc6eb313e296202c633a426c35a73
                      exitCode: 1
                      finishedAt: "2021-09-24T08:19:33Z"
                      reason: Error
                      startedAt: "2021-09-24T08:19:29Z"
                  taskSpec:
                    params:
                    - name: pipelineTask-retries
                      type: string
                    - name: pipelineTask-retry-count
                      type: string
                    steps:
                    - image: alpine:3.12.0
                      name: ""
                      resources: {}
                      script: |
                        #!/usr/bin/env sh
                        if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                          echo "This is the last retry."
                          exit 0;
                        fi
                        echo "The PipelineTask has retried $(context.task.retry-count) times."
                        exit 1
                - completionTime: "2021-09-24T08:20:55Z"
                  conditions:
                  - lastTransitionTime: "2021-09-24T08:20:55Z"
                    message: |
                      "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-g5d5s logs retry-example-f92nq-retry-me-chm92-pod-llcx2 -c step-unnamed-0
                    reason: Failed
                    status: "False"
                    type: Succeeded
                  podName: retry-example-f92nq-retry-me-chm92-pod-llcx2
                  startTime: "2021-09-24T08:19:41Z"
                  steps:
                  - container: step-unnamed-0
                    imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                    name: unnamed-0
                    terminated:
                      containerID: docker://f74df35075091b8c8d52f33980a7d08b61f3ea379c6a2db3957df7943ce50103
                      exitCode: 1
                      finishedAt: "2021-09-24T08:20:50Z"
                      reason: Error
                      startedAt: "2021-09-24T08:20:50Z"
                  taskSpec:
                    params:
                    - name: pipelineTask-retries
                      type: string
                    - name: pipelineTask-retry-count
                      type: string
                    steps:
                    - image: alpine:3.12.0
                      name: ""
                      resources: {}
                      script: |
                        #!/usr/bin/env sh
                        if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                          echo "This is the last retry."
                          exit 0;
                        fi
                        echo "The PipelineTask has retried $(context.task.retry-count) times."
                        exit 1
                startTime: "2021-09-24T08:20:56Z"
                steps:
                - container: step-unnamed-0
                  name: unnamed-0
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  params:
                  - name: pipelineTask-retries
                    type: string
                  - name: pipelineTask-retry-count
                    type: string
                  steps:
                  - image: alpine:3.12.0
                    name: ""
                    resources: {}
                    script: |
                      #!/usr/bin/env sh
                      if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                        echo "This is the last retry."
                        exit 0;
                      fi
                      echo "The PipelineTask has retried $(context.task.retry-count) times."
                      exit 1
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:09Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-f92nq
            tekton.dev/pipelineRun: retry-example-f92nq
            tekton.dev/pipelineTask: retry-me
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"f26f22b1-08fa-4f2d-8964-130ff94e5586"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:retriesStatus: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:19Z"
          name: retry-example-f92nq-retry-me-chm92
          namespace: arendelle-g5d5s
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: retry-example-f92nq
            uid: f26f22b1-08fa-4f2d-8964-130ff94e5586
          resourceVersion: "3887404"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g5d5s/taskruns/retry-example-f92nq-retry-me-chm92
          uid: 8a30eeb8-795d-4875-81e7-bc584dee7640
        spec:
          params:
          - name: pipelineTask-retries
            value: "5"
          - name: pipelineTask-retry-count
            value: $(context.task.retry-count)
          resources: {}
          serviceAccountName: default
          taskSpec:
            params:
            - name: pipelineTask-retries
              type: string
            - name: pipelineTask-retry-count
              type: string
            steps:
            - image: alpine:3.12.0
              name: ""
              resources: {}
              script: |
                #!/usr/bin/env sh
                if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                  echo "This is the last retry."
                  exit 0;
                fi
                echo "The PipelineTask has retried $(context.task.retry-count) times."
                exit 1
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:19Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-scripts]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: retry-example-f92nq-retry-me-chm92-pod-wz8cs
          retriesStatus:
          - completionTime: "2021-09-24T08:19:41Z"
            conditions:
            - lastTransitionTime: "2021-09-24T08:19:41Z"
              message: |
                "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-g5d5s logs retry-example-f92nq-retry-me-chm92-pod-9kttn -c step-unnamed-0
              reason: Failed
              status: "False"
              type: Succeeded
            podName: retry-example-f92nq-retry-me-chm92-pod-9kttn
            startTime: "2021-09-24T08:19:09Z"
            steps:
            - container: step-unnamed-0
              imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
              name: unnamed-0
              terminated:
                containerID: docker://2ab931336d63c4719f4f73746130399c271fc6eb313e296202c633a426c35a73
                exitCode: 1
                finishedAt: "2021-09-24T08:19:33Z"
                reason: Error
                startedAt: "2021-09-24T08:19:29Z"
            taskSpec:
              params:
              - name: pipelineTask-retries
                type: string
              - name: pipelineTask-retry-count
                type: string
              steps:
              - image: alpine:3.12.0
                name: ""
                resources: {}
                script: |
                  #!/usr/bin/env sh
                  if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                    echo "This is the last retry."
                    exit 0;
                  fi
                  echo "The PipelineTask has retried $(context.task.retry-count) times."
                  exit 1
          - completionTime: "2021-09-24T08:20:55Z"
            conditions:
            - lastTransitionTime: "2021-09-24T08:20:55Z"
              message: |
                "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-g5d5s logs retry-example-f92nq-retry-me-chm92-pod-llcx2 -c step-unnamed-0
              reason: Failed
              status: "False"
              type: Succeeded
            podName: retry-example-f92nq-retry-me-chm92-pod-llcx2
            startTime: "2021-09-24T08:19:41Z"
            steps:
            - container: step-unnamed-0
              imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
              name: unnamed-0
              terminated:
                containerID: docker://f74df35075091b8c8d52f33980a7d08b61f3ea379c6a2db3957df7943ce50103
                exitCode: 1
                finishedAt: "2021-09-24T08:20:50Z"
                reason: Error
                startedAt: "2021-09-24T08:20:50Z"
            taskSpec:
              params:
              - name: pipelineTask-retries
                type: string
              - name: pipelineTask-retry-count
                type: string
              steps:
              - image: alpine:3.12.0
                name: ""
                resources: {}
                script: |
                  #!/usr/bin/env sh
                  if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                    echo "This is the last retry."
                    exit 0;
                  fi
                  echo "The PipelineTask has retried $(context.task.retry-count) times."
                  exit 1
          startTime: "2021-09-24T08:20:56Z"
          steps:
          - container: step-unnamed-0
            name: unnamed-0
            waiting:
              reason: PodInitializing
          taskSpec:
            params:
            - name: pipelineTask-retries
              type: string
            - name: pipelineTask-retry-count
              type: string
            steps:
            - image: alpine:3.12.0
              name: ""
              resources: {}
              script: |
                #!/usr/bin/env sh
                if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                  echo "This is the last retry."
                  exit 0;
                fi
                echo "The PipelineTask has retried $(context.task.retry-count) times."
                exit 1
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 3b7efafdc35142742a286507c06ea46e70fbfc88065d020ddd64b571edd55a20
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:09Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-f92nq
            tekton.dev/pipelineRun: retry-example-f92nq
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-f92nq-retry-me-chm92
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"8a30eeb8-795d-4875-81e7-bc584dee7640"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:19:27Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.55"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:19:41Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:19:42Z"
          name: retry-example-f92nq-retry-me-chm92-pod-9kttn
          namespace: arendelle-g5d5s
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-f92nq-retry-me-chm92
            uid: 8a30eeb8-795d-4875-81e7-bc584dee7640
          resourceVersion: "3886312"
          selfLink: /api/v1/namespaces/arendelle-g5d5s/pods/retry-example-f92nq-retry-me-chm92-pod-9kttn
          uid: 9531375b-b5f5-441c-a276-86ee5ad81111
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-xqpn2
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-xqpn2"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiMCIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgMCB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-5q9wc
            secret:
              defaultMode: 420
              secretName: default-token-5q9wc
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:23Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:41Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:41Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:09Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://2ab931336d63c4719f4f73746130399c271fc6eb313e296202c633a426c35a73
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://2ab931336d63c4719f4f73746130399c271fc6eb313e296202c633a426c35a73
                exitCode: 1
                finishedAt: "2021-09-24T08:19:33Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:29.243Z","type":3}]'
                reason: Error
                startedAt: "2021-09-24T08:19:25Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://8b2073b3ce37ed8769952ba316318633785b95910236aa29ae11e204c1c662fb
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://8b2073b3ce37ed8769952ba316318633785b95910236aa29ae11e204c1c662fb
                exitCode: 0
                finishedAt: "2021-09-24T08:19:18Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:18Z"
          - containerID: docker://5ace704133db638e502208fb6f4f2ff64ac332460079694dc3d44bf93a8a7cd7
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://5ace704133db638e502208fb6f4f2ff64ac332460079694dc3d44bf93a8a7cd7
                exitCode: 0
                finishedAt: "2021-09-24T08:19:22Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:22Z"
          phase: Failed
          podIP: 172.20.64.55
          podIPs:
          - ip: 172.20.64.55
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:10Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 43c4a6c1465b97cc10a73874b81f5c62a70292afd76dbc290a96bb52355e2fc5
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:42Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-f92nq
            tekton.dev/pipelineRun: retry-example-f92nq
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-f92nq-retry-me-chm92
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"8a30eeb8-795d-4875-81e7-bc584dee7640"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:20:41Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:20:55Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.5"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:20:55Z"
          name: retry-example-f92nq-retry-me-chm92-pod-llcx2
          namespace: arendelle-g5d5s
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-f92nq-retry-me-chm92
            uid: 8a30eeb8-795d-4875-81e7-bc584dee7640
          resourceVersion: "3887060"
          selfLink: /api/v1/namespaces/arendelle-g5d5s/pods/retry-example-f92nq-retry-me-chm92-pod-llcx2
          uid: 10337521-a9ad-4a80-9f89-3db09da25a66
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-cz4f2
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-cz4f2"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiMSIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgMSB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-5q9wc
            secret:
              defaultMode: 420
              secretName: default-token-5q9wc
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:15Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:54Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:54Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:42Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://f74df35075091b8c8d52f33980a7d08b61f3ea379c6a2db3957df7943ce50103
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://f74df35075091b8c8d52f33980a7d08b61f3ea379c6a2db3957df7943ce50103
                exitCode: 1
                finishedAt: "2021-09-24T08:20:50Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:20:50.169Z","type":3}]'
                reason: Error
                startedAt: "2021-09-24T08:20:24Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://6bd6494b4554aa6a268c770f21280bda32dc6b60651a4561fbc9f73e17ac5cf6
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://6bd6494b4554aa6a268c770f21280bda32dc6b60651a4561fbc9f73e17ac5cf6
                exitCode: 0
                finishedAt: "2021-09-24T08:19:52Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:52Z"
          - containerID: docker://236e64e9980b69be2c5c6298641c97dae9db993119f958f56ae3a492cf19fe3d
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://236e64e9980b69be2c5c6298641c97dae9db993119f958f56ae3a492cf19fe3d
                exitCode: 0
                finishedAt: "2021-09-24T08:20:14Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:14Z"
          phase: Failed
          podIP: 172.20.64.5
          podIPs:
          - ip: 172.20.64.5
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:42Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: e696eab622151b4dc93e35bd92a7872520740d601e226e23539d2886eb85f74b
            cni.projectcalico.org/podIP: 172.20.64.52/32
            cni.projectcalico.org/podIPs: 172.20.64.52/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:20:56Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-f92nq
            tekton.dev/pipelineRun: retry-example-f92nq
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-f92nq-retry-me-chm92
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"8a30eeb8-795d-4875-81e7-bc584dee7640"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:20:56Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:10Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.52"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:54Z"
          name: retry-example-f92nq-retry-me-chm92-pod-wz8cs
          namespace: arendelle-g5d5s
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-f92nq-retry-me-chm92
            uid: 8a30eeb8-795d-4875-81e7-bc584dee7640
          resourceVersion: "3887515"
          selfLink: /api/v1/namespaces/arendelle-g5d5s/pods/retry-example-f92nq-retry-me-chm92-pod-wz8cs
          uid: 9119795e-4d49-4b55-923b-132abb30c0c6
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-cw9cp
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-cw9cp"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiMiIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgMiB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-5q9wc
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-5q9wc
            secret:
              defaultMode: 420
              secretName: default-token-5q9wc
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:41Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:57Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:57Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:56Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: alpine:3.12.0
            imageID: ""
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://711bd015f67b61b8b866ed1439357260f29a4917efcc23bf942d88036c5f271d
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://711bd015f67b61b8b866ed1439357260f29a4917efcc23bf942d88036c5f271d
                exitCode: 0
                finishedAt: "2021-09-24T08:21:15Z"
                reason: Completed
                startedAt: "2021-09-24T08:21:15Z"
          - containerID: docker://a80d02ad328ff8d13123d6b3947f17771e3151c4e5a5f914ea7abd9cc1c04d30
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://a80d02ad328ff8d13123d6b3947f17771e3151c4e5a5f914ea7abd9cc1c04d30
                exitCode: 0
                finishedAt: "2021-09-24T08:21:28Z"
                reason: Completed
                startedAt: "2021-09-24T08:21:27Z"
          phase: Pending
          podIP: 172.20.64.52
          podIPs:
          - ip: 172.20.64.52
          qosClass: BestEffort
          startTime: "2021-09-24T08:20:57Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-g5d5s ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-24T08:20:26Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:20:26Z"
          name: pipeline-to-list-files
          namespace: arendelle-mpq8l
          resourceVersion: "3886745"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-mpq8l/pipelines/pipeline-to-list-files
          uid: 32643548-0224-4810-bdfe-e9595d41809c
        spec:
          params:
          - default: README.md
            name: path
            type: string
          resources:
          - name: pipeline-git
            type: git
          tasks:
          - name: list-files
            resources:
              inputs:
              - name: pipeline-git
                resource: pipeline-git
              outputs:
              - name: pipeline-git
                resource: pipeline-git
            taskRef:
              kind: Task
              name: task-to-list-files
          - conditions:
            - conditionRef: always-true-sample-condition
              resources:
              - name: pipeline-git
                resource: pipeline-git
            name: conditional-list-files
            resources:
              inputs:
              - name: pipeline-git
                resource: pipeline-git
              outputs:
              - name: pipeline-git
                resource: pipeline-git
            taskRef:
              kind: Task
              name: task-to-list-files
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-24T08:20:26Z"
          generation: 1
          labels:
            tekton.dev/pipeline: pipeline-to-list-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:20:26Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:demo-pipelinerun-with-resourcespec-conditional-list-files-q6x8b:
                    .: {}
                    f:conditionChecks:
                      .: {}
                      f:demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r:
                        .: {}
                        f:conditionName: {}
                        f:status:
                          .: {}
                          f:check:
                            .: {}
                            f:running:
                              .: {}
                              f:startedAt: {}
                          f:conditions: {}
                          f:podName: {}
                          f:startTime: {}
                    f:pipelineTaskName: {}
                  f:demo-pipelinerun-with-resourcespec-list-files-bcqxr:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:18Z"
          name: demo-pipelinerun-with-resourcespec
          namespace: arendelle-mpq8l
          resourceVersion: "3887394"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-mpq8l/pipelineruns/demo-pipelinerun-with-resourcespec
          uid: 162e8fd8-3fbb-4313-be7c-2ac294be5eaf
        spec:
          pipelineRef:
            name: pipeline-to-list-files
          resources:
          - name: pipeline-git
            resourceSpec:
              params:
              - name: revision
                value: main
              - name: url
                value: https://github.com/tektoncd/pipeline
              type: git
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:20:27Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 2, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: README.md
              name: path
              type: string
            resources:
            - name: pipeline-git
              type: git
            tasks:
            - name: list-files
              resources:
                inputs:
                - name: pipeline-git
                  resource: pipeline-git
                outputs:
                - name: pipeline-git
                  resource: pipeline-git
              taskRef:
                kind: Task
                name: task-to-list-files
            - conditions:
              - conditionRef: always-true-sample-condition
                resources:
                - name: pipeline-git
                  resource: pipeline-git
              name: conditional-list-files
              resources:
                inputs:
                - name: pipeline-git
                  resource: pipeline-git
                outputs:
                - name: pipeline-git
                  resource: pipeline-git
              taskRef:
                kind: Task
                name: task-to-list-files
          startTime: "2021-09-24T08:20:27Z"
          taskRuns:
            demo-pipelinerun-with-resourcespec-conditional-list-files-q6x8b:
              conditionChecks:
                demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r:
                  conditionName: always-true-sample-condition-0
                  status:
                    check:
                      running:
                        startedAt: "2021-09-24T08:21:15Z"
                    conditions:
                    - lastTransitionTime: "2021-09-24T08:21:17Z"
                      message: Not all Steps in the Task have finished executing
                      reason: Running
                      status: Unknown
                      type: Succeeded
                    podName: demo-pipelinerun-with-resourcespec-conditional-list-files-vj5p2
                    startTime: "2021-09-24T08:20:27Z"
              pipelineTaskName: conditional-list-files
            demo-pipelinerun-with-resourcespec-list-files-bcqxr:
              pipelineTaskName: list-files
              status:
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:18Z"
                  message: Not all Steps in the Task have finished executing
                  reason: Running
                  status: Unknown
                  type: Succeeded
                podName: demo-pipelinerun-with-resourcespec-list-files-bcqxr-pod-869ht
                startTime: "2021-09-24T08:20:27Z"
                steps:
                - container: step-create-dir-pipeline-git-xncfx
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-pipeline-git-xncfx
                  running:
                    startedAt: "2021-09-24T08:20:57Z"
                - container: step-git-source-pipeline-git-89bzx
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-pipeline-git-89bzx
                  running:
                    startedAt: "2021-09-24T08:21:07Z"
                - container: step-list
                  imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
                  name: list
                  running:
                    startedAt: "2021-09-24T08:21:09Z"
                - container: step-source-mkdir-pipeline-git-xrrrp
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-mkdir-pipeline-git-xrrrp
                  running:
                    startedAt: "2021-09-24T08:21:14Z"
                - container: step-source-copy-pipeline-git-p8qw2
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-copy-pipeline-git-p8qw2
                  running:
                    startedAt: "2021-09-24T08:21:17Z"
                taskSpec:
                  resources:
                    inputs:
                    - name: pipeline-git
                      type: git
                    outputs:
                    - name: pipeline-git
                      type: git
                  steps:
                  - args:
                    - -c
                    - |
                      ls -al $(resources.inputs.pipeline-git.path)
                    command:
                    - bash
                    image: ubuntu
                    name: list
                    resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:20:25Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:20:25Z"
          name: task-to-list-files
          namespace: arendelle-mpq8l
          resourceVersion: "3886740"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-mpq8l/tasks/task-to-list-files
          uid: 64fe13f7-bc68-45f3-bfa8-6203a359cc8c
        spec:
          resources:
            inputs:
            - name: pipeline-git
              type: git
            outputs:
            - name: pipeline-git
              type: git
          steps:
          - args:
            - -c
            - |
              ls -al $(resources.inputs.pipeline-git.path)
            command:
            - bash
            image: ubuntu
            name: list
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:20:27Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r
            tekton.dev/conditionName: always-true-sample-condition
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: conditional-list-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"162e8fd8-3fbb-4313-be7c-2ac294be5eaf"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:17Z"
          name: demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r
          namespace: arendelle-mpq8l
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipelinerun-with-resourcespec
            uid: 162e8fd8-3fbb-4313-be7c-2ac294be5eaf
          resourceVersion: "3887367"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-mpq8l/taskruns/demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r
          uid: 2e423cc4-7e7e-4f99-813f-76e3ec2c2810
        spec:
          resources:
            inputs:
            - name: pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
          serviceAccountName: default
          taskSpec:
            resources:
              inputs:
              - name: pipeline-git
                type: git
            steps:
            - args:
              - -c
              - |
                echo "Hello from Tekton Pipeline!"
              command:
              - bash
              image: ubuntu
              name: condition-check-always-true-sample-condition
              resources: {}
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:17Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: demo-pipelinerun-with-resourcespec-conditional-list-files-vj5p2
          startTime: "2021-09-24T08:20:27Z"
          steps:
          - container: step-git-source-pipeline-git-q7f9v
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-pipeline-git-q7f9v
            running:
              startedAt: "2021-09-24T08:21:08Z"
          - container: step-condition-check-always-true-sample-condition
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: condition-check-always-true-sample-condition
            running:
              startedAt: "2021-09-24T08:21:15Z"
          taskSpec:
            resources:
              inputs:
              - name: pipeline-git
                type: git
            steps:
            - args:
              - -c
              - |
                echo "Hello from Tekton Pipeline!"
              command:
              - bash
              image: ubuntu
              name: condition-check-always-true-sample-condition
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:20:27Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: list-files
            tekton.dev/task: task-to-list-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"162e8fd8-3fbb-4313-be7c-2ac294be5eaf"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:18Z"
          name: demo-pipelinerun-with-resourcespec-list-files-bcqxr
          namespace: arendelle-mpq8l
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipelinerun-with-resourcespec
            uid: 162e8fd8-3fbb-4313-be7c-2ac294be5eaf
          resourceVersion: "3887392"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-mpq8l/taskruns/demo-pipelinerun-with-resourcespec-list-files-bcqxr
          uid: b9a8f8da-d99f-4a52-be56-4a73949da19f
        spec:
          resources:
            inputs:
            - name: pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
            outputs:
            - name: pipeline-git
              paths:
              - /pvc/list-files/pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
          serviceAccountName: default
          taskRef:
            kind: Task
            name: task-to-list-files
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:18Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: demo-pipelinerun-with-resourcespec-list-files-bcqxr-pod-869ht
          startTime: "2021-09-24T08:20:27Z"
          steps:
          - container: step-create-dir-pipeline-git-xncfx
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-pipeline-git-xncfx
            running:
              startedAt: "2021-09-24T08:20:57Z"
          - container: step-git-source-pipeline-git-89bzx
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-pipeline-git-89bzx
            running:
              startedAt: "2021-09-24T08:21:07Z"
          - container: step-list
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: list
            running:
              startedAt: "2021-09-24T08:21:09Z"
          - container: step-source-mkdir-pipeline-git-xrrrp
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-mkdir-pipeline-git-xrrrp
            running:
              startedAt: "2021-09-24T08:21:14Z"
          - container: step-source-copy-pipeline-git-p8qw2
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-copy-pipeline-git-p8qw2
            running:
              startedAt: "2021-09-24T08:21:17Z"
          taskSpec:
            resources:
              inputs:
              - name: pipeline-git
                type: git
              outputs:
              - name: pipeline-git
                type: git
            steps:
            - args:
              - -c
              - |
                ls -al $(resources.inputs.pipeline-git.path)
              command:
              - bash
              image: ubuntu
              name: list
              resources: {}
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: d8178bcdd7effeaab5a9db08e14455a8217cb72586f2c95c0de2bdb1385400a0
            cni.projectcalico.org/podIP: 172.20.64.51/32
            cni.projectcalico.org/podIPs: 172.20.64.51/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:20:29Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r
            tekton.dev/conditionName: always-true-sample-condition
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: conditional-list-files
            tekton.dev/taskRun: demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:20:50Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"2e423cc4-7e7e-4f99-813f-76e3ec2c2810"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-condition-check-always-true-sample-condition"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-pipeline-git-q7f9v"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:17Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.51"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:17Z"
          name: demo-pipelinerun-with-resourcespec-conditional-list-files-vj5p2
          namespace: arendelle-mpq8l
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipelinerun-with-resourcespec-conditional-list-files-dvj5r
            uid: 2e423cc4-7e7e-4f99-813f-76e3ec2c2810
          resourceVersion: "3887365"
          selfLink: /api/v1/namespaces/arendelle-mpq8l/pods/demo-pipelinerun-with-resourcespec-conditional-list-files-vj5p2
          uid: 70467b4f-b6b6-47ab-a454-60947b742a99
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-pipeline-git-q7f9v
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/pipeline-git
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-pipeline-git-q7f9v
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-condition-check-always-true-sample-condition
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - bash
            - --
            - -c
            - |
              echo "Hello from Tekton Pipeline!"
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-condition-check-always-true-sample-condition
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-psvlf
            secret:
              defaultMode: 420
              secretName: default-token-psvlf
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:06Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:17Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:17Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://5231209dba0eccdbc42119edf4418138a39724d7ca1e51c69d1f587cee7dcfa6
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-condition-check-always-true-sample-condition
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:21:15Z"
          - containerID: docker://f907485a9fe2ca8758d5f363673d581933e7035d7ee5dc997b5bc631208c5c73
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-pipeline-git-q7f9v
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:21:08Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://218b3b8fa9f47d76780da250934df737d69003e2c5f4964805265b7aeda07c5d
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://218b3b8fa9f47d76780da250934df737d69003e2c5f4964805265b7aeda07c5d
                exitCode: 0
                finishedAt: "2021-09-24T08:20:53Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:53Z"
          phase: Running
          podIP: 172.20.64.51
          podIPs:
          - ip: 172.20.64.51
          qosClass: BestEffort
          startTime: "2021-09-24T08:20:35Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 000876b116086ca0e63dfc41b3a46203f0db652e5b9322b7d65511c4070299cb
            cni.projectcalico.org/podIP: 172.20.64.37/32
            cni.projectcalico.org/podIPs: 172.20.64.37/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:20:29Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: list-files
            tekton.dev/task: task-to-list-files
            tekton.dev/taskRun: demo-pipelinerun-with-resourcespec-list-files-bcqxr
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:20:50Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"b9a8f8da-d99f-4a52-be56-4a73949da19f"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-create-dir-pipeline-git-xncfx"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-pipeline-git-89bzx"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-list"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-copy-pipeline-git-p8qw2"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-mkdir-pipeline-git-xrrrp"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"demo-pipelinerun-with-resourcespec-pvc"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-4"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:18Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.37"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:18Z"
          name: demo-pipelinerun-with-resourcespec-list-files-bcqxr-pod-869ht
          namespace: arendelle-mpq8l
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipelinerun-with-resourcespec-list-files-bcqxr
            uid: b9a8f8da-d99f-4a52-be56-4a73949da19f
          resourceVersion: "3887389"
          selfLink: /api/v1/namespaces/arendelle-mpq8l/pods/demo-pipelinerun-with-resourcespec-list-files-bcqxr-pod-869ht
          uid: 61603d26-52f6-42ca-87ec-04914d3875fc
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-pipeline-git-xncfx
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-pipeline-git-xncfx
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-pipeline-git-89bzx
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/pipeline-git
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-pipeline-git-89bzx
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-list
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - bash
            - --
            - -c
            - |
              ls -al /workspace/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-list
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-mkdir-pipeline-git-xrrrp
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - mkdir
            - --
            - -p
            - /pvc/list-files/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-mkdir-pipeline-git-xrrrp
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: demo-pipelinerun-with-resourcespec-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/3
            - -post_file
            - /tekton/run/4
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-copy-pipeline-git-p8qw2
            - -step_metadata_dir_link
            - /tekton/steps/4
            - -entrypoint
            - cp
            - --
            - -r
            - /workspace/output/pipeline-git/.
            - /pvc/list-files/pipeline-git
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-copy-pipeline-git-p8qw2
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: demo-pipelinerun-with-resourcespec-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-4
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-psvlf
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-4
          - name: demo-pipelinerun-with-resourcespec-pvc
            persistentVolumeClaim:
              claimName: demo-pipelinerun-with-resourcespec-pvc
          - name: default-token-psvlf
            secret:
              defaultMode: 420
              secretName: default-token-psvlf
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:54Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:18Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:18Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://cb74a22db60b00681e48abcd6190f2dfad32c0b49456ded1cf5aabe7a5aff94c
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-pipeline-git-xncfx
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:20:57Z"
          - containerID: docker://5203254d5df34bb3bd1f660867c115bc42434313ec0f9452889f97b1e4f5b9b7
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-pipeline-git-89bzx
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:21:07Z"
          - containerID: docker://95e466f0e7e80dabf6257f9165444bb68192891fa0d0bf60df30688bc1e9e117
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-list
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:21:09Z"
          - containerID: docker://1f6300bf9e9d6895f086ea1561b4482057f040eff9e8b94be34f87b5e502ec9f
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-copy-pipeline-git-p8qw2
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:21:17Z"
          - containerID: docker://579bb2439083616e90e5622b251d787e9fe8fd664e8110c4361c9372f04ca281
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-mkdir-pipeline-git-xrrrp
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:21:14Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://ef57b5925704ff8da60435df2bb3511d48088c3453b256b5a0ac5e60cd1996ee
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://ef57b5925704ff8da60435df2bb3511d48088c3453b256b5a0ac5e60cd1996ee
                exitCode: 0
                finishedAt: "2021-09-24T08:20:53Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:53Z"
          phase: Running
          podIP: 172.20.64.37
          podIPs:
          - ip: 172.20.64.37
          qosClass: BestEffort
          startTime: "2021-09-24T08:20:37Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-mpq8l ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-24T08:19:36Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:36Z"
          name: sum-and-multiply-pipeline
          namespace: arendelle-g467j
          resourceVersion: "3886175"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g467j/pipelines/sum-and-multiply-pipeline
          uid: 2d222b02-a7d9-4441-a9f2-171193e47736
        spec:
          params:
          - default: "1"
            name: a
            type: string
          - default: "1"
            name: b
            type: string
          tasks:
          - name: sum-inputs
            params:
            - name: a
              value: $(params.a)
            - name: b
              value: $(params.b)
            taskRef:
              kind: Task
              name: sum
          - name: multiply-inputs
            params:
            - name: a
              value: $(params.a)
            - name: b
              value: $(params.b)
            taskRef:
              kind: Task
              name: multiply
          - name: sum-and-multiply
            params:
            - name: a
              value: $(tasks.multiply-inputs.results.product)$(tasks.sum-inputs.results.sum)
            - name: b
              value: $(tasks.multiply-inputs.results.product)$(tasks.sum-inputs.results.sum)
            taskRef:
              kind: Task
              name: sum
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-24T08:19:37Z"
          generateName: sum-and-multiply-pipeline-run-
          generation: 1
          labels:
            tekton.dev/pipeline: sum-and-multiply-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:params: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:37Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskResults: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:results: {}
                        f:steps: {}
                  f:sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dhx:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:results: {}
                        f:steps: {}
                  f:sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskResults: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:results: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:08Z"
          name: sum-and-multiply-pipeline-run-6dk8g
          namespace: arendelle-g467j
          resourceVersion: "3887210"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g467j/pipelineruns/sum-and-multiply-pipeline-run-6dk8g
          uid: 9b161b5e-6629-4888-8073-5aa9edaa2a29
        spec:
          params:
          - name: a
            value: "2"
          - name: b
            value: "10"
          pipelineRef:
            name: sum-and-multiply-pipeline
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:05Z"
            message: 'Tasks Completed: 2 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: "1"
              name: a
              type: string
            - default: "1"
              name: b
              type: string
            tasks:
            - name: sum-inputs
              params:
              - name: a
                value: $(params.a)
              - name: b
                value: $(params.b)
              taskRef:
                kind: Task
                name: sum
            - name: multiply-inputs
              params:
              - name: a
                value: $(params.a)
              - name: b
                value: $(params.b)
              taskRef:
                kind: Task
                name: multiply
            - name: sum-and-multiply
              params:
              - name: a
                value: $(tasks.multiply-inputs.results.product)$(tasks.sum-inputs.results.sum)
              - name: b
                value: $(tasks.multiply-inputs.results.product)$(tasks.sum-inputs.results.sum)
              taskRef:
                kind: Task
                name: sum
          startTime: "2021-09-24T08:19:38Z"
          taskRuns:
            sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4:
              pipelineTaskName: multiply-inputs
              status:
                completionTime: "2021-09-24T08:21:03Z"
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:03Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4-b7vms
                startTime: "2021-09-24T08:19:41Z"
                steps:
                - container: step-product
                  imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
                  name: product
                  terminated:
                    containerID: docker://f111eb6f9c32c0a0e0ec6e78730a62e884af5e7b626ed2086e9791eab3b7fec5
                    exitCode: 0
                    finishedAt: "2021-09-24T08:20:53Z"
                    message: '[{"key":"product","value":"20","type":1}]'
                    reason: Completed
                    startedAt: "2021-09-24T08:20:52Z"
                taskResults:
                - name: product
                  value: "20"
                taskSpec:
                  params:
                  - default: "1"
                    description: The first integer
                    name: a
                    type: string
                  - default: "1"
                    description: The second integer
                    name: b
                    type: string
                  results:
                  - description: The product of the two provided integers
                    name: product
                  steps:
                  - image: bash:latest
                    name: product
                    resources: {}
                    script: |
                      #!/usr/bin/env bash
                      echo -n $(( "$(params.a)" * "$(params.b)" )) | tee $(results.product.path)
            sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dhx:
              pipelineTaskName: sum-and-multiply
              status:
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:08Z"
                  message: 'pod status "Initialized":"False"; message: "containers with incomplete
                    status: [place-tools place-scripts]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dh-hscdg
                startTime: "2021-09-24T08:21:05Z"
                steps:
                - container: step-sum
                  name: sum
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  params:
                  - default: "1"
                    description: The first integer
                    name: a
                    type: string
                  - default: "1"
                    description: The second integer
                    name: b
                    type: string
                  results:
                  - description: The sum of the two provided integers
                    name: sum
                  steps:
                  - image: bash:latest
                    name: sum
                    resources: {}
                    script: |
                      #!/usr/bin/env bash
                      echo -n $(( "$(params.a)" + "$(params.b)" )) | tee $(results.sum.path)
            sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7:
              pipelineTaskName: sum-inputs
              status:
                completionTime: "2021-09-24T08:20:54Z"
                conditions:
                - lastTransitionTime: "2021-09-24T08:20:54Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7-pod-hf586
                startTime: "2021-09-24T08:19:38Z"
                steps:
                - container: step-sum
                  imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
                  name: sum
                  terminated:
                    containerID: docker://4759a08a8fb8892640b026842a0b239ce591e3de38995b5e3058347b9df22c1f
                    exitCode: 0
                    finishedAt: "2021-09-24T08:20:50Z"
                    message: '[{"key":"sum","value":"12","type":1}]'
                    reason: Completed
                    startedAt: "2021-09-24T08:20:50Z"
                taskResults:
                - name: sum
                  value: "12"
                taskSpec:
                  params:
                  - default: "1"
                    description: The first integer
                    name: a
                    type: string
                  - default: "1"
                    description: The second integer
                    name: b
                    type: string
                  results:
                  - description: The sum of the two provided integers
                    name: sum
                  steps:
                  - image: bash:latest
                    name: sum
                    resources: {}
                    script: |
                      #!/usr/bin/env bash
                      echo -n $(( "$(params.a)" + "$(params.b)" )) | tee $(results.sum.path)
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          annotations:
            description: |
              A simple task that multiplies the two provided integers
          creationTimestamp: "2021-09-24T08:19:37Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
              f:spec:
                .: {}
                f:params: {}
                f:results: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:37Z"
          name: multiply
          namespace: arendelle-g467j
          resourceVersion: "3886188"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g467j/tasks/multiply
          uid: e8db7d92-c261-4d4a-b423-2a36c88ced2b
        spec:
          params:
          - default: "1"
            description: The first integer
            name: a
            type: string
          - default: "1"
            description: The second integer
            name: b
            type: string
          results:
          - description: The product of the two provided integers
            name: product
          steps:
          - image: bash:latest
            name: product
            resources: {}
            script: |
              #!/usr/bin/env bash
              echo -n $(( "$(params.a)" * "$(params.b)" )) | tee $(results.product.path)
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          annotations:
            description: |
              A simple task that sums the two provided integers
          creationTimestamp: "2021-09-24T08:19:37Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
              f:spec:
                .: {}
                f:params: {}
                f:results: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:37Z"
          name: sum
          namespace: arendelle-g467j
          resourceVersion: "3886184"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g467j/tasks/sum
          uid: ae37399b-505a-4953-b90c-44eb97ae9933
        spec:
          params:
          - default: "1"
            description: The first integer
            name: a
            type: string
          - default: "1"
            description: The second integer
            name: b
            type: string
          results:
          - description: The sum of the two provided integers
            name: sum
          steps:
          - image: bash:latest
            name: sum
            resources: {}
            script: |
              #!/usr/bin/env bash
              echo -n $(( "$(params.a)" + "$(params.b)" )) | tee $(results.sum.path)
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            description: |
              A simple task that multiplies the two provided integers
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:38Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sum-and-multiply-pipeline
            tekton.dev/pipelineRun: sum-and-multiply-pipeline-run-6dk8g
            tekton.dev/pipelineTask: multiply-inputs
            tekton.dev/task: multiply
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"9b161b5e-6629-4888-8073-5aa9edaa2a29"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskResults: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:results: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:03Z"
          name: sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4
          namespace: arendelle-g467j
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: sum-and-multiply-pipeline-run-6dk8g
            uid: 9b161b5e-6629-4888-8073-5aa9edaa2a29
          resourceVersion: "3887123"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g467j/taskruns/sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4
          uid: 29fa3607-4b14-468d-bda0-e4851c65c69e
        spec:
          params:
          - name: a
            value: "2"
          - name: b
            value: "10"
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: Task
            name: multiply
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-24T08:21:03Z"
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:03Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4-b7vms
          startTime: "2021-09-24T08:19:41Z"
          steps:
          - container: step-product
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            name: product
            terminated:
              containerID: docker://f111eb6f9c32c0a0e0ec6e78730a62e884af5e7b626ed2086e9791eab3b7fec5
              exitCode: 0
              finishedAt: "2021-09-24T08:20:53Z"
              message: '[{"key":"product","value":"20","type":1}]'
              reason: Completed
              startedAt: "2021-09-24T08:20:52Z"
          taskResults:
          - name: product
            value: "20"
          taskSpec:
            params:
            - default: "1"
              description: The first integer
              name: a
              type: string
            - default: "1"
              description: The second integer
              name: b
              type: string
            results:
            - description: The product of the two provided integers
              name: product
            steps:
            - image: bash:latest
              name: product
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo -n $(( "$(params.a)" * "$(params.b)" )) | tee $(results.product.path)
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            description: |
              A simple task that sums the two provided integers
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:05Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sum-and-multiply-pipeline
            tekton.dev/pipelineRun: sum-and-multiply-pipeline-run-6dk8g
            tekton.dev/pipelineTask: sum-and-multiply
            tekton.dev/task: sum
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"9b161b5e-6629-4888-8073-5aa9edaa2a29"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:results: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:37Z"
          name: sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dhx
          namespace: arendelle-g467j
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: sum-and-multiply-pipeline-run-6dk8g
            uid: 9b161b5e-6629-4888-8073-5aa9edaa2a29
          resourceVersion: "3887470"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g467j/taskruns/sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dhx
          uid: f4a069b4-366b-4912-92d4-794f3c6d240f
        spec:
          params:
          - name: a
            value: "2012"
          - name: b
            value: "2012"
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: Task
            name: sum
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:37Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-scripts]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dh-hscdg
          startTime: "2021-09-24T08:21:05Z"
          steps:
          - container: step-sum
            name: sum
            waiting:
              reason: PodInitializing
          taskSpec:
            params:
            - default: "1"
              description: The first integer
              name: a
              type: string
            - default: "1"
              description: The second integer
              name: b
              type: string
            results:
            - description: The sum of the two provided integers
              name: sum
            steps:
            - image: bash:latest
              name: sum
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo -n $(( "$(params.a)" + "$(params.b)" )) | tee $(results.sum.path)
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            description: |
              A simple task that sums the two provided integers
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:38Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sum-and-multiply-pipeline
            tekton.dev/pipelineRun: sum-and-multiply-pipeline-run-6dk8g
            tekton.dev/pipelineTask: sum-inputs
            tekton.dev/task: sum
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"9b161b5e-6629-4888-8073-5aa9edaa2a29"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskResults: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:results: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:20:54Z"
          name: sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7
          namespace: arendelle-g467j
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: sum-and-multiply-pipeline-run-6dk8g
            uid: 9b161b5e-6629-4888-8073-5aa9edaa2a29
          resourceVersion: "3887049"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-g467j/taskruns/sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7
          uid: 53a75ab1-a8be-4fd5-967c-2179a9a9085b
        spec:
          params:
          - name: a
            value: "2"
          - name: b
            value: "10"
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: Task
            name: sum
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-24T08:20:54Z"
          conditions:
          - lastTransitionTime: "2021-09-24T08:20:54Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7-pod-hf586
          startTime: "2021-09-24T08:19:38Z"
          steps:
          - container: step-sum
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            name: sum
            terminated:
              containerID: docker://4759a08a8fb8892640b026842a0b239ce591e3de38995b5e3058347b9df22c1f
              exitCode: 0
              finishedAt: "2021-09-24T08:20:50Z"
              message: '[{"key":"sum","value":"12","type":1}]'
              reason: Completed
              startedAt: "2021-09-24T08:20:50Z"
          taskResults:
          - name: sum
            value: "12"
          taskSpec:
            params:
            - default: "1"
              description: The first integer
              name: a
              type: string
            - default: "1"
              description: The second integer
              name: b
              type: string
            results:
            - description: The sum of the two provided integers
              name: sum
            steps:
            - image: bash:latest
              name: sum
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo -n $(( "$(params.a)" + "$(params.b)" )) | tee $(results.sum.path)
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: e9290dd4e484c15820f04b7c8c8610467bc1509d64759927760b851ea3655de5
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            description: |
              A simple task that multiplies the two provided integers
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:40Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sum-and-multiply-pipeline
            tekton.dev/pipelineRun: sum-and-multiply-pipeline-run-6dk8g
            tekton.dev/pipelineTask: multiply-inputs
            tekton.dev/task: multiply
            tekton.dev/taskRun: sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"29fa3607-4b14-468d-bda0-e4851c65c69e"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-product"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:20:49Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.26"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:20:57Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:05Z"
          name: sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4-b7vms
          namespace: arendelle-g467j
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4
            uid: 29fa3607-4b14-468d-bda0-e4851c65c69e
          resourceVersion: "3887132"
          selfLink: /api/v1/namespaces/arendelle-g467j/pods/sum-and-multiply-pipeline-run-6dk8g-multiply-inputs-629q4-b7vms
          uid: 496f7447-e3c8-47f0-9f43-fcf38caa35d5
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-product
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -results
            - product
            - -entrypoint
            - /tekton/scripts/script-0-hjbqc
            - --
            command:
            - /tekton/bin/entrypoint
            image: bash:latest
            imagePullPolicy: Always
            name: step-product
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-hjbqc"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaAplY2hvIC1uICQoKCAiMiIgKiAiMTAiICkpIHwgdGVlIC90ZWt0b24vcmVzdWx0cy9wcm9kdWN0Cg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-cbddz
            secret:
              defaultMode: 420
              secretName: default-token-cbddz
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:22Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:57Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:57Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:40Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://f111eb6f9c32c0a0e0ec6e78730a62e884af5e7b626ed2086e9791eab3b7fec5
            image: bash:5.1.8
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            lastState: {}
            name: step-product
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://f111eb6f9c32c0a0e0ec6e78730a62e884af5e7b626ed2086e9791eab3b7fec5
                exitCode: 0
                finishedAt: "2021-09-24T08:20:53Z"
                message: '[{"key":"product","value":"20","type":1},{"key":"StartedAt","value":"2021-09-24T08:20:52.981Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:39Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://a7a327bd78662234c06263df4ea885ea7928ea86442e646946d8fcf52143e9a9
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://a7a327bd78662234c06263df4ea885ea7928ea86442e646946d8fcf52143e9a9
                exitCode: 0
                finishedAt: "2021-09-24T08:19:49Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:49Z"
          - containerID: docker://201cecd7b76f1749a630680ce4b4bbedc5ef7c6c92d40e30a8bd8b677f285ee5
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://201cecd7b76f1749a630680ce4b4bbedc5ef7c6c92d40e30a8bd8b677f285ee5
                exitCode: 0
                finishedAt: "2021-09-24T08:20:15Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:15Z"
          phase: Succeeded
          podIP: 172.20.64.26
          podIPs:
          - ip: 172.20.64.26
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:41Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 8f59dbf89b04d153f55246c34cb74a57336a51ba1feee3d32b81013105db8a33
            cni.projectcalico.org/podIP: 172.20.64.22/32
            cni.projectcalico.org/podIPs: 172.20.64.22/32
            description: |
              A simple task that sums the two provided integers
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:07Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sum-and-multiply-pipeline
            tekton.dev/pipelineRun: sum-and-multiply-pipeline-run-6dk8g
            tekton.dev/pipelineTask: sum-and-multiply
            tekton.dev/task: sum
            tekton.dev/taskRun: sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dhx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"f4a069b4-366b-4912-92d4-794f3c6d240f"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-sum"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:07Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:15Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.22"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:28Z"
          name: sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dh-hscdg
          namespace: arendelle-g467j
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dhx
            uid: f4a069b4-366b-4912-92d4-794f3c6d240f
          resourceVersion: "3887461"
          selfLink: /api/v1/namespaces/arendelle-g467j/pods/sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dh-hscdg
          uid: 9f49fda9-48bf-4fb0-ab42-30ff20deafd8
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-sum
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -results
            - sum
            - -entrypoint
            - /tekton/scripts/script-0-vw9c5
            - --
            command:
            - /tekton/bin/entrypoint
            image: bash:latest
            imagePullPolicy: Always
            name: step-sum
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-vw9c5"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaAplY2hvIC1uICQoKCAiMjAxMiIgKyAiMjAxMiIgKSkgfCB0ZWUgL3Rla3Rvbi9yZXN1bHRzL3N1bQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-cbddz
            secret:
              defaultMode: 420
              secretName: default-token-cbddz
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:07Z"
            message: 'containers with incomplete status: [place-scripts]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:07Z"
            message: 'containers with unready status: [step-sum]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:07Z"
            message: 'containers with unready status: [step-sum]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:07Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: bash:latest
            imageID: ""
            lastState: {}
            name: step-sum
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://7a4f853376d1aef39322cc8804090ff24453a351d9276a7e1e297b9a51f5c421
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://7a4f853376d1aef39322cc8804090ff24453a351d9276a7e1e297b9a51f5c421
                exitCode: 0
                finishedAt: "2021-09-24T08:21:18Z"
                reason: Completed
                startedAt: "2021-09-24T08:21:17Z"
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: place-scripts
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          podIP: 172.20.64.22
          podIPs:
          - ip: 172.20.64.22
          qosClass: BestEffort
          startTime: "2021-09-24T08:21:07Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 52ebf84fb05f881926e6875c3221d0078b56f63ee5ea93b36cdc0da6b4c2c42e
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            description: |
              A simple task that sums the two provided integers
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:38Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sum-and-multiply-pipeline
            tekton.dev/pipelineRun: sum-and-multiply-pipeline-run-6dk8g
            tekton.dev/pipelineTask: sum-inputs
            tekton.dev/task: sum
            tekton.dev/taskRun: sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:description: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"53a75ab1-a8be-4fd5-967c-2179a9a9085b"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-sum"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:20:39Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.33"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:20:54Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:20:55Z"
          name: sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7-pod-hf586
          namespace: arendelle-g467j
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7
            uid: 53a75ab1-a8be-4fd5-967c-2179a9a9085b
          resourceVersion: "3887055"
          selfLink: /api/v1/namespaces/arendelle-g467j/pods/sum-and-multiply-pipeline-run-6dk8g-sum-inputs-wlqt7-pod-hf586
          uid: 49955c26-c57d-4f85-8330-05fefc163b05
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-sum
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -results
            - sum
            - -entrypoint
            - /tekton/scripts/script-0-6q5kg
            - --
            command:
            - /tekton/bin/entrypoint
            image: bash:latest
            imagePullPolicy: Always
            name: step-sum
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-6q5kg"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaAplY2hvIC1uICQoKCAiMiIgKyAiMTAiICkpIHwgdGVlIC90ZWt0b24vcmVzdWx0cy9zdW0K
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cbddz
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-cbddz
            secret:
              defaultMode: 420
              secretName: default-token-cbddz
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:14Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:54Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:54Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:38Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://4759a08a8fb8892640b026842a0b239ce591e3de38995b5e3058347b9df22c1f
            image: bash:5.1.8
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            lastState: {}
            name: step-sum
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://4759a08a8fb8892640b026842a0b239ce591e3de38995b5e3058347b9df22c1f
                exitCode: 0
                finishedAt: "2021-09-24T08:20:50Z"
                message: '[{"key":"sum","value":"12","type":1},{"key":"StartedAt","value":"2021-09-24T08:20:50.451Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:27Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://712dcc58489311823ec398441ed776f1320a5d30f2aa0c0687b314f92696bcf4
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://712dcc58489311823ec398441ed776f1320a5d30f2aa0c0687b314f92696bcf4
                exitCode: 0
                finishedAt: "2021-09-24T08:19:47Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:47Z"
          - containerID: docker://36f8f99883c09449eb15ea4955822cd0c66a9c368fdeaa43d27e2a80d8c2816c
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://36f8f99883c09449eb15ea4955822cd0c66a9c368fdeaa43d27e2a80d8c2816c
                exitCode: 0
                finishedAt: "2021-09-24T08:19:52Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:52Z"
          phase: Succeeded
          podIP: 172.20.64.33
          podIPs:
          - ip: 172.20.64.33
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:39Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-g467j ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-24T08:19:00Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:00Z"
          name: conditional-pipeline
          namespace: arendelle-zwx94
          resourceVersion: "3885528"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-zwx94/pipelines/conditional-pipeline
          uid: a5810a92-2c26-410d-925b-596e6bf71a88
        spec:
          params:
          - default: README.md
            name: path
            type: string
          resources:
          - name: source-repo
            type: git
          tasks:
          - name: first-create-file
            resources:
              outputs:
              - name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: create-readme-file
          - conditions:
            - conditionRef: file-exists
              params:
              - name: path
                value: $(params.path)
              resources:
              - from:
                - first-create-file
                name: workspace
                resource: source-repo
            name: then-check
            taskRef:
              kind: Task
              name: echo-hello
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-24T08:18:59Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:18:59Z"
          name: pipeline-git
          namespace: arendelle-zwx94
          resourceVersion: "3885518"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-zwx94/pipelineresources/pipeline-git
          uid: 71601e40-e3bd-4bfa-b23f-848bbabf8384
        spec:
          params:
          - name: revision
            value: main
          - name: url
            value: https://github.com/tektoncd/pipeline
          type: git
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-24T08:19:00Z"
          generation: 1
          labels:
            tekton.dev/pipeline: conditional-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:00Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:conditional-pr-first-create-file-vbxp4:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:outputs: {}
                        f:steps: {}
                  f:conditional-pr-then-check-94v5d:
                    .: {}
                    f:conditionChecks:
                      .: {}
                      f:conditional-pr-then-check-94v5d-file-exists-0-jhdmm:
                        .: {}
                        f:conditionName: {}
                        f:status:
                          .: {}
                          f:check:
                            .: {}
                            f:running:
                              .: {}
                              f:startedAt: {}
                          f:conditions: {}
                          f:podName: {}
                          f:startTime: {}
                    f:pipelineTaskName: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:11Z"
          name: conditional-pr
          namespace: arendelle-zwx94
          resourceVersion: "3887279"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-zwx94/pipelineruns/conditional-pr
          uid: 343c5fde-5831-48a0-bf02-f65fb3154fc4
        spec:
          pipelineRef:
            name: conditional-pipeline
          resources:
          - name: source-repo
            resourceRef:
              name: pipeline-git
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:19:52Z"
            message: 'Tasks Completed: 1 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: README.md
              name: path
              type: string
            resources:
            - name: source-repo
              type: git
            tasks:
            - name: first-create-file
              resources:
                outputs:
                - name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: create-readme-file
            - conditions:
              - conditionRef: file-exists
                params:
                - name: path
                  value: $(params.path)
                resources:
                - from:
                  - first-create-file
                  name: workspace
                  resource: source-repo
              name: then-check
              taskRef:
                kind: Task
                name: echo-hello
          startTime: "2021-09-24T08:19:00Z"
          taskRuns:
            conditional-pr-first-create-file-vbxp4:
              pipelineTaskName: first-create-file
              status:
                completionTime: "2021-09-24T08:19:52Z"
                conditions:
                - lastTransitionTime: "2021-09-24T08:19:52Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: conditional-pr-first-create-file-vbxp4-pod-gml4t
                startTime: "2021-09-24T08:19:01Z"
                steps:
                - container: step-create-dir-workspace-zsdsq
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-workspace-zsdsq
                  terminated:
                    containerID: docker://5ab52ca0e6856c1673f022862691e65fa9d89a4e9f986bd41c79eb99dc49a047
                    exitCode: 0
                    finishedAt: "2021-09-24T08:19:48Z"
                    reason: Completed
                    startedAt: "2021-09-24T08:19:47Z"
                - container: step-write-new-stuff
                  imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
                  name: write-new-stuff
                  terminated:
                    containerID: docker://3966ee058959ee4a2ff21c7491eb8e303b8027bfb2030a936b01a4f5d30a9784
                    exitCode: 0
                    finishedAt: "2021-09-24T08:19:48Z"
                    reason: Completed
                    startedAt: "2021-09-24T08:19:48Z"
                - container: step-source-mkdir-workspace-dmvzt
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-mkdir-workspace-dmvzt
                  terminated:
                    containerID: docker://26ae54960847f59d8a6fede3f1a9c84239d59910db6105263c8e1a6edb03ed08
                    exitCode: 0
                    finishedAt: "2021-09-24T08:19:50Z"
                    reason: Completed
                    startedAt: "2021-09-24T08:19:49Z"
                - container: step-source-copy-workspace-dsjq2
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-copy-workspace-dsjq2
                  terminated:
                    containerID: docker://ca9a532aa32859361b4bf368ae8f358ec061554152d5297da0d59acadc2b72fa
                    exitCode: 0
                    finishedAt: "2021-09-24T08:19:51Z"
                    reason: Completed
                    startedAt: "2021-09-24T08:19:50Z"
                taskSpec:
                  resources:
                    outputs:
                    - name: workspace
                      type: git
                  steps:
                  - image: ubuntu
                    name: write-new-stuff
                    resources: {}
                    script: touch $(resources.outputs.workspace.path)/README.md
            conditional-pr-then-check-94v5d:
              conditionChecks:
                conditional-pr-then-check-94v5d-file-exists-0-jhdmm:
                  conditionName: file-exists-0
                  status:
                    check:
                      running:
                        startedAt: "2021-09-24T08:21:07Z"
                    conditions:
                    - lastTransitionTime: "2021-09-24T08:21:10Z"
                      message: Not all Steps in the Task have finished executing
                      reason: Running
                      status: Unknown
                      type: Succeeded
                    podName: conditional-pr-then-check-94v5d-file-exists-0-jhdmm-pod-9qhns
                    startTime: "2021-09-24T08:19:52Z"
              pipelineTaskName: then-check
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:19:00Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:outputs: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:00Z"
          name: create-readme-file
          namespace: arendelle-zwx94
          resourceVersion: "3885521"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-zwx94/tasks/create-readme-file
          uid: 768fef53-f75d-4f67-976f-47f8b0178091
        spec:
          resources:
            outputs:
            - name: workspace
              type: git
          steps:
          - image: ubuntu
            name: write-new-stuff
            resources: {}
            script: touch $(resources.outputs.workspace.path)/README.md
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:19:00Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:00Z"
          name: echo-hello
          namespace: arendelle-zwx94
          resourceVersion: "3885525"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-zwx94/tasks/echo-hello
          uid: 1e063983-5443-4b16-81fd-e7edb093c080
        spec:
          steps:
          - image: ubuntu
            name: echo
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:00Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-readme-file
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"343c5fde-5831-48a0-bf02-f65fb3154fc4"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:19:52Z"
          name: conditional-pr-first-create-file-vbxp4
          namespace: arendelle-zwx94
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: conditional-pr
            uid: 343c5fde-5831-48a0-bf02-f65fb3154fc4
          resourceVersion: "3886525"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-zwx94/taskruns/conditional-pr-first-create-file-vbxp4
          uid: 87ff342b-c6c2-4e9e-acd5-40d6a264f13a
        spec:
          resources:
            outputs:
            - name: workspace
              paths:
              - /pvc/first-create-file/workspace
              resourceRef:
                name: pipeline-git
          serviceAccountName: default
          taskRef:
            kind: Task
            name: create-readme-file
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-24T08:19:52Z"
          conditions:
          - lastTransitionTime: "2021-09-24T08:19:52Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: conditional-pr-first-create-file-vbxp4-pod-gml4t
          startTime: "2021-09-24T08:19:01Z"
          steps:
          - container: step-create-dir-workspace-zsdsq
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-workspace-zsdsq
            terminated:
              containerID: docker://5ab52ca0e6856c1673f022862691e65fa9d89a4e9f986bd41c79eb99dc49a047
              exitCode: 0
              finishedAt: "2021-09-24T08:19:48Z"
              reason: Completed
              startedAt: "2021-09-24T08:19:47Z"
          - container: step-write-new-stuff
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: write-new-stuff
            terminated:
              containerID: docker://3966ee058959ee4a2ff21c7491eb8e303b8027bfb2030a936b01a4f5d30a9784
              exitCode: 0
              finishedAt: "2021-09-24T08:19:48Z"
              reason: Completed
              startedAt: "2021-09-24T08:19:48Z"
          - container: step-source-mkdir-workspace-dmvzt
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-mkdir-workspace-dmvzt
            terminated:
              containerID: docker://26ae54960847f59d8a6fede3f1a9c84239d59910db6105263c8e1a6edb03ed08
              exitCode: 0
              finishedAt: "2021-09-24T08:19:50Z"
              reason: Completed
              startedAt: "2021-09-24T08:19:49Z"
          - container: step-source-copy-workspace-dsjq2
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-copy-workspace-dsjq2
            terminated:
              containerID: docker://ca9a532aa32859361b4bf368ae8f358ec061554152d5297da0d59acadc2b72fa
              exitCode: 0
              finishedAt: "2021-09-24T08:19:51Z"
              reason: Completed
              startedAt: "2021-09-24T08:19:50Z"
          taskSpec:
            resources:
              outputs:
              - name: workspace
                type: git
            steps:
            - image: ubuntu
              name: write-new-stuff
              resources: {}
              script: touch $(resources.outputs.workspace.path)/README.md
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:52Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: conditional-pr-then-check-94v5d-file-exists-0-jhdmm
            tekton.dev/conditionName: file-exists
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: then-check
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"343c5fde-5831-48a0-bf02-f65fb3154fc4"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:10Z"
          name: conditional-pr-then-check-94v5d-file-exists-0-jhdmm
          namespace: arendelle-zwx94
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: conditional-pr
            uid: 343c5fde-5831-48a0-bf02-f65fb3154fc4
          resourceVersion: "3887261"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-zwx94/taskruns/conditional-pr-then-check-94v5d-file-exists-0-jhdmm
          uid: 47b71339-5d97-4014-b2a0-d0f4c04ddb95
        spec:
          params:
          - name: path
            value: README.md
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: pipeline-git
          serviceAccountName: default
          taskSpec:
            params:
            - name: path
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
            steps:
            - image: alpine
              name: condition-check-file-exists
              resources: {}
              script: test -f /workspace/workspace/$(inputs.params.path)
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:10Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: conditional-pr-then-check-94v5d-file-exists-0-jhdmm-pod-9qhns
          startTime: "2021-09-24T08:19:52Z"
          steps:
          - container: step-git-source-workspace-x82pl
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-x82pl
            running:
              startedAt: "2021-09-24T08:20:56Z"
          - container: step-condition-check-file-exists
            imageID: docker-pullable://192.168.143.246:5000/alpine@sha256:9bea59997a84beb47a8cc7ddb11abc957b141e8160852aa93b4cf60659016b53
            name: condition-check-file-exists
            running:
              startedAt: "2021-09-24T08:21:07Z"
          taskSpec:
            params:
            - name: path
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
            steps:
            - image: alpine
              name: condition-check-file-exists
              resources: {}
              script: test -f /workspace/workspace/$(inputs.params.path)
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 1903c929cbc110dbfe08e0db95589304ee6afcda6cda61e0d653cdd24f229ffa
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:01Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-readme-file
            tekton.dev/taskRun: conditional-pr-first-create-file-vbxp4
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"87ff342b-c6c2-4e9e-acd5-40d6a264f13a"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-create-dir-workspace-zsdsq"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-copy-workspace-dsjq2"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-mkdir-workspace-dmvzt"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-write-new-stuff"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"conditional-pr-pvc"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:19:44Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.61"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:19:52Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:19:57Z"
          name: conditional-pr-first-create-file-vbxp4-pod-gml4t
          namespace: arendelle-zwx94
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: conditional-pr-first-create-file-vbxp4
            uid: 87ff342b-c6c2-4e9e-acd5-40d6a264f13a
          resourceVersion: "3886550"
          selfLink: /api/v1/namespaces/arendelle-zwx94/pods/conditional-pr-first-create-file-vbxp4-pod-gml4t
          uid: 3ac2b1ff-5821-45d7-901f-5137b188c7e4
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-workspace-zsdsq
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-workspace-zsdsq
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write-new-stuff
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-86z47
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write-new-stuff
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-mkdir-workspace-dmvzt
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - mkdir
            - --
            - -p
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-mkdir-workspace-dmvzt
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: conditional-pr-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-copy-workspace-dsjq2
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - cp
            - --
            - -r
            - /workspace/output/workspace/.
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-copy-workspace-dsjq2
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: conditional-pr-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-86z47"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdG91Y2ggL3dvcmtzcGFjZS9vdXRwdXQvd29ya3NwYWNlL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: conditional-pr-pvc
            persistentVolumeClaim:
              claimName: conditional-pr-pvc
          - name: default-token-jjzq8
            secret:
              defaultMode: 420
              secretName: default-token-jjzq8
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:23Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:52Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:52Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:01Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://5ab52ca0e6856c1673f022862691e65fa9d89a4e9f986bd41c79eb99dc49a047
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-workspace-zsdsq
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://5ab52ca0e6856c1673f022862691e65fa9d89a4e9f986bd41c79eb99dc49a047
                exitCode: 0
                finishedAt: "2021-09-24T08:19:48Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:47.819Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:19:24Z"
          - containerID: docker://ca9a532aa32859361b4bf368ae8f358ec061554152d5297da0d59acadc2b72fa
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-copy-workspace-dsjq2
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://ca9a532aa32859361b4bf368ae8f358ec061554152d5297da0d59acadc2b72fa
                exitCode: 0
                finishedAt: "2021-09-24T08:19:51Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:50.408Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:19:41Z"
          - containerID: docker://26ae54960847f59d8a6fede3f1a9c84239d59910db6105263c8e1a6edb03ed08
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-mkdir-workspace-dmvzt
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://26ae54960847f59d8a6fede3f1a9c84239d59910db6105263c8e1a6edb03ed08
                exitCode: 0
                finishedAt: "2021-09-24T08:19:50Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:49.399Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:19:37Z"
          - containerID: docker://3966ee058959ee4a2ff21c7491eb8e303b8027bfb2030a936b01a4f5d30a9784
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write-new-stuff
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://3966ee058959ee4a2ff21c7491eb8e303b8027bfb2030a936b01a4f5d30a9784
                exitCode: 0
                finishedAt: "2021-09-24T08:19:48Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:19:48.316Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:19:28Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://9f1467506464317b203f22320417c6ae61450c56cd8ef707e2be1dfa1fcaff89
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://9f1467506464317b203f22320417c6ae61450c56cd8ef707e2be1dfa1fcaff89
                exitCode: 0
                finishedAt: "2021-09-24T08:19:16Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:16Z"
          - containerID: docker://4f60c30c9db684e5891a662fc3e6d93451b5f31945e3933c68e17ccc69511fb3
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://4f60c30c9db684e5891a662fc3e6d93451b5f31945e3933c68e17ccc69511fb3
                exitCode: 0
                finishedAt: "2021-09-24T08:19:21Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:21Z"
          phase: Succeeded
          podIP: 172.20.64.61
          podIPs:
          - ip: 172.20.64.61
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:04Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 568f422beb5a27522eb3f0bc44e7e9f104fac7645c59aa01281710cd46a2be56
            cni.projectcalico.org/podIP: 172.20.64.41/32
            cni.projectcalico.org/podIPs: 172.20.64.41/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:56Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: conditional-pr-then-check-94v5d-file-exists-0-jhdmm
            tekton.dev/conditionName: file-exists
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: then-check
            tekton.dev/taskRun: conditional-pr-then-check-94v5d-file-exists-0-jhdmm
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:20:27Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"47b71339-5d97-4014-b2a0-d0f4c04ddb95"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-condition-check-file-exists"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-x82pl"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:10Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.41"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:10Z"
          name: conditional-pr-then-check-94v5d-file-exists-0-jhdmm-pod-9qhns
          namespace: arendelle-zwx94
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: conditional-pr-then-check-94v5d-file-exists-0-jhdmm
            uid: 47b71339-5d97-4014-b2a0-d0f4c04ddb95
          resourceVersion: "3887254"
          selfLink: /api/v1/namespaces/arendelle-zwx94/pods/conditional-pr-then-check-94v5d-file-exists-0-jhdmm-pod-9qhns
          uid: 74043a04-ef3f-4f20-b26a-0f39d0f7d0a4
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-x82pl
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/workspace
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-x82pl
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-condition-check-file-exists
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-68hs9
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine
            imagePullPolicy: Always
            name: step-condition-check-file-exists
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-68hs9"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdGVzdCAtZiAvd29ya3NwYWNlL3dvcmtzcGFjZS9SRUFETUUubWQ=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-jjzq8
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-jjzq8
            secret:
              defaultMode: 420
              secretName: default-token-jjzq8
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:53Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:10Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:10Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:57Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://cf88fa43fc26a4337c6f854b48f87d688b4eab7302d9fca7d5432d2d88922aad
            image: 192.168.143.246:5000/alpine:latest
            imageID: docker-pullable://192.168.143.246:5000/alpine@sha256:9bea59997a84beb47a8cc7ddb11abc957b141e8160852aa93b4cf60659016b53
            lastState: {}
            name: step-condition-check-file-exists
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:21:07Z"
          - containerID: docker://ec2742cbf5017a3c8b6e877f59835cc9ea8709e760af45159f0836c036bbb708
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-x82pl
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-24T08:20:56Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://d1aba6320bfb00e049a8652b6b5df1b2f698c2dfddb028629e7680b0c9b849d2
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://d1aba6320bfb00e049a8652b6b5df1b2f698c2dfddb028629e7680b0c9b849d2
                exitCode: 0
                finishedAt: "2021-09-24T08:20:37Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:37Z"
          - containerID: docker://13fbf9f68714482153508258f6e8c661b5c95f2557ae9a8cfb5a2e2381ac2570
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://13fbf9f68714482153508258f6e8c661b5c95f2557ae9a8cfb5a2e2381ac2570
                exitCode: 0
                finishedAt: "2021-09-24T08:20:51Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:51Z"
          phase: Running
          podIP: 172.20.64.41
          podIPs:
          - ip: 172.20.64.41
          qosClass: BestEffort
          startTime: "2021-09-24T08:20:06Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-zwx94 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-24T08:19:37Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:37Z"
          name: demo-pipeline
          namespace: arendelle-nnxd8
          resourceVersion: "3886181"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/pipelines/demo-pipeline
          uid: eccfb4ab-158b-4fc7-8b55-ac9fb0e38d9a
        spec:
          resources:
          - name: source-repo
            type: git
          - name: web-image
            type: image
          - name: app-image
            type: image
          tasks:
          - name: skaffold-unit-tests
            resources:
              inputs:
              - name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: unit-tests
          - name: build-skaffold-web
            params:
            - name: pathToDockerFile
              value: Dockerfile
            - name: pathToContext
              value: /workspace/workspace/examples/microservices/leeroy-web
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              outputs:
              - name: builtImage
                resource: web-image
            runAfter:
            - skaffold-unit-tests
            taskRef:
              kind: Task
              name: build-push
          - name: build-skaffold-app
            params:
            - name: pathToDockerFile
              value: Dockerfile
            - name: pathToContext
              value: /workspace/workspace/examples/microservices/leeroy-app
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              outputs:
              - name: builtImage
                resource: app-image
            runAfter:
            - skaffold-unit-tests
            taskRef:
              kind: Task
              name: build-push
          - name: deploy-app
            params:
            - name: path
              value: /workspace/workspace/examples/microservices/leeroy-app/kubernetes/deployment.yaml
            - name: yqArg
              value: -d1
            - name: yamlPathToImage
              value: spec.template.spec.containers[0].image
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              - from:
                - build-skaffold-app
                name: image
                resource: app-image
            taskRef:
              kind: Task
              name: demo-deploy-kubectl
          - name: deploy-web
            params:
            - name: path
              value: /workspace/workspace/examples/microservices/leeroy-web/kubernetes/deployment.yaml
            - name: yqArg
              value: -d1
            - name: yamlPathToImage
              value: spec.template.spec.containers[0].image
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              - from:
                - build-skaffold-web
                name: image
                resource: web-image
            taskRef:
              kind: Task
              name: demo-deploy-kubectl
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-24T08:19:36Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:36Z"
          name: skaffold-git-pipelinerun
          namespace: arendelle-nnxd8
          resourceVersion: "3886167"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-nnxd8/pipelineresources/skaffold-git-pipelinerun
          uid: 7760b397-0fe3-464a-a952-0ff92e614838
        spec:
          params:
          - name: revision
            value: v0.32.0
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          type: git
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-24T08:19:36Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:36Z"
          name: skaffold-image-leeroy-app
          namespace: arendelle-nnxd8
          resourceVersion: "3886161"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-nnxd8/pipelineresources/skaffold-image-leeroy-app
          uid: 1f18ba95-0c1d-4a01-a28d-3f3d2cb6017d
        spec:
          params:
          - name: url
            value: ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app
          type: image
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-24T08:19:36Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:36Z"
          name: skaffold-image-leeroy-web-pipelinerun
          namespace: arendelle-nnxd8
          resourceVersion: "3886165"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-nnxd8/pipelineresources/skaffold-image-leeroy-web-pipelinerun
          uid: b309939c-dcff-41a1-94ca-46a49466f00c
        spec:
          params:
          - name: url
            value: ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web
          type: image
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-24T08:19:37Z"
          generation: 1
          labels:
            tekton.dev/pipeline: demo-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:37Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:demo-pipeline-run-1-build-skaffold-app-zdvrr:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
                  f:demo-pipeline-run-1-build-skaffold-web-78x8d:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
                  f:demo-pipeline-run-1-skaffold-unit-tests-ljn5k:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:resourcesResult: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:14Z"
          name: demo-pipeline-run-1
          namespace: arendelle-nnxd8
          resourceVersion: "3887337"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/pipelineruns/demo-pipeline-run-1
          uid: c6daf0f2-260d-4909-a498-2a29d33a02fa
        spec:
          pipelineRef:
            name: demo-pipeline
          resources:
          - name: source-repo
            resourceRef:
              name: skaffold-git-pipelinerun
          - name: web-image
            resourceRef:
              name: skaffold-image-leeroy-web-pipelinerun
          - name: app-image
            resourceRef:
              name: skaffold-image-leeroy-app
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:10Z"
            message: 'Tasks Completed: 1 (Failed: 0, Cancelled 0), Incomplete: 4, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            resources:
            - name: source-repo
              type: git
            - name: web-image
              type: image
            - name: app-image
              type: image
            tasks:
            - name: skaffold-unit-tests
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: unit-tests
            - name: build-skaffold-web
              params:
              - name: pathToDockerFile
                value: Dockerfile
              - name: pathToContext
                value: /workspace/workspace/examples/microservices/leeroy-web
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                outputs:
                - name: builtImage
                  resource: web-image
              runAfter:
              - skaffold-unit-tests
              taskRef:
                kind: Task
                name: build-push
            - name: build-skaffold-app
              params:
              - name: pathToDockerFile
                value: Dockerfile
              - name: pathToContext
                value: /workspace/workspace/examples/microservices/leeroy-app
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                outputs:
                - name: builtImage
                  resource: app-image
              runAfter:
              - skaffold-unit-tests
              taskRef:
                kind: Task
                name: build-push
            - name: deploy-app
              params:
              - name: path
                value: /workspace/workspace/examples/microservices/leeroy-app/kubernetes/deployment.yaml
              - name: yqArg
                value: -d1
              - name: yamlPathToImage
                value: spec.template.spec.containers[0].image
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                - from:
                  - build-skaffold-app
                  name: image
                  resource: app-image
              taskRef:
                kind: Task
                name: demo-deploy-kubectl
            - name: deploy-web
              params:
              - name: path
                value: /workspace/workspace/examples/microservices/leeroy-web/kubernetes/deployment.yaml
              - name: yqArg
                value: -d1
              - name: yamlPathToImage
                value: spec.template.spec.containers[0].image
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                - from:
                  - build-skaffold-web
                  name: image
                  resource: web-image
              taskRef:
                kind: Task
                name: demo-deploy-kubectl
          startTime: "2021-09-24T08:19:38Z"
          taskRuns:
            demo-pipeline-run-1-build-skaffold-app-zdvrr:
              pipelineTaskName: build-skaffold-app
              status:
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:14Z"
                  message: 'pod status "Initialized":"False"; message: "containers with incomplete
                    status: [place-tools]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: demo-pipeline-run-1-build-skaffold-app-zdvrr-pod-h8l9m
                startTime: "2021-09-24T08:21:11Z"
                steps:
                - container: step-create-dir-builtimage-msp8f
                  name: create-dir-builtimage-msp8f
                  waiting:
                    reason: PodInitializing
                - container: step-git-source-workspace-xh6pk
                  name: git-source-workspace-xh6pk
                  waiting:
                    reason: PodInitializing
                - container: step-build-and-push
                  name: build-and-push
                  waiting:
                    reason: PodInitializing
                - container: step-image-digest-exporter-8nx6w
                  name: image-digest-exporter-8nx6w
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  params:
                  - default: /workspace/workspace/Dockerfile
                    description: The path to the dockerfile to build
                    name: pathToDockerFile
                    type: string
                  - default: /workspace/workspace
                    description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
                    name: pathToContext
                    type: string
                  resources:
                    inputs:
                    - name: workspace
                      type: git
                    outputs:
                    - name: builtImage
                      type: image
                  steps:
                  - args:
                    - --dockerfile=$(inputs.params.pathToDockerFile)
                    - --destination=$(outputs.resources.builtImage.url)
                    - --context=$(inputs.params.pathToContext)
                    command:
                    - /kaniko/executor
                    env:
                    - name: DOCKER_CONFIG
                      value: /tekton/home/.docker/
                    image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
                    name: build-and-push
                    resources: {}
            demo-pipeline-run-1-build-skaffold-web-78x8d:
              pipelineTaskName: build-skaffold-web
              status:
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:13Z"
                  message: 'pod status "Initialized":"False"; message: "containers with incomplete
                    status: [place-tools]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: demo-pipeline-run-1-build-skaffold-web-78x8d-pod-kxcn8
                startTime: "2021-09-24T08:21:10Z"
                steps:
                - container: step-create-dir-builtimage-5hptw
                  name: create-dir-builtimage-5hptw
                  waiting:
                    reason: PodInitializing
                - container: step-git-source-workspace-rllbf
                  name: git-source-workspace-rllbf
                  waiting:
                    reason: PodInitializing
                - container: step-build-and-push
                  name: build-and-push
                  waiting:
                    reason: PodInitializing
                - container: step-image-digest-exporter-rwx5v
                  name: image-digest-exporter-rwx5v
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  params:
                  - default: /workspace/workspace/Dockerfile
                    description: The path to the dockerfile to build
                    name: pathToDockerFile
                    type: string
                  - default: /workspace/workspace
                    description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
                    name: pathToContext
                    type: string
                  resources:
                    inputs:
                    - name: workspace
                      type: git
                    outputs:
                    - name: builtImage
                      type: image
                  steps:
                  - args:
                    - --dockerfile=$(inputs.params.pathToDockerFile)
                    - --destination=$(outputs.resources.builtImage.url)
                    - --context=$(inputs.params.pathToContext)
                    command:
                    - /kaniko/executor
                    env:
                    - name: DOCKER_CONFIG
                      value: /tekton/home/.docker/
                    image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
                    name: build-and-push
                    resources: {}
            demo-pipeline-run-1-skaffold-unit-tests-ljn5k:
              pipelineTaskName: skaffold-unit-tests
              status:
                completionTime: "2021-09-24T08:21:09Z"
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:09Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: demo-pipeline-run-1-skaffold-unit-tests-ljn5k-pod-p4msp
                resourcesResult:
                - key: commit
                  resourceName: workspace
                  resourceRef:
                    name: workspace
                  value: 6ed7aad5e8a36052ee5f6079fc91368e362121f7
                - key: url
                  resourceName: workspace
                  resourceRef:
                    name: workspace
                  value: https://github.com/GoogleContainerTools/skaffold
                startTime: "2021-09-24T08:19:38Z"
                steps:
                - container: step-git-source-workspace-s9rng
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-workspace-s9rng
                  terminated:
                    containerID: docker://08b38fc8a6035226f87c6c7ce533cd34330a1371421c1d1f2b0301ff0a7e865a
                    exitCode: 0
                    finishedAt: "2021-09-24T08:21:04Z"
                    message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
                    reason: Completed
                    startedAt: "2021-09-24T08:20:51Z"
                - container: step-run-tests
                  imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
                  name: run-tests
                  terminated:
                    containerID: docker://ef2113c694ecac252266c1afb93b7ae145613d3f7ce1a738124f1760510ecdb9
                    exitCode: 0
                    finishedAt: "2021-09-24T08:21:05Z"
                    reason: Completed
                    startedAt: "2021-09-24T08:21:03Z"
                taskSpec:
                  resources:
                    inputs:
                    - name: workspace
                      targetPath: go/src/github.com/GoogleContainerTools/skaffold
                      type: git
                  steps:
                  - args:
                    - pass
                    command:
                    - echo
                    env:
                    - name: GOPATH
                      value: /workspace/go
                    image: golang
                    name: run-tests
                    resources: {}
                    workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:19:36Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:outputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:36Z"
          name: build-push
          namespace: arendelle-nnxd8
          resourceVersion: "3886172"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/tasks/build-push
          uid: 5437625c-5515-4f7b-9688-9088dc6c9fed
        spec:
          params:
          - default: /workspace/workspace/Dockerfile
            description: The path to the dockerfile to build
            name: pathToDockerFile
            type: string
          - default: /workspace/workspace
            description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
            name: pathToContext
            type: string
          resources:
            inputs:
            - name: workspace
              type: git
            outputs:
            - name: builtImage
              type: image
          steps:
          - args:
            - --dockerfile=$(inputs.params.pathToDockerFile)
            - --destination=$(outputs.resources.builtImage.url)
            - --context=$(inputs.params.pathToContext)
            command:
            - /kaniko/executor
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            name: build-and-push
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:19:36Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:36Z"
          name: demo-deploy-kubectl
          namespace: arendelle-nnxd8
          resourceVersion: "3886174"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/tasks/demo-deploy-kubectl
          uid: d45ff095-509e-4aeb-b452-b3231f7df3cc
        spec:
          params:
          - description: Path to the manifest to apply
            name: path
            type: string
          - description: Okay this is a hack, but I didn't feel right hard-codeing `-d1` down
              below
            name: yqArg
            type: string
          - description: The path to the image to replace in the yaml manifest (arg to yq)
            name: yamlPathToImage
            type: string
          resources:
            inputs:
            - name: workspace
              type: git
            - name: image
              type: image
          steps:
          - args:
            - w
            - -i
            - $(inputs.params.yqArg)
            - $(inputs.params.path)
            - $(inputs.params.yamlPathToImage)
            - $(inputs.resources.image.url)
            command:
            - yq
            image: danielxlee/yq:2.4.0
            name: replace-image
            resources: {}
          - args:
            - apply
            - -f
            - $(inputs.params.path)
            command:
            - kubectl
            image: lachlanevenson/k8s-kubectl
            name: run-kubectl
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:19:36Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:19:36Z"
          name: unit-tests
          namespace: arendelle-nnxd8
          resourceVersion: "3886168"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/tasks/unit-tests
          uid: e76de2a0-f1e0-42da-93e0-bdb0c44d78ee
        spec:
          resources:
            inputs:
            - name: workspace
              targetPath: go/src/github.com/GoogleContainerTools/skaffold
              type: git
          steps:
          - args:
            - pass
            command:
            - echo
            env:
            - name: GOPATH
              value: /workspace/go
            image: golang
            name: run-tests
            resources: {}
            workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:10Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-app
            tekton.dev/task: build-push
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"c6daf0f2-260d-4909-a498-2a29d33a02fa"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:14Z"
          name: demo-pipeline-run-1-build-skaffold-app-zdvrr
          namespace: arendelle-nnxd8
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: c6daf0f2-260d-4909-a498-2a29d33a02fa
          resourceVersion: "3887334"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/taskruns/demo-pipeline-run-1-build-skaffold-app-zdvrr
          uid: e08b3869-c95c-4d1a-ab92-3e7ae99c16b3
        spec:
          params:
          - name: pathToDockerFile
            value: Dockerfile
          - name: pathToContext
            value: /workspace/workspace/examples/microservices/leeroy-app
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
            outputs:
            - name: builtImage
              paths:
              - build-skaffold-app/builtImage
              resourceRef:
                name: skaffold-image-leeroy-app
          serviceAccountName: default
          taskRef:
            kind: Task
            name: build-push
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:14Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-tools]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: demo-pipeline-run-1-build-skaffold-app-zdvrr-pod-h8l9m
          startTime: "2021-09-24T08:21:11Z"
          steps:
          - container: step-create-dir-builtimage-msp8f
            name: create-dir-builtimage-msp8f
            waiting:
              reason: PodInitializing
          - container: step-git-source-workspace-xh6pk
            name: git-source-workspace-xh6pk
            waiting:
              reason: PodInitializing
          - container: step-build-and-push
            name: build-and-push
            waiting:
              reason: PodInitializing
          - container: step-image-digest-exporter-8nx6w
            name: image-digest-exporter-8nx6w
            waiting:
              reason: PodInitializing
          taskSpec:
            params:
            - default: /workspace/workspace/Dockerfile
              description: The path to the dockerfile to build
              name: pathToDockerFile
              type: string
            - default: /workspace/workspace
              description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
              name: pathToContext
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
              outputs:
              - name: builtImage
                type: image
            steps:
            - args:
              - --dockerfile=$(inputs.params.pathToDockerFile)
              - --destination=$(outputs.resources.builtImage.url)
              - --context=$(inputs.params.pathToContext)
              command:
              - /kaniko/executor
              env:
              - name: DOCKER_CONFIG
                value: /tekton/home/.docker/
              image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
              name: build-and-push
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:10Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-web
            tekton.dev/task: build-push
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"c6daf0f2-260d-4909-a498-2a29d33a02fa"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:13Z"
          name: demo-pipeline-run-1-build-skaffold-web-78x8d
          namespace: arendelle-nnxd8
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: c6daf0f2-260d-4909-a498-2a29d33a02fa
          resourceVersion: "3887318"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/taskruns/demo-pipeline-run-1-build-skaffold-web-78x8d
          uid: fffcb2ea-b51b-4caa-bdda-838bbeeb5472
        spec:
          params:
          - name: pathToDockerFile
            value: Dockerfile
          - name: pathToContext
            value: /workspace/workspace/examples/microservices/leeroy-web
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
            outputs:
            - name: builtImage
              paths:
              - build-skaffold-web/builtImage
              resourceRef:
                name: skaffold-image-leeroy-web-pipelinerun
          serviceAccountName: default
          taskRef:
            kind: Task
            name: build-push
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:13Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-tools]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: demo-pipeline-run-1-build-skaffold-web-78x8d-pod-kxcn8
          startTime: "2021-09-24T08:21:10Z"
          steps:
          - container: step-create-dir-builtimage-5hptw
            name: create-dir-builtimage-5hptw
            waiting:
              reason: PodInitializing
          - container: step-git-source-workspace-rllbf
            name: git-source-workspace-rllbf
            waiting:
              reason: PodInitializing
          - container: step-build-and-push
            name: build-and-push
            waiting:
              reason: PodInitializing
          - container: step-image-digest-exporter-rwx5v
            name: image-digest-exporter-rwx5v
            waiting:
              reason: PodInitializing
          taskSpec:
            params:
            - default: /workspace/workspace/Dockerfile
              description: The path to the dockerfile to build
              name: pathToDockerFile
              type: string
            - default: /workspace/workspace
              description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
              name: pathToContext
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
              outputs:
              - name: builtImage
                type: image
            steps:
            - args:
              - --dockerfile=$(inputs.params.pathToDockerFile)
              - --destination=$(outputs.resources.builtImage.url)
              - --context=$(inputs.params.pathToContext)
              command:
              - /kaniko/executor
              env:
              - name: DOCKER_CONFIG
                value: /tekton/home/.docker/
              image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
              name: build-and-push
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:19:38Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: skaffold-unit-tests
            tekton.dev/task: unit-tests
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"c6daf0f2-260d-4909-a498-2a29d33a02fa"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:resourcesResult: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:09Z"
          name: demo-pipeline-run-1-skaffold-unit-tests-ljn5k
          namespace: arendelle-nnxd8
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: c6daf0f2-260d-4909-a498-2a29d33a02fa
          resourceVersion: "3887227"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-nnxd8/taskruns/demo-pipeline-run-1-skaffold-unit-tests-ljn5k
          uid: ae6b1987-f88c-4d54-af79-1d8143958b6b
        spec:
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
          serviceAccountName: default
          taskRef:
            kind: Task
            name: unit-tests
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-24T08:21:09Z"
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:09Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: demo-pipeline-run-1-skaffold-unit-tests-ljn5k-pod-p4msp
          resourcesResult:
          - key: commit
            resourceName: workspace
            resourceRef:
              name: workspace
            value: 6ed7aad5e8a36052ee5f6079fc91368e362121f7
          - key: url
            resourceName: workspace
            resourceRef:
              name: workspace
            value: https://github.com/GoogleContainerTools/skaffold
          startTime: "2021-09-24T08:19:38Z"
          steps:
          - container: step-git-source-workspace-s9rng
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-s9rng
            terminated:
              containerID: docker://08b38fc8a6035226f87c6c7ce533cd34330a1371421c1d1f2b0301ff0a7e865a
              exitCode: 0
              finishedAt: "2021-09-24T08:21:04Z"
              message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-24T08:20:51Z"
          - container: step-run-tests
            imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
            name: run-tests
            terminated:
              containerID: docker://ef2113c694ecac252266c1afb93b7ae145613d3f7ce1a738124f1760510ecdb9
              exitCode: 0
              finishedAt: "2021-09-24T08:21:05Z"
              reason: Completed
              startedAt: "2021-09-24T08:21:03Z"
          taskSpec:
            resources:
              inputs:
              - name: workspace
                targetPath: go/src/github.com/GoogleContainerTools/skaffold
                type: git
            steps:
            - args:
              - pass
              command:
              - echo
              env:
              - name: GOPATH
                value: /workspace/go
              image: golang
              name: run-tests
              resources: {}
              workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 5a541e85ca96bf5f26e5cba5f9cabfb1c04f0563dfb16f63b83389e0d1eae31f
            cni.projectcalico.org/podIP: 172.20.64.53/32
            cni.projectcalico.org/podIPs: 172.20.64.53/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:12Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-app
            tekton.dev/task: build-push
            tekton.dev/taskRun: demo-pipeline-run-1-build-skaffold-app-zdvrr
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"e08b3869-c95c-4d1a-ab92-3e7ae99c16b3"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-build-and-push"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"DOCKER_CONFIG"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-create-dir-builtimage-msp8f"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-xh6pk"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-image-digest-exporter-8nx6w"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:12Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:14Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:24Z"
          name: demo-pipeline-run-1-build-skaffold-app-zdvrr-pod-h8l9m
          namespace: arendelle-nnxd8
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-build-skaffold-app-zdvrr
            uid: e08b3869-c95c-4d1a-ab92-3e7ae99c16b3
          resourceVersion: "3887433"
          selfLink: /api/v1/namespaces/arendelle-nnxd8/pods/demo-pipeline-run-1-build-skaffold-app-zdvrr-pod-h8l9m
          uid: 25087d9f-c0f3-4085-9bef-b7877e13e9c1
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-builtimage-msp8f
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/builtImage
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-builtimage-msp8f
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-xh6pk
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/workspace
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-xh6pk
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-build-and-push
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /kaniko/executor
            - --
            - --dockerfile=Dockerfile
            - --destination=ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app
            - --context=/workspace/workspace/examples/microservices/leeroy-app
            command:
            - /tekton/bin/entrypoint
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imagePullPolicy: IfNotPresent
            name: step-build-and-push
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-image-digest-exporter-8nx6w
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /ko-app/imagedigestexporter
            - --
            - -images
            - '[{"name":"builtImage","type":"image","url":"ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app","digest":"","OutputImageDir":"/workspace/output/builtImage"}]'
            command:
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imagePullPolicy: IfNotPresent
            name: step-image-digest-exporter-8nx6w
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: default-token-c8mmq
            secret:
              defaultMode: 420
              secretName: default-token-c8mmq
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:14Z"
            message: 'containers with incomplete status: [place-tools]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:14Z"
            message: 'containers with unready status: [step-create-dir-builtimage-msp8f step-git-source-workspace-xh6pk
              step-build-and-push step-image-digest-exporter-8nx6w]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:14Z"
            message: 'containers with unready status: [step-create-dir-builtimage-msp8f step-git-source-workspace-xh6pk
              step-build-and-push step-image-digest-exporter-8nx6w]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:12Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imageID: ""
            lastState: {}
            name: step-build-and-push
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: step-create-dir-builtimage-msp8f
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imageID: ""
            lastState: {}
            name: step-git-source-workspace-xh6pk
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imageID: ""
            lastState: {}
            name: step-image-digest-exporter-8nx6w
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imageID: ""
            lastState: {}
            name: place-tools
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          qosClass: BestEffort
          startTime: "2021-09-24T08:21:14Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 4b7129086652da5049f14b7464e5149dee5fb2730839332f1bf577c91c3f6259
            cni.projectcalico.org/podIP: 172.20.64.57/32
            cni.projectcalico.org/podIPs: 172.20.64.57/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:11Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-web
            tekton.dev/task: build-push
            tekton.dev/taskRun: demo-pipeline-run-1-build-skaffold-web-78x8d
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"fffcb2ea-b51b-4caa-bdda-838bbeeb5472"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-build-and-push"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"DOCKER_CONFIG"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-create-dir-builtimage-5hptw"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-rllbf"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-image-digest-exporter-rwx5v"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:11Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:13Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:18Z"
          name: demo-pipeline-run-1-build-skaffold-web-78x8d-pod-kxcn8
          namespace: arendelle-nnxd8
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-build-skaffold-web-78x8d
            uid: fffcb2ea-b51b-4caa-bdda-838bbeeb5472
          resourceVersion: "3887388"
          selfLink: /api/v1/namespaces/arendelle-nnxd8/pods/demo-pipeline-run-1-build-skaffold-web-78x8d-pod-kxcn8
          uid: ca66f39c-2982-43d2-ab88-80e49312949f
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-builtimage-5hptw
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/builtImage
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-builtimage-5hptw
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-rllbf
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/workspace
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-rllbf
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-build-and-push
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /kaniko/executor
            - --
            - --dockerfile=Dockerfile
            - --destination=ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web
            - --context=/workspace/workspace/examples/microservices/leeroy-web
            command:
            - /tekton/bin/entrypoint
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imagePullPolicy: IfNotPresent
            name: step-build-and-push
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-image-digest-exporter-rwx5v
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /ko-app/imagedigestexporter
            - --
            - -images
            - '[{"name":"builtImage","type":"image","url":"ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web","digest":"","OutputImageDir":"/workspace/output/builtImage"}]'
            command:
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imagePullPolicy: IfNotPresent
            name: step-image-digest-exporter-rwx5v
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: default-token-c8mmq
            secret:
              defaultMode: 420
              secretName: default-token-c8mmq
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:13Z"
            message: 'containers with incomplete status: [place-tools]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:13Z"
            message: 'containers with unready status: [step-create-dir-builtimage-5hptw step-git-source-workspace-rllbf
              step-build-and-push step-image-digest-exporter-rwx5v]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:13Z"
            message: 'containers with unready status: [step-create-dir-builtimage-5hptw step-git-source-workspace-rllbf
              step-build-and-push step-image-digest-exporter-rwx5v]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:11Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imageID: ""
            lastState: {}
            name: step-build-and-push
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: step-create-dir-builtimage-5hptw
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imageID: ""
            lastState: {}
            name: step-git-source-workspace-rllbf
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imageID: ""
            lastState: {}
            name: step-image-digest-exporter-rwx5v
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imageID: ""
            lastState: {}
            name: place-tools
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          qosClass: BestEffort
          startTime: "2021-09-24T08:21:13Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: bf5c281edb977ead64761d0fe5b4ae11a6c2d236ae2cbe169a41f393acf2ef2d
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-24T08:19:38Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: skaffold-unit-tests
            tekton.dev/task: unit-tests
            tekton.dev/taskRun: demo-pipeline-run-1-skaffold-unit-tests-ljn5k
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"ae6b1987-f88c-4d54-af79-1d8143958b6b"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-workspace-s9rng"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-run-tests"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"GOPATH"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"working-dir-initializer"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:20:50Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.43"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:08Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:10Z"
          name: demo-pipeline-run-1-skaffold-unit-tests-ljn5k-pod-p4msp
          namespace: arendelle-nnxd8
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-skaffold-unit-tests-ljn5k
            uid: ae6b1987-f88c-4d54-af79-1d8143958b6b
          resourceVersion: "3887241"
          selfLink: /api/v1/namespaces/arendelle-nnxd8/pods/demo-pipeline-run-1-skaffold-unit-tests-ljn5k-pod-p4msp
          uid: 1533c258-ec90-4e17-b5e5-c074bc70e147
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-s9rng
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/go/src/github.com/GoogleContainerTools/skaffold
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-s9rng
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-run-tests
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - echo
            - --
            - pass
            command:
            - /tekton/bin/entrypoint
            env:
            - name: GOPATH
              value: /workspace/go
            image: golang
            imagePullPolicy: Always
            name: step-run-tests
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /
          - args:
            - -c
            - mkdir -p /workspace/go/src/github.com/GoogleContainerTools/skaffold
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: working-dir-initializer
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-c8mmq
              readOnly: true
            workingDir: /workspace
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-c8mmq
            secret:
              defaultMode: 420
              secretName: default-token-c8mmq
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:20:22Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:19:38Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://08b38fc8a6035226f87c6c7ce533cd34330a1371421c1d1f2b0301ff0a7e865a
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-s9rng
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://08b38fc8a6035226f87c6c7ce533cd34330a1371421c1d1f2b0301ff0a7e865a
                exitCode: 0
                finishedAt: "2021-09-24T08:21:04Z"
                message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-24T08:20:51.984Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:27Z"
          - containerID: docker://ef2113c694ecac252266c1afb93b7ae145613d3f7ce1a738124f1760510ecdb9
            image: golang:latest
            imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
            lastState: {}
            name: step-run-tests
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://ef2113c694ecac252266c1afb93b7ae145613d3f7ce1a738124f1760510ecdb9
                exitCode: 0
                finishedAt: "2021-09-24T08:21:05Z"
                message: '[{"key":"StartedAt","value":"2021-09-24T08:21:03.569Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-24T08:20:44Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://9e9482f828012b8db1a85d87bcffd058860e03dc6a8d2fefe6f794697f4a766e
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://9e9482f828012b8db1a85d87bcffd058860e03dc6a8d2fefe6f794697f4a766e
                exitCode: 0
                finishedAt: "2021-09-24T08:19:47Z"
                reason: Completed
                startedAt: "2021-09-24T08:19:47Z"
          - containerID: docker://293b8a1198e1be88e1d8e2a455c1a071737e0af109b66bfe9b3a39a32d0d4117
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: working-dir-initializer
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://293b8a1198e1be88e1d8e2a455c1a071737e0af109b66bfe9b3a39a32d0d4117
                exitCode: 0
                finishedAt: "2021-09-24T08:20:15Z"
                reason: Completed
                startedAt: "2021-09-24T08:20:15Z"
          phase: Succeeded
          podIP: 172.20.64.43
          podIPs:
          - ip: 172.20.64.43
          qosClass: BestEffort
          startTime: "2021-09-24T08:19:40Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-nnxd8 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-24T08:21:08Z"
          generation: 1
          labels:
            tekton.dev/pipeline: pipelinerun-echo-greetings
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:21:08Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:pipelinerun-echo-greetings-echo-good-morning-vffjx:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:steps: {}
                  f:pipelinerun-echo-greetings-echo-good-night-bv47k:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:10Z"
          name: pipelinerun-echo-greetings
          namespace: arendelle-l59c6
          resourceVersion: "3887264"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-l59c6/pipelineruns/pipelinerun-echo-greetings
          uid: 39a6f4e4-c5a9-48d9-b646-f49be90351e9
        spec:
          params:
          - name: MORNING_GREETINGS
            value: Good Morning, Bob!
          - name: NIGHT_GREETINGS
            value: Good Night, Bob!
          pipelineSpec:
            params:
            - default: Good Morning!
              description: morning greetings, default is Good Morning!
              name: MORNING_GREETINGS
              type: string
            - default: Good Night!
              description: Night greetings, default is Good Night!
              name: NIGHT_GREETINGS
              type: string
            tasks:
            - name: echo-good-morning
              params:
              - name: MESSAGE
                value: $(params.MORNING_GREETINGS)
              taskRef:
                kind: Task
                name: task-echo-message
            - name: echo-good-night
              params:
              - name: MESSAGE
                value: $(params.NIGHT_GREETINGS)
              taskRef:
                kind: Task
                name: task-echo-message
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:08Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 2, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: Good Morning!
              description: morning greetings, default is Good Morning!
              name: MORNING_GREETINGS
              type: string
            - default: Good Night!
              description: Night greetings, default is Good Night!
              name: NIGHT_GREETINGS
              type: string
            tasks:
            - name: echo-good-morning
              params:
              - name: MESSAGE
                value: $(params.MORNING_GREETINGS)
              taskRef:
                kind: Task
                name: task-echo-message
            - name: echo-good-night
              params:
              - name: MESSAGE
                value: $(params.NIGHT_GREETINGS)
              taskRef:
                kind: Task
                name: task-echo-message
          startTime: "2021-09-24T08:21:08Z"
          taskRuns:
            pipelinerun-echo-greetings-echo-good-morning-vffjx:
              pipelineTaskName: echo-good-morning
              status:
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:08Z"
                  message: 'pod status "Initialized":"False"; message: "containers with incomplete
                    status: [place-tools]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: pipelinerun-echo-greetings-echo-good-morning-vffjx-pod-7brnb
                startTime: "2021-09-24T08:21:08Z"
                steps:
                - container: step-echo
                  name: echo
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  params:
                  - default: Hello World
                    name: MESSAGE
                    type: string
                  steps:
                  - args:
                    - $(params.MESSAGE)
                    command:
                    - echo
                    image: ubuntu
                    name: echo
                    resources: {}
            pipelinerun-echo-greetings-echo-good-night-bv47k:
              pipelineTaskName: echo-good-night
              status:
                conditions:
                - lastTransitionTime: "2021-09-24T08:21:10Z"
                  message: 'pod status "Initialized":"False"; message: "containers with incomplete
                    status: [place-tools]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: pipelinerun-echo-greetings-echo-good-night-bv47k-pod-9478v
                startTime: "2021-09-24T08:21:08Z"
                steps:
                - container: step-echo
                  name: echo
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  params:
                  - default: Hello World
                    name: MESSAGE
                    type: string
                  steps:
                  - args:
                    - $(params.MESSAGE)
                    command:
                    - echo
                    image: ubuntu
                    name: echo
                    resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-24T08:21:07Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:21:07Z"
          name: task-echo-message
          namespace: arendelle-l59c6
          resourceVersion: "3887184"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-l59c6/tasks/task-echo-message
          uid: 19aacbfa-c727-49a7-9a99-69d1519f58b5
        spec:
          params:
          - default: Hello World
            name: MESSAGE
            type: string
          steps:
          - args:
            - $(params.MESSAGE)
            command:
            - echo
            image: ubuntu
            name: echo
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:08Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipelinerun-echo-greetings
            tekton.dev/pipelineRun: pipelinerun-echo-greetings
            tekton.dev/pipelineTask: echo-good-morning
            tekton.dev/task: task-echo-message
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"39a6f4e4-c5a9-48d9-b646-f49be90351e9"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:10Z"
          name: pipelinerun-echo-greetings-echo-good-morning-vffjx
          namespace: arendelle-l59c6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: pipelinerun-echo-greetings
            uid: 39a6f4e4-c5a9-48d9-b646-f49be90351e9
          resourceVersion: "3887240"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-l59c6/taskruns/pipelinerun-echo-greetings-echo-good-morning-vffjx
          uid: dc77294c-846e-4441-958d-4a7b7406af22
        spec:
          params:
          - name: MESSAGE
            value: Good Morning, Bob!
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: Task
            name: task-echo-message
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:08Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-tools]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: pipelinerun-echo-greetings-echo-good-morning-vffjx-pod-7brnb
          startTime: "2021-09-24T08:21:08Z"
          steps:
          - container: step-echo
            name: echo
            waiting:
              reason: PodInitializing
          taskSpec:
            params:
            - default: Hello World
              name: MESSAGE
              type: string
            steps:
            - args:
              - $(params.MESSAGE)
              command:
              - echo
              image: ubuntu
              name: echo
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:08Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipelinerun-echo-greetings
            tekton.dev/pipelineRun: pipelinerun-echo-greetings
            tekton.dev/pipelineTask: echo-good-night
            tekton.dev/task: task-echo-message
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"39a6f4e4-c5a9-48d9-b646-f49be90351e9"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:10Z"
          name: pipelinerun-echo-greetings-echo-good-night-bv47k
          namespace: arendelle-l59c6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: pipelinerun-echo-greetings
            uid: 39a6f4e4-c5a9-48d9-b646-f49be90351e9
          resourceVersion: "3887239"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-l59c6/taskruns/pipelinerun-echo-greetings-echo-good-night-bv47k
          uid: 8861218b-5eb9-452f-a961-d065652aabc2
        spec:
          params:
          - name: MESSAGE
            value: Good Night, Bob!
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: Task
            name: task-echo-message
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-24T08:21:10Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-tools]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: pipelinerun-echo-greetings-echo-good-night-bv47k-pod-9478v
          startTime: "2021-09-24T08:21:08Z"
          steps:
          - container: step-echo
            name: echo
            waiting:
              reason: PodInitializing
          taskSpec:
            params:
            - default: Hello World
              name: MESSAGE
              type: string
            steps:
            - args:
              - $(params.MESSAGE)
              command:
              - echo
              image: ubuntu
              name: echo
              resources: {}
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 2f2c2940c658934ce6c5bfd9ac1acb29512baa863e6ba2e76aa8b15306c73176
            cni.projectcalico.org/podIP: 172.20.64.38/32
            cni.projectcalico.org/podIPs: 172.20.64.38/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:08Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipelinerun-echo-greetings
            tekton.dev/pipelineRun: pipelinerun-echo-greetings
            tekton.dev/pipelineTask: echo-good-morning
            tekton.dev/task: task-echo-message
            tekton.dev/taskRun: pipelinerun-echo-greetings-echo-good-morning-vffjx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"dc77294c-846e-4441-958d-4a7b7406af22"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-echo"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:08Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:17Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.38"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:54Z"
          name: pipelinerun-echo-greetings-echo-good-morning-vffjx-pod-7brnb
          namespace: arendelle-l59c6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: pipelinerun-echo-greetings-echo-good-morning-vffjx
            uid: dc77294c-846e-4441-958d-4a7b7406af22
          resourceVersion: "3887511"
          selfLink: /api/v1/namespaces/arendelle-l59c6/pods/pipelinerun-echo-greetings-echo-good-morning-vffjx-pod-7brnb
          uid: 58c058f5-7131-4890-923c-2fcaac099c78
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-echo
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - echo
            - --
            - Good Morning, Bob!
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-echo
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-pqmsz
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-pqmsz
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-pqmsz
            secret:
              defaultMode: 420
              secretName: default-token-pqmsz
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:29Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            message: 'containers with unready status: [step-echo]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            message: 'containers with unready status: [step-echo]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: ubuntu
            imageID: ""
            lastState: {}
            name: step-echo
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://dcfdf735c35a5ea18d0379d2cab4c4dd37efb89357c83ded30582a9870481364
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://dcfdf735c35a5ea18d0379d2cab4c4dd37efb89357c83ded30582a9870481364
                exitCode: 0
                finishedAt: "2021-09-24T08:21:20Z"
                reason: Completed
                startedAt: "2021-09-24T08:21:20Z"
          phase: Pending
          podIP: 172.20.64.38
          podIPs:
          - ip: 172.20.64.38
          qosClass: BestEffort
          startTime: "2021-09-24T08:21:08Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 3433b081aa22616cb2ea863720271b3bc1a61b48e17d948b3ef4867437280b42
            cni.projectcalico.org/podIP: 172.20.64.44/32
            cni.projectcalico.org/podIPs: 172.20.64.44/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-24T08:21:08Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipelinerun-echo-greetings
            tekton.dev/pipelineRun: pipelinerun-echo-greetings
            tekton.dev/pipelineTask: echo-good-night
            tekton.dev/task: task-echo-message
            tekton.dev/taskRun: pipelinerun-echo-greetings-echo-good-night-bv47k
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"8861218b-5eb9-452f-a961-d065652aabc2"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-echo"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-24T08:21:08Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-24T08:21:17Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.44"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-24T08:21:53Z"
          name: pipelinerun-echo-greetings-echo-good-night-bv47k-pod-9478v
          namespace: arendelle-l59c6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: pipelinerun-echo-greetings-echo-good-night-bv47k
            uid: 8861218b-5eb9-452f-a961-d065652aabc2
          resourceVersion: "3887499"
          selfLink: /api/v1/namespaces/arendelle-l59c6/pods/pipelinerun-echo-greetings-echo-good-night-bv47k-pod-9478v
          uid: 211b2682-17ea-497f-b3fd-f792b7808fea
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-echo
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - echo
            - --
            - Good Night, Bob!
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-echo
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-pqmsz
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-pqmsz
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-pqmsz
            secret:
              defaultMode: 420
              secretName: default-token-pqmsz
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:28Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            message: 'containers with unready status: [step-echo]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            message: 'containers with unready status: [step-echo]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-24T08:21:08Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: ubuntu
            imageID: ""
            lastState: {}
            name: step-echo
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://83ebda0527c37936dffb7b87fffa5f05ca4e51329e04a10ec06c7b1bf1086c61
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://83ebda0527c37936dffb7b87fffa5f05ca4e51329e04a10ec06c7b1bf1086c61
                exitCode: 0
                finishedAt: "2021-09-24T08:21:18Z"
                reason: Completed
                startedAt: "2021-09-24T08:21:18Z"
          phase: Pending
          podIP: 172.20.64.44
          podIPs:
          - ip: 172.20.64.44
          qosClass: BestEffort
          startTime: "2021-09-24T08:21:08Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-l59c6 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    build_logs.go:35: Could not get logs for pod demo-pipeline-run-1-build-skaffold-app-zdvrr-pod-h8l9m: container "step-create-dir-builtimage-msp8f" in pod "demo-pipeline-run-1-build-skaffold-app-zdvrr-pod-h8l9m" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    build_logs.go:35: Could not get logs for pod pipelinerun-echo-greetings-echo-good-morning-vffjx-pod-7brnb: container "step-echo" in pod "pipelinerun-echo-greetings-echo-good-morning-vffjx-pod-7brnb" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    build_logs.go:35: Could not get logs for pod retry-example-f92nq-retry-me-chm92-pod-wz8cs: container "step-unnamed-0" in pod "retry-example-f92nq-retry-me-chm92-pod-wz8cs" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    build_logs.go:37: build logs 
        >>> Container step-product:
        20
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
    init_test.go:135: Create namespace arendelle-xv56m to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xv56m"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    build_logs.go:37: build logs 
        >>> Container step-git-source-pipeline-git-q7f9v:
        {"level":"info","ts":1632471708.429485,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/tektoncd/pipeline @ c5fc8f90f8fb372bacdd07ff7cf674092bfbf98b (grafted, HEAD, origin/main) in path /workspace/pipeline-git"}
        {"level":"info","ts":1632471708.4538765,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/pipeline-git"}
        
        >>> Container step-condition-check-always-true-sample-condition:
        Hello from Tekton Pipeline!
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    build_logs.go:35: Could not get logs for pod pipelinerun-echo-greetings-echo-good-night-bv47k-pod-9478v: container "step-echo" in pod "pipelinerun-echo-greetings-echo-good-night-bv47k-pod-9478v" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/taskruns/clustertask
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    build_logs.go:35: Could not get logs for pod demo-pipeline-run-1-build-skaffold-web-78x8d-pod-kxcn8: container "step-create-dir-builtimage-5hptw" in pod "demo-pipeline-run-1-build-skaffold-web-78x8d-pod-kxcn8" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    build_logs.go:35: Could not get logs for pod sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dh-hscdg: container "step-sum" in pod "sum-and-multiply-pipeline-run-6dk8g-sum-and-multiply-m9dh-hscdg" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/taskruns/clustertask
    init_test.go:135: Create namespace arendelle-cgljk to deploy to
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    build_logs.go:37: build logs 
        >>> Container step-write:
        
        >>> Container step-read:
        some stuff
=== CONT  TestExamples/v1beta1/taskruns/configmap
    init_test.go:135: Create namespace arendelle-cmkqk to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-cmkqk"
=== CONT  TestExamples/v1beta1/taskruns/clustertask
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-cgljk"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    build_logs.go:37: build logs 
        >>> Container step-create-dir-workspace-zsdsq:
        
        >>> Container step-write-new-stuff:
        + touch /workspace/output/workspace/README.md
        
        >>> Container step-source-mkdir-workspace-dmvzt:
        
        >>> Container step-source-copy-workspace-dsjq2:
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    build_logs.go:37: build logs 
        >>> Container step-sum:
        12
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    build_logs.go:37: build logs 
        >>> Container step-foo:
        
        >>> Container step-foobar:
        
        >>> Container step-bar:
        
        >>> Container step-qux-no-override:
        
        >>> Container step-qux-override:
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    build_logs.go:37: build logs 
        >>> Container step-git-source-workspace-s9rng:
        {"level":"info","ts":1632471659.1625192,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/go/src/github.com/GoogleContainerTools/skaffold"}
        {"level":"info","ts":1632471659.1855304,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/go/src/github.com/GoogleContainerTools/skaffold"}
        
        >>> Container step-run-tests:
        pass
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    init_test.go:135: Create namespace arendelle-4r7k6 to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
    init_test.go:135: Create namespace arendelle-tfs56 to deploy to
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    init_test.go:135: Create namespace arendelle-sjc4m to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    build_logs.go:37: build logs 
        >>> Container step-git-source-workspace-x82pl:
        {"level":"info","ts":1632471689.8796093,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/tektoncd/pipeline @ c5fc8f90f8fb372bacdd07ff7cf674092bfbf98b (grafted, HEAD, origin/main) in path /workspace/workspace"}
        {"level":"info","ts":1632471689.9041164,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/workspace"}
        
        >>> Container step-condition-check-file-exists:
        + test -f /workspace/workspace/README.md
=== CONT  TestExamples/v1beta1/pipelineruns/workspaces
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-sjc4m"
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tfs56"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4r7k6"
=== CONT  TestExamples/v1beta1/pipelineruns/workspaces
    init_test.go:135: Create namespace arendelle-xnc84 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xnc84"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    build_logs.go:37: build logs 
        >>> Container step-create-dir-pipeline-git-xncfx:
        
        >>> Container step-git-source-pipeline-git-89bzx:
        
        >>> Container step-list:
        
        >>> Container step-source-mkdir-pipeline-git-xrrrp:
        
        >>> Container step-source-copy-pipeline-git-p8qw2:
=== CONT  TestExamples/v1alpha1/taskruns/task-multiple-output-image
    init_test.go:135: Create namespace arendelle-lt7n7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-lt7n7"
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
    examples_test.go:169: Deleting namespace arendelle-tfs56
=== CONT  TestExamples/v1alpha1/taskruns/workingdir
    init_test.go:135: Create namespace arendelle-jljsv to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-jljsv"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    examples_test.go:169: Deleting namespace arendelle-4r7k6
=== CONT  TestExamples/v1alpha1/taskruns/workspace-volume
    init_test.go:135: Create namespace arendelle-22q9x to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-22q9x"
=== CONT  TestExamples/v1beta1/taskruns/configmap
    examples_test.go:169: Deleting namespace arendelle-cmkqk
=== CONT  TestExamples/v1alpha1/taskruns/workspace-readonly
    init_test.go:135: Create namespace arendelle-5522f to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-5522f"
=== CONT  TestExamples/v1beta1/taskruns/clustertask
    examples_test.go:109: Deleting clustertask clustertask-v1beta1
    examples_test.go:169: Deleting namespace arendelle-cgljk
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
    init_test.go:135: Create namespace arendelle-ksmtd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ksmtd"
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    examples_test.go:169: Deleting namespace arendelle-sjc4m
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-interp
    init_test.go:135: Create namespace arendelle-bgbr7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-bgbr7"
=== CONT  TestExamples/v1alpha1/taskruns/task-multiple-output-image
    examples_test.go:169: Deleting namespace arendelle-lt7n7
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready-script
    init_test.go:135: Create namespace arendelle-vqf4k to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vqf4k"
=== CONT  TestExamples/v1alpha1/taskruns/workingdir
    examples_test.go:169: Deleting namespace arendelle-jljsv
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
    init_test.go:135: Create namespace arendelle-827sb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-827sb"
=== CONT  TestExamples/v1alpha1/taskruns/workspace-volume
    examples_test.go:169: Deleting namespace arendelle-22q9x
=== CONT  TestExamples/v1beta1/pipelineruns/using_context_variables
    init_test.go:135: Create namespace arendelle-z4v5w to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-z4v5w"
=== CONT  TestExamples/v1beta1/pipelineruns/workspaces
    examples_test.go:169: Deleting namespace arendelle-xnc84
=== CONT  TestExamples/v1alpha1/taskruns/unnamed-steps
    init_test.go:135: Create namespace arendelle-6d9t7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6d9t7"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
    examples_test.go:169: Deleting namespace arendelle-ksmtd
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready
    init_test.go:135: Create namespace arendelle-xmmq2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xmmq2"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-interp
    examples_test.go:169: Deleting namespace arendelle-bgbr7
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
    init_test.go:135: Create namespace arendelle-dqzvf to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dqzvf"
=== CONT  TestExamples/v1alpha1/taskruns/workspace-readonly
    examples_test.go:169: Deleting namespace arendelle-5522f
=== CONT  TestExamples/v1beta1/taskruns/sidecar-ready
    init_test.go:135: Create namespace arendelle-sgxr2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-sgxr2"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready-script
    examples_test.go:169: Deleting namespace arendelle-vqf4k
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    init_test.go:135: Create namespace arendelle-kfv42 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-kfv42"
=== CONT  TestExamples/v1beta1/pipelineruns/using_context_variables
    examples_test.go:169: Deleting namespace arendelle-z4v5w
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
    init_test.go:135: Create namespace arendelle-vj7xp to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vj7xp"
=== CONT  TestExamples/v1alpha1/taskruns/unnamed-steps
    examples_test.go:169: Deleting namespace arendelle-6d9t7
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
    init_test.go:135: Create namespace arendelle-wqwkx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wqwkx"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready
    examples_test.go:169: Deleting namespace arendelle-xmmq2
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
    init_test.go:135: Create namespace arendelle-tqzdz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tqzdz"
=== CONT  TestExamples/v1beta1/taskruns/sidecar-ready
    examples_test.go:169: Deleting namespace arendelle-sgxr2
=== CONT  TestExamples/v1beta1/taskruns/task-result
    init_test.go:135: Create namespace arendelle-kqj84 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-kqj84"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
    examples_test.go:169: Deleting namespace arendelle-xv56m
=== CONT  TestExamples/v1beta1/taskruns/optional-resources
    init_test.go:135: Create namespace arendelle-lzsd8 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-lzsd8"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
    examples_test.go:169: Deleting namespace arendelle-827sb
=== CONT  TestExamples/v1beta1/taskruns/task-output-image
    init_test.go:135: Create namespace arendelle-6r9s4 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6r9s4"
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
    examples_test.go:109: Deleting clustertask clustertask-with-optional-resources-v1beta1
    examples_test.go:169: Deleting namespace arendelle-wqwkx
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
    init_test.go:135: Create namespace arendelle-fpdnr to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fpdnr"
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
    examples_test.go:169: Deleting namespace arendelle-tqzdz
=== CONT  TestExamples/v1beta1/taskruns/image-params
    init_test.go:135: Create namespace arendelle-zk8tj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-zk8tj"
=== CONT  TestExamples/v1beta1/taskruns/task-result
    examples_test.go:169: Deleting namespace arendelle-kqj84
=== CONT  TestExamples/v1beta1/taskruns/task-multiple-output-image
    init_test.go:135: Create namespace arendelle-pcjxz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-pcjxz"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
    examples_test.go:169: Deleting namespace arendelle-dqzvf
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:135: Create namespace arendelle-pnrlj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-pnrlj"
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    examples_test.go:169: Deleting namespace arendelle-kfv42
=== CONT  TestExamples/v1beta1/taskruns/secret-env
    init_test.go:135: Create namespace arendelle-f7nld to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-f7nld"
=== CONT  TestExamples/v1beta1/taskruns/optional-resources
    examples_test.go:169: Deleting namespace arendelle-lzsd8
=== CONT  TestExamples/v1beta1/taskruns/template-volume
    init_test.go:135: Create namespace arendelle-9dbbj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-9dbbj"
panic: test timed out after 30m0s

goroutine 12777 [running]:
testing.(*M).startAlarm.func1()
	/usr/lib/golang/src/testing/testing.go:1618 +0x100
created by time.goFunc
	/usr/lib/golang/src/time/sleep.go:167 +0x48

goroutine 1 [chan receive, 29 minutes]:
testing.tRunner.func1(0xc000672c00)
	/usr/lib/golang/src/testing/testing.go:1088 +0x250
testing.tRunner(0xc000672c00, 0xc00089fb58)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
testing.runTests(0xc00000f140, 0x13433380, 0x6, 0x6, 0xc04b817a2d59d2eb, 0x1a31ee13a04, 0x134cb880, 0x124068d8)
	/usr/lib/golang/src/testing/testing.go:1437 +0x57c
testing.(*M).Run(0xc00069da80, 0x0)
	/usr/lib/golang/src/testing/testing.go:1345 +0x2e4
github.com/tektoncd/pipeline/test.TestMain(0xc00069da80)
	/root/rohan/pipeline/test/init_test.go:180 +0xc4
main.main()
	_testmain.go:55 +0x224

goroutine 19 [chan receive]:
k8s.io/klog/v2.(*loggingT).flushDaemon(0x134cc020)
	/root/go/pkg/mod/k8s.io/klog/v2@v2.8.0/klog.go:1164 +0x90
created by k8s.io/klog/v2.init.0
	/root/go/pkg/mod/k8s.io/klog/v2@v2.8.0/klog.go:418 +0x1a8

goroutine 20 [select]:
go.opencensus.io/stats/view.(*worker).start(0xc000408900)
	/root/go/pkg/mod/go.opencensus.io@v0.23.0/stats/view/worker.go:276 +0x174
created by go.opencensus.io/stats/view.init.0
	/root/go/pkg/mod/go.opencensus.io@v0.23.0/stats/view/worker.go:34 +0xa8

goroutine 21 [chan receive]:
k8s.io/klog.(*loggingT).flushDaemon(0x134cbf40)
	/root/go/pkg/mod/k8s.io/klog@v1.0.0/klog.go:1010 +0x90
created by k8s.io/klog.init.0
	/root/go/pkg/mod/k8s.io/klog@v1.0.0/klog.go:411 +0x18c

goroutine 87 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000673500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000673500, 0xc0003a62c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 24 [chan receive]:
knative.dev/pkg/metrics.(*metricsWorker).start(0xc00084c058)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/metrics/metrics_worker.go:99 +0x54
created by knative.dev/pkg/metrics.init.0
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/metrics/exporter.go:39 +0xe4

goroutine 37 [chan receive, 29 minutes]:
testing.tRunner.func1(0xc000682300)
	/usr/lib/golang/src/testing/testing.go:1088 +0x250
testing.tRunner(0xc000682300, 0x12404168)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 40 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000682780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000682780, 0x12404180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 89 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000673800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000673800, 0xc0003a64c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 187 [sync.Cond.Wait, 29 minutes]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc000ad41a0, 0xc000000001)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc000ad4190)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc000ad4188, 0xc000adc001, 0x3dff, 0x3dff, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc000ad4160, 0xc000adc001, 0x3dff, 0x3dff, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
encoding/json.(*Decoder).refill(0xc000ad42c0, 0xa, 0x9)
	/usr/lib/golang/src/encoding/json/stream.go:165 +0x150
encoding/json.(*Decoder).readValue(0xc000ad42c0, 0x0, 0x0, 0x7fffca423c70)
	/usr/lib/golang/src/encoding/json/stream.go:140 +0x388
encoding/json.(*Decoder).Decode(0xc000ad42c0, 0x12086fa0, 0xc0009c3ba0, 0x1073aeec, 0x0)
	/usr/lib/golang/src/encoding/json/stream.go:63 +0x98
k8s.io/apimachinery/pkg/util/framer.(*jsonFrameReader).Read(0xc000161e30, 0xc0000e2000, 0x4000, 0x4a80, 0x0, 0xc0009013c0, 0x40)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/framer/framer.go:152 +0x2f4
k8s.io/apimachinery/pkg/runtime/serializer/streaming.(*decoder).Decode(0xc00010e870, 0x0, 0x1265c720, 0xc0009013c0, 0x0, 0x0, 0x0, 0xc0000a4540, 0xc000671800)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/runtime/serializer/streaming/streaming.go:77 +0xd0
k8s.io/client-go/rest/watch.(*Decoder).Decode(0xc000202ec0, 0xc0009d9d08, 0x2, 0x1, 0xc000671800, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/client-go@v0.21.4/rest/watch/decoder.go:49 +0xc4
k8s.io/apimachinery/pkg/watch.(*StreamWatcher).receive(0xc0003a7900)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/watch/streamwatcher.go:105 +0x108
created by k8s.io/apimachinery/pkg/watch.NewStreamWatcher
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/watch/streamwatcher.go:76 +0x19c

goroutine 63 [chan send, 22 minutes]:
testing.tRunner.func1(0xc000bba180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bba180, 0xc00012c280)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 131 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000702f00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000702f00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000702f00, 0xc00004f8c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 90 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000673980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000673980, 0xc0003a65c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 85 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000673080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000673080, 0xc0003a6040)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 62 [chan send, 22 minutes]:
testing.tRunner.func1(0xc000bba000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bba000, 0xc00012c100)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 86 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000673380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000673380, 0xc0003a6180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 61 [chan send, 9 minutes]:
testing.tRunner.func1(0xc00037f980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037f980, 0xc000b31b00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 88 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000673680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000673680)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000673680, 0x12367481, 0x24, 0xc000807b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000bcf4c0, 0xc000673680, 0xc0013f3b00, 0xc000bebc00, 0x1c)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000673680)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000673680, 0xc0003a63c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 112 [chan receive, 29 minutes]:
testing.runTests.func1.1(0xc000672c00)
	/usr/lib/golang/src/testing/testing.go:1444 +0x4c
created by testing.runTests.func1
	/usr/lib/golang/src/testing/testing.go:1444 +0xcc

goroutine 132 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000703080)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000703080)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000703080, 0xc00004f9c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 133 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000703680)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000703680)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000703680, 0xc00004fac0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 134 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000703980)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000703980)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000703980, 0xc00004fbc0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 135 [chan send, 29 minutes]:
testing.tRunner.func1(0xc000703c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000703c80, 0xc00004fcc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 136 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000682900)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000682900)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000682900, 0xc00004fe00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 137 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000682f00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000682f00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000682f00, 0xc00004ff00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 138 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000683200)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000683200)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000683200, 0xc000b30000)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 139 [select]:
golang.org/x/net/http2.(*ClientConn).roundTrip(0xc000bdc780, 0xc00122df00, 0x0, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:1144 +0xa4c
golang.org/x/net/http2.(*Transport).RoundTripOpt(0xc0003aed90, 0xc00122df00, 0xc0003d2b00, 0xc0013ac180, 0x5, 0xc00057dee8)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:483 +0x1d8
golang.org/x/net/http2.(*Transport).RoundTrip(...)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:444
golang.org/x/net/http2.noDialH2RoundTripper.RoundTrip(0xc0003aed90, 0xc00122df00, 0x1264d4e0, 0xc0003aed90, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2709 +0x44
net/http.(*Transport).roundTrip(0xc00017a140, 0xc00122df00, 0xb4f6563c52764d16, 0x0, 0x1139d6ac)
	/usr/lib/golang/src/net/http/transport.go:527 +0x1060
net/http.(*Transport).RoundTrip(0xc00017a140, 0xc00122df00, 0x1234234c, 0xa, 0xc00127cba0)
	/usr/lib/golang/src/net/http/roundtrip.go:17 +0x38
k8s.io/client-go/transport.(*userAgentRoundTripper).RoundTrip(0xc00111fc60, 0xc00122de00, 0xc00111fc60, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/client-go@v0.21.4/transport/round_trippers.go:160 +0x2b0
net/http.send(0xc00122de00, 0x1264be60, 0xc00111fc60, 0x0, 0x0, 0x0, 0x1053940c, 0xc0007e3770, 0x0, 0xc0013a20b8)
	/usr/lib/golang/src/net/http/client.go:252 +0x54c
net/http.(*Client).send(0xc000b44960, 0xc00122de00, 0x0, 0x0, 0x0, 0xc0013a20b8, 0x0, 0x1, 0xc0007e3740)
	/usr/lib/golang/src/net/http/client.go:176 +0x16c
net/http.(*Client).do(0xc000b44960, 0xc00122de00, 0x0, 0x0, 0x0)
	/usr/lib/golang/src/net/http/client.go:718 +0x1f0
net/http.(*Client).Do(...)
	/usr/lib/golang/src/net/http/client.go:586
k8s.io/client-go/rest.(*Request).request(0xc000e0f2c0, 0x126a03e0, 0xc0012942a0, 0xc0006cb288, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/client-go@v0.21.4/rest/request.go:906 +0x624
k8s.io/client-go/rest.(*Request).Do(0xc000e0f2c0, 0x126a03e0, 0xc0012942a0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/root/go/pkg/mod/k8s.io/client-go@v0.21.4/rest/request.go:980 +0xc0
github.com/tektoncd/pipeline/pkg/client/clientset/versioned/typed/pipeline/v1beta1.(*pipelineRuns).Get(0xc00111ff00, 0x126a03e0, 0xc0012942a0, 0xc000bea0e0, 0x1a, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
	/root/rohan/pipeline/pkg/client/clientset/versioned/typed/pipeline/v1beta1/pipelinerun.go:75 +0x270
github.com/tektoncd/pipeline/test.WaitForPipelineRunState.func1(0x0, 0xc000a6e000, 0x0)
	/root/rohan/pipeline/test/wait.go:166 +0xf0
github.com/tektoncd/pipeline/test.pollImmediateWithContext.func1(0xc0006cb620, 0xc0001111a0, 0x0)
	/root/rohan/pipeline/test/wait.go:76 +0xcc
k8s.io/apimachinery/pkg/util/wait.runConditionWithCrashProtection(0xc0006cb930, 0xc0006cb600, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:211 +0x78
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000bea240, 0xc0006cb930, 0xc0001111a0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:541 +0x144
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000bea240, 0xc001639930, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000bea240, 0xc001639930, 0xc000bea240, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc001639930, 0x21f2cc90791, 0x134cb880)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a03e0, 0xc0012942a0, 0xc001639aa0, 0x126a03e0, 0xc0012942a0)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForPipelineRunState(0x126a03e0, 0xc0012942a0, 0xc0015001b0, 0xc000bea0e0, 0x1a, 0x8bb2c97000, 0xc000a4a2e0, 0xc000bea0e0, 0x1a, 0x0, ...)
	/root/rohan/pipeline/test/wait.go:165 +0x23c
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc0012f2540, 0xc000683500, 0xc0015001b0, 0xc000bea0e0, 0x1a)
	/root/rohan/pipeline/test/examples_test.go:54 +0x84
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000683500)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000683500, 0xc000b30100)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 140 [chan send, 6 minutes]:
testing.tRunner.func1(0xc000683800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000683800, 0xc000b30200)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 141 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000683b00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000683b00)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000683b00, 0x1236da16, 0x28, 0xc000811b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc00059b900, 0xc000683b00, 0xc0012dd560, 0xc001168420, 0x13)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000683b00)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000683b00, 0xc000b30300)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 142 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000683e00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000683e00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000683e00, 0xc000b30400)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 143 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000782480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000782480, 0xc000b30500)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 144 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000782780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000782780)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000782780, 0x12367481, 0x24, 0xc001377b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc00120b1c0, 0xc000782780, 0xc0013f3e60, 0xc0013f98e0, 0x11)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000782780)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000782780, 0xc000b30600)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 145 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000782a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000782a80, 0xc000b30700)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 146 [chan send, 27 minutes]:
testing.tRunner.func1(0xc000782d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000782d80, 0xc000b30800)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 147 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000783080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000783080, 0xc000b30900)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 148 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000783380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000783380, 0xc000b30a00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 149 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000783680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000783680, 0xc000b30b00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 150 [chan send, 22 minutes]:
testing.tRunner.func1(0xc000783980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000783980, 0xc000b30c00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 151 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000783c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000783c80)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000783c80, 0x12355c05, 0x18, 0xc000b62ad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc000783c80)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000b31e40, 0xc000783c80, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000783c80)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000783c80, 0xc000b30d00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 152 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000103200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103200, 0xc000b30e00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 153 [chan send, 23 minutes]:
testing.tRunner.func1(0xc000103500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103500, 0xc000b30f00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 154 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000103800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103800, 0xc000b31000)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 155 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000103b00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103b00, 0xc000b31100)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 156 [chan send, 23 minutes]:
testing.tRunner.func1(0xc000103e00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103e00, 0xc000b31200)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 157 [chan send, 24 minutes]:
testing.tRunner.func1(0xc00037e180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037e180, 0xc000b31300)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 158 [chan send, 20 minutes]:
testing.tRunner.func1(0xc00037e480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037e480, 0xc000b31400)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 159 [chan send, 19 minutes]:
testing.tRunner.func1(0xc00037e780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037e780, 0xc000b31500)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 160 [chan send, 21 minutes]:
testing.tRunner.func1(0xc00037ea80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037ea80, 0xc000b31600)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 161 [chan send, 24 minutes]:
testing.tRunner.func1(0xc00037ed80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037ed80, 0xc000b31700)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 162 [chan send, 29 minutes]:
testing.tRunner.func1(0xc00037f080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037f080, 0xc000b31800)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 163 [chan send, 11 minutes]:
testing.tRunner.func1(0xc00037f380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037f380, 0xc000b31900)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 164 [chan send, 10 minutes]:
testing.tRunner.func1(0xc00037f680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037f680, 0xc000b31a00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 91 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000673b00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000673b00)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000673b00, 0x1237087d, 0x29, 0xc00111fe58, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000673b00)
	/root/rohan/pipeline/test/examples_test.go:153 +0x958
testing.tRunner(0xc000673b00, 0xc0003a66c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 92 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000673e00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000673e00, 0xc0003a67c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 93 [chan send, 28 minutes]:
testing.tRunner.func1(0xc00041f380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00041f380, 0xc0003a68c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 94 [chan send, 10 minutes]:
testing.tRunner.func1(0xc00041f680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00041f680, 0xc0003a69c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 95 [chan send, 11 minutes]:
testing.tRunner.func1(0xc00041f980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00041f980, 0xc0003a6ac0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 96 [chan send, 11 minutes]:
testing.tRunner.func1(0xc00041fc80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00041fc80, 0xc0003a6bc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 97 [chan send, 11 minutes]:
testing.tRunner.func1(0xc00037fb00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00037fb00, 0xc0003a6d00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 178 [chan send, 27 minutes]:
testing.tRunner.func1(0xc000702480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000702480, 0xc0003a6e00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 179 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000703200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000703200)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000703200, 0x12345608, 0xd, 0xc00130be68, 0x2, 0x2)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000703200)
	/root/rohan/pipeline/test/examples_test.go:144 +0x4dc
testing.tRunner(0xc000703200, 0xc0003a6f00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 180 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000ab2180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ab2180, 0xc0003a7000)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 181 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000ab2480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ab2480, 0xc0003a71c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 182 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000ab2780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000ab2780)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000ab2780, 0x1236da16, 0x28, 0xc0006c7b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000dbe580, 0xc000ab2780, 0xc0012aa480, 0xc00123d050, 0xe)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000ab2780)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000ab2780, 0xc0003a72c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 183 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000ab2a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ab2a80, 0xc0003a73c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 184 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000ab2d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ab2d80, 0xc0003a74c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 185 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000ab3080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ab3080, 0xc0003a75c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 186 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000ab3380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ab3380, 0xc0003a76c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 64 [chan send, 27 minutes]:
testing.tRunner.func1(0xc000bba300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bba300, 0xc00012c880)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 65 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0015c2200, 0xc0010e5930, 0xc0015a7200, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0015c2200, 0xc001635930, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0015c2200, 0xc001635930, 0xc0015c2200, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc001635930, 0x21f4a0b01b7, 0x134cb880)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a03e0, 0xc00084bd40, 0xc001635aa0, 0x126a03e0, 0xc00084bd40)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForPipelineRunState(0x126a03e0, 0xc00084bd40, 0xc0013154d0, 0xc0015c2180, 0x17, 0x8bb2c97000, 0xc0005eb520, 0xc0015c2180, 0x17, 0x0, ...)
	/root/rohan/pipeline/test/wait.go:165 +0x23c
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc00110c100, 0xc000bba600, 0xc0013154d0, 0xc0015c2180, 0x17)
	/root/rohan/pipeline/test/examples_test.go:54 +0x84
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bba600)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bba600, 0xc00012cac0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 210 [chan send, 23 minutes]:
testing.tRunner.func1(0xc000bba900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bba900, 0xc00012cc40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 211 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0013a6f40, 0xc000747930, 0xc000fed1a0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0013a6f40, 0xc00143d930, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0013a6f40, 0xc00143d930, 0xc0013a6f40, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc00143d930, 0x1d09f3e5fd7, 0x134cb880)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a03e0, 0xc00113fe00, 0xc00143daa0, 0x126a03e0, 0xc00113fe00)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForPipelineRunState(0x126a03e0, 0xc00113fe00, 0xc0011cddd0, 0xc0013a6e80, 0x1b, 0x8bb2c97000, 0xc00130ca60, 0xc0013a6e80, 0x1b, 0x0, ...)
	/root/rohan/pipeline/test/wait.go:165 +0x23c
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc0011fdf00, 0xc000bbac00, 0xc0011cddd0, 0xc0013a6e80, 0x1b)
	/root/rohan/pipeline/test/examples_test.go:54 +0x84
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bbac00)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bbac00, 0xc00012cd80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 212 [chan send, 6 minutes]:
testing.tRunner.func1(0xc000bbaf00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bbaf00, 0xc00012d000)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 213 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000bbb200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bbb200, 0xc00012d300)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 214 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000bbb500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bbb500, 0xc00012d540)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 215 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000bbb800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bbb800)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bbb800, 0x1236da16, 0x28, 0xc0007f3b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000d14700, 0xc000bbb800, 0xc001217b90, 0xc001169da0, 0x1a)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bbb800)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bbb800, 0xc00012d640)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 216 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000bbbb00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bbbb00)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bbbb00, 0x1236da16, 0x28, 0xc000815b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000d7c540, 0xc000bbbb00, 0xc001092510, 0xc000c514d0, 0x22)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bbbb00)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bbbb00, 0xc00012d740)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 217 [chan send, 7 minutes]:
testing.tRunner.func1(0xc000bbbe00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bbbe00, 0xc00012d840)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 218 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000bdc180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000bdc180)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000bdc180, 0x12355c05, 0x18, 0xc000bd5ad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc000bdc180)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc00059b8c0, 0xc000bdc180, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bdc180)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000bdc180, 0xc00012d940)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 219 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000bdc480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bdc480)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bdc480, 0x1236da16, 0x28, 0xc000743b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000f02680, 0xc000bdc480, 0xc001017ef0, 0xc000888030, 0x23)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bdc480)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bdc480, 0xc00012da40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 195 [chan send, 18 minutes]:
testing.tRunner.func1(0xc0006cc180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cc180, 0xc00059a0c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 196 [chan send, 16 minutes]:
testing.tRunner.func1(0xc0006cc480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc0006cc480)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc0006cc480, 0x1236da16, 0x28, 0xc0006cbb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000953780, 0xc0006cc480, 0xc0011807e0, 0xc000419ba0, 0x13)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0006cc480)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0006cc480, 0xc00059a1c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 197 [chan send, 10 minutes]:
testing.tRunner.func1(0xc0006cc780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cc780, 0xc00059a2c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 198 [chan send, 24 minutes]:
testing.tRunner.func1(0xc0006cca80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cca80, 0xc00059a740)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 199 [chan send, 11 minutes]:
testing.tRunner.func1(0xc0006ccd80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006ccd80, 0xc00059ad00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 200 [chan send, 25 minutes]:
testing.tRunner.func1(0xc0006cd080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cd080, 0xc00059ae00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 201 [chan send, 12 minutes]:
testing.tRunner.func1(0xc0006cd380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cd380, 0xc00059b000)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 202 [chan send, 12 minutes]:
testing.tRunner.func1(0xc0006cd680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cd680, 0xc00059b100)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 203 [chan send, 12 minutes]:
testing.tRunner.func1(0xc0006cd980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cd980, 0xc00059b200)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 204 [chan send, 26 minutes]:
testing.tRunner.func1(0xc0006cdc80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006cdc80, 0xc00059b300)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 205 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000412000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000412000, 0xc00059b400)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 206 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000412300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000412300)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000412300, 0x12367481, 0x24, 0xc0007efb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc0010a5f00, 0xc000412300, 0xc0011d2120, 0xc0006dbae0, 0x13)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000412300)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000412300, 0xc00059b500)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 207 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000412600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000412600, 0xc00059b600)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 208 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000412900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000412900)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000412900, 0x12355c05, 0x18, 0xc000470ad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc000412900)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000dbe540, 0xc000412900, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000412900)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000412900, 0xc00059b700)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 209 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000412c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000412c00, 0xc00059b800)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 226 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000412f00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000412f00, 0xc00059b900)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 227 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000413200)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000413200)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000413200, 0xc00059ba00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 228 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000413500)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000413500)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000413500, 0xc00059bb00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 229 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000413800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000413800, 0xc00059bc00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 230 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000413b00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000413b00, 0xc00059bd00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 231 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000ca2fc0, 0xc0007f3988, 0xc000a6ea20, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000ca2fc0, 0xc0015d3988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000ca2fc0, 0xc0015d3988, 0xc000ca2fc0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0015d3988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a0360, 0xc001404980, 0xc0015d3aa8, 0xc00121fd40, 0x39)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForTaskRunState(0x126a0360, 0xc001404980, 0xc001419320, 0xc000ca2f40, 0x12, 0xc000772c00, 0xc000ca2f40, 0x12, 0x0, 0x0)
	/root/rohan/pipeline/test/wait.go:89 +0x1f0
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc001404980, 0xc000413e00, 0xc001419320, 0xc000ca2f40, 0x12)
	/root/rohan/pipeline/test/examples_test.go:61 +0x78
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000413e00)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000413e00, 0xc00059be00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 232 [chan send, 6 minutes]:
testing.tRunner.func1(0xc0004b4180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0004b4180, 0xc00059bf00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 233 [chan send, 5 minutes]:
testing.tRunner.func1(0xc0004b4480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0004b4480, 0xc0006c2040)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 234 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0004b4780)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004b4780)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0004b4780, 0xc0006c2140)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 235 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0004b4a80)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004b4a80)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0004b4a80, 0xc0006c2240)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 236 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0004b4d80)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004b4d80)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0004b4d80, 0xc0006c2340)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 237 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0004b5080)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004b5080)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0004b5080, 0xc0006c2440)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 238 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000ca25e0, 0xc0010e9988, 0xc000111380, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000ca25e0, 0xc000ef5988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000ca25e0, 0xc000ef5988, 0xc000ca25e0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc000ef5988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a0360, 0xc001514040, 0xc000ef5aa8, 0xc0013247e0, 0x29)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForTaskRunState(0x126a0360, 0xc001514040, 0xc0014085a0, 0xc00075d630, 0xa, 0xc000933680, 0xc00075d630, 0xa, 0x0, 0x0)
	/root/rohan/pipeline/test/wait.go:89 +0x1f0
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc001514040, 0xc0004b5380, 0xc0014085a0, 0xc00075d630, 0xa)
	/root/rohan/pipeline/test/examples_test.go:61 +0x78
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004b5380)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0004b5380, 0xc0006c2540)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 239 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0004b5680)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004b5680)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0004b5680, 0xc0006c2640)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 240 [chan send, 24 minutes]:
testing.tRunner.func1(0xc0004b5980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0004b5980, 0xc0006c2740)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 241 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0004b5c80)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004b5c80)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0004b5c80, 0xc0006c2840)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 242 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0005fa000)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005fa000)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0005fa000, 0xc0006c2940)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 243 [chan send, 9 minutes]:
testing.tRunner.func1(0xc0005fa300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0005fa300, 0xc0006c2a40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 244 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0005fa600)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005fa600)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0005fa600, 0xc0006c2b40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 245 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0005fa900)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005fa900)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0005fa900, 0xc0006c2c40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 246 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0005fac00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005fac00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0005fac00, 0xc0006c2d40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 247 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc000205900)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0005faf00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005faf00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0005faf00, 0xc0006c2e40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 248 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0009fa5e0, 0xc0010ef988, 0xc000ad9f80, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0009fa5e0, 0xc000ef1988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0009fa5e0, 0xc000ef1988, 0xc0009fa5e0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc000ef1988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a0360, 0xc0014d8740, 0xc000ef1aa8, 0xc000111500, 0x51)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForTaskRunState(0x126a0360, 0xc0014d8740, 0xc001055e60, 0xc0009fa560, 0x1e, 0xc000545a00, 0xc0009fa560, 0x1e, 0x0, 0x0)
	/root/rohan/pipeline/test/wait.go:89 +0x1f0
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc0014d8740, 0xc0005fb200, 0xc001055e60, 0xc0009fa560, 0x1e)
	/root/rohan/pipeline/test/examples_test.go:61 +0x78
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005fb200)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0005fb200, 0xc0006c2f40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 249 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0005fc280, 0xc0010f3988, 0xc0015a6600, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0005fc280, 0xc0015db988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0005fc280, 0xc0015db988, 0xc0005fc280, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0015db988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a0360, 0xc0014c1740, 0xc0015dbaa8, 0xc001744000, 0x4b)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForTaskRunState(0x126a0360, 0xc0014c1740, 0xc0013d7e60, 0xc0005fc200, 0x1b, 0xc000a064c0, 0xc0005fc200, 0x1b, 0x0, 0x0)
	/root/rohan/pipeline/test/wait.go:89 +0x1f0
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc0014c1740, 0xc0005fb500, 0xc0013d7e60, 0xc0005fc200, 0x1b)
	/root/rohan/pipeline/test/examples_test.go:61 +0x78
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005fb500)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0005fb500, 0xc0006c3040)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 250 [chan send, 6 minutes]:
testing.tRunner.func1(0xc0005fb800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0005fb800, 0xc0006c3140)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 251 [chan send, 6 minutes]:
testing.tRunner.func1(0xc0005fbb00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0005fbb00, 0xc0006c3240)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 252 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0009faa00, 0xc000743988, 0xc0015a77a0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0009faa00, 0xc0015d7988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0009faa00, 0xc0015d7988, 0xc0009faa00, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0015d7988, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.pollImmediateWithContext(0x126a0360, 0xc0011fde40, 0xc0015d7aa8, 0xc000b03c80, 0x3f)
	/root/rohan/pipeline/test/wait.go:70 +0x7c
github.com/tektoncd/pipeline/test.WaitForTaskRunState(0x126a0360, 0xc0011fde40, 0xc0013e8000, 0xc0009fa980, 0x15, 0xc000545e60, 0xc0009fa980, 0x15, 0x0, 0x0)
	/root/rohan/pipeline/test/wait.go:89 +0x1f0
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc0011fde40, 0xc0005fbe00, 0xc0013e8000, 0xc0009fa980, 0x15)
	/root/rohan/pipeline/test/examples_test.go:61 +0x78
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0005fbe00)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0005fbe00, 0xc0006c3340)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 253 [chan send, 18 minutes]:
testing.tRunner.func1(0xc0006a4180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006a4180, 0xc0006c3440)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 254 [chan send, 19 minutes]:
testing.tRunner.func1(0xc0006a4480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006a4480, 0xc0006c3540)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 255 [chan send, 19 minutes]:
testing.tRunner.func1(0xc0006a4780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006a4780, 0xc0006c3640)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 256 [chan send, 19 minutes]:
testing.tRunner.func1(0xc0006a4a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc0006a4a80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc0006a4a80, 0x12367481, 0x24, 0xc0007f3b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000fdf700, 0xc0006a4a80, 0xc00096af30, 0xc000dd6b20, 0x1a)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0006a4a80)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0006a4a80, 0xc0006c3740)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 257 [chan send, 6 minutes]:
testing.tRunner.func1(0xc0006a4d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006a4d80, 0xc0006c3840)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 258 [chan send, 25 minutes]:
testing.tRunner.func1(0xc0006a5080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc0006a5080)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc0006a5080, 0x12367481, 0x24, 0xc0010a7b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000e1e380, 0xc0006a5080, 0xc000bd10e0, 0xc0009046c0, 0x16)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0006a5080)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0006a5080, 0xc0006c3940)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 259 [chan send, 26 minutes]:
testing.tRunner.func1(0xc0006a5380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0006a5380, 0xc0006c3a40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 221 [IO wait]:
internal/poll.runtime_pollWait(0x7ffff7669d10, 0x72, 0x134435a8)
	/usr/lib/golang/src/runtime/netpoll.go:222 +0x50
internal/poll.(*pollDesc).wait(0xc00069c198, 0x72, 0x1264e200, 0x134435a8, 0x0)
	/usr/lib/golang/src/internal/poll/fd_poll_runtime.go:87 +0xe4
internal/poll.(*pollDesc).waitRead(...)
	/usr/lib/golang/src/internal/poll/fd_poll_runtime.go:92
internal/poll.(*FD).Read(0xc00069c180, 0xc000eb4000, 0x9aac, 0x9aac, 0x0, 0x0, 0x0)
	/usr/lib/golang/src/internal/poll/fd_unix.go:159 +0x1bc
net.(*netFD).Read(0xc00069c180, 0xc000eb4000, 0x9aac, 0x9aac, 0x9aa7, 0xc0003655e0, 0xc)
	/usr/lib/golang/src/net/fd_posix.go:55 +0x50
net.(*conn).Read(0xc0006c0008, 0xc000eb4000, 0x9aac, 0x9aac, 0x101721bc, 0x7, 0x1049ec68)
	/usr/lib/golang/src/net/net.go:182 +0xac
crypto/tls.(*atLeastReader).Read(0xc000c6d2e0, 0xc000eb4000, 0x9aac, 0x9aac, 0x39b, 0x12648340, 0x385)
	/usr/lib/golang/src/crypto/tls/conn.go:779 +0x8c
bytes.(*Buffer).ReadFrom(0xc000138980, 0x12648140, 0xc000c6d2e0, 0x39b, 0xc000eb4005, 0xc000eb4005)
	/usr/lib/golang/src/bytes/buffer.go:204 +0x120
crypto/tls.(*Conn).readFromUntil(0xc000138700, 0x1264c200, 0xc0006c0008, 0x5, 0xc0006c0008, 0x385)
	/usr/lib/golang/src/crypto/tls/conn.go:801 +0x1ac
crypto/tls.(*Conn).readRecordOrCCS(0xc000138700, 0x0, 0x0, 0x10063250)
	/usr/lib/golang/src/crypto/tls/conn.go:608 +0x348
crypto/tls.(*Conn).readRecord(...)
	/usr/lib/golang/src/crypto/tls/conn.go:576
crypto/tls.(*Conn).Read(0xc000138700, 0xc00078f000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/usr/lib/golang/src/crypto/tls/conn.go:1252 +0x188
bufio.(*Reader).Read(0xc000346f60, 0xc0006b03b8, 0x9, 0x9, 0x37c, 0x3e88, 0x1074f638)
	/usr/lib/golang/src/bufio/bufio.go:227 +0x5d8
io.ReadAtLeast(0x12647f60, 0xc000346f60, 0xc0006b03b8, 0x9, 0x9, 0x9, 0x10774d68, 0xc001481a08, 0x1075afbc)
	/usr/lib/golang/src/io/io.go:314 +0x88
io.ReadFull(...)
	/usr/lib/golang/src/io/io.go:333
golang.org/x/net/http2.readFrameHeader(0xc0006b03b8, 0x9, 0x9, 0x12647f60, 0xc000346f60, 0x0, 0x0, 0xc000c80180, 0x1007ede0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/frame.go:237 +0x68
golang.org/x/net/http2.(*Framer).ReadFrame(0xc0006b0380, 0xc000c80180, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/frame.go:492 +0xbc
golang.org/x/net/http2.(*clientConnReadLoop).run(0xc001481fa8, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:1828 +0x144
golang.org/x/net/http2.(*ClientConn).readLoop(0xc000bdc780)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:1750 +0x78
created by golang.org/x/net/http2.(*Transport).newClientConn
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:704 +0xa08

goroutine 188 [select, 29 minutes]:
knative.dev/pkg/test/logstream/v2.(*namespaceSource).watchPods.func1(0x1265cb60, 0xc0003a7900, 0xc000236a00)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:97 +0x1cc
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).watchPods
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:92 +0x1e0

goroutine 167 [syscall, 29 minutes]:
os/signal.signal_recv(0x0)
	/usr/lib/golang/src/runtime/sigqueue.go:147 +0xf8
os/signal.loop()
	/usr/lib/golang/src/os/signal/signal_unix.go:23 +0x28
created by os/signal.Notify.func1.1
	/usr/lib/golang/src/os/signal/signal.go:150 +0x7c

goroutine 12191 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc0015a7860, 0x3b9aca00, 0x8bb2c97000, 0xc0015a7800)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 126 [sync.Cond.Wait]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc000981640, 0xc0000012b5)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc000981630)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc000981628, 0xc0000dd702, 0x8fe, 0x8fe, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc000981600, 0xc0000dd702, 0x8fe, 0x8fe, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
bufio.(*Scanner).Scan(0xc0005cbf00, 0x37b)
	/usr/lib/golang/src/bufio/scan.go:214 +0x134
knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod.func1(0xc000823b20, 0x1b, 0xc000236a00, 0xc000732850, 0x10, 0xc000a1f6b0, 0x2c, 0xc00011a970)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:165 +0x320
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:148 +0x24c

goroutine 125 [sync.Cond.Wait]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc000980b40, 0xc000002bda)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc000980b30)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc000980b28, 0xc000e0c000, 0x2000, 0x2000, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc000980b00, 0xc000e0c000, 0x2000, 0x2000, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
bufio.(*Scanner).Scan(0xc000399f00, 0x348)
	/usr/lib/golang/src/bufio/scan.go:214 +0x134
knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod.func1(0xc0008ed4d0, 0x7, 0xc000236a00, 0xc0008ecaf0, 0x10, 0xc000a1ebd0, 0x29, 0xc000b71be0)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:165 +0x320
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:148 +0x24c

goroutine 168 [chan receive, 29 minutes]:
knative.dev/pkg/test.waitForInterrupt.func1(0xc0009baa20)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/cleanup.go:38 +0x38
created by knative.dev/pkg/test.waitForInterrupt
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/cleanup.go:37 +0xb4

goroutine 12073 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000a6eae0, 0x3b9aca00, 0x8bb2c97000, 0xc000a6ea80)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 12183 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc0015a66c0, 0x3b9aca00, 0x8bb2c97000, 0xc0015a6660)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 12173 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc0001112c0, 0x3b9aca00, 0x8bb2c97000, 0xc000111260)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 12189 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc0015a72c0, 0x3b9aca00, 0x8bb2c97000, 0xc0015a7260)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 12215 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000a4e0c0, 0x3b9aca00, 0x8bb2c97000, 0xc000a4e060)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 9558 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000fed260, 0x3b9aca00, 0x8bb2c97000, 0xc000fed200)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 12176 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000111440, 0x3b9aca00, 0x8bb2c97000, 0xc0001113e0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88
FAIL	github.com/tektoncd/pipeline/test	1800.144s
FAIL
