=== RUN   TestResourceVersionReactor
=== RUN   TestResourceVersionReactor/first_resource
=== RUN   TestResourceVersionReactor/replace_resource_version
--- PASS: TestResourceVersionReactor (0.00s)
    --- PASS: TestResourceVersionReactor/first_resource (0.00s)
    --- PASS: TestResourceVersionReactor/replace_resource_version (0.00s)
=== RUN   TestExamples
    path_filtering.go:62: Allowing only "stable" examples
=== PAUSE TestExamples
=== RUN   TestYamls
    path_filtering.go:62: Allowing only "stable" examples
=== PAUSE TestYamls
=== RUN   TestStablePathFilter
=== RUN   TestStablePathFilter/_test.yaml
=== RUN   TestStablePathFilter/_alpha_test.yaml
=== RUN   TestStablePathFilter/_beta_test.yaml
=== RUN   TestStablePathFilter/_foo_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_taskruns_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_taskruns_alpha_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml#01
=== RUN   TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01
--- PASS: TestStablePathFilter (0.00s)
    --- PASS: TestStablePathFilter/_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_beta_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_foo_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_taskruns_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml#01 (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01 (0.00s)
=== RUN   TestAlphaPathFilter
=== RUN   TestAlphaPathFilter/_test.yaml
=== RUN   TestAlphaPathFilter/_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_foo_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_taskruns_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_taskruns_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml#01
=== RUN   TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01
--- PASS: TestAlphaPathFilter (0.00s)
    --- PASS: TestAlphaPathFilter/_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_foo_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_taskruns_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml#01 (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01 (0.00s)
=== RUN   TestCreateImage
2021/09/27 03:40:47 GET /v2/
2021/09/27 03:40:47 HEAD /v2/task/test-create-image/blobs/sha256:dde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6 404 BLOB_UNKNOWN Unknown blob
2021/09/27 03:40:47 HEAD /v2/task/test-create-image/blobs/sha256:9ab10150462e0b713850897e4d47ddc1e0e82a392683c177b430652929c36cc4 404 BLOB_UNKNOWN Unknown blob
2021/09/27 03:40:47 POST /v2/task/test-create-image/blobs/uploads/
2021/09/27 03:40:47 POST /v2/task/test-create-image/blobs/uploads/
2021/09/27 03:40:47 PATCH /v2/task/test-create-image/blobs/uploads/6049050849959421856
2021/09/27 03:40:47 PATCH /v2/task/test-create-image/blobs/uploads/2490123070490236700
2021/09/27 03:40:47 PUT /v2/task/test-create-image/blobs/uploads/6049050849959421856?digest=sha256%3Adde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6
2021/09/27 03:40:47 PUT /v2/task/test-create-image/blobs/uploads/2490123070490236700?digest=sha256%3A9ab10150462e0b713850897e4d47ddc1e0e82a392683c177b430652929c36cc4
2021/09/27 03:40:47 PUT /v2/task/test-create-image/manifests/latest
2021/09/27 03:40:47 GET /v2/
2021/09/27 03:40:47 GET /v2/task/test-create-image/manifests/sha256:78e6c563134c9d91efdcb2ee897ac03f12945318efe148dd84ff298c855d1416
2021/09/27 03:40:47 GET /v2/task/test-create-image/blobs/sha256:dde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6
--- PASS: TestCreateImage (0.06s)
=== CONT  TestYamls
    examples_test.go:201: Adding test yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:201: Adding test yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== RUN   TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/clustertask-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/demo-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/output-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/task_results_example.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/workspaces.yaml
=== PAUSE TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== RUN   TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== PAUSE TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/build-push-kaniko.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/cloud-event.yaml
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/clustertask.yaml
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/configmap.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/custom-env.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/custom-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/dind-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/gcs-resource.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-resource.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-ssh-creds.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/home-is-set.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/home-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/optional-resources-with-clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/pullrequest.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-env.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-volume-params.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-interp.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-ready-script.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-ready.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/step-by-digest.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/step-script.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/steps-run-in-order.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/steptemplate-env-merge.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-multiple-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-result.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-volume-args.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/template-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/unnamed-steps.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workingdir.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace-readonly.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/clustertask-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/demo-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/optional-workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/output-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipeline-result-conditions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-results-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-results.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-task-execution-status.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-extra-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-resourcespec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-when-expressions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/task_results_example.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using-retries-and-retry-count-variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using_context_variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/authenticating-git-commands.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/cloud-event.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/configmap.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/custom-env.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/custom-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/dind-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/gcs-resource.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-resource.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-ssh-creds-without-known_hosts.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-ssh-creds.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/home-is-set.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/home-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/image-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-resources-with-clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/pullrequest.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/pullrequest_input_copystep_output.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/run-steps-as-non-root.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-env.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-volume-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-interp.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-ready-script.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-ready.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/step-by-digest.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/step-script.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/steps-run-in-order.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/steptemplate-env-merge.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-multiple-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-result.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-volume-args.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/template-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/unnamed-steps.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/using_context_variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workingdir.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-in-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-readonly.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace.yaml
=== RUN   TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/demo-optional-resources
=== PAUSE TestExamples/v1alpha1/pipelineruns/demo-optional-resources
=== RUN   TestExamples/v1alpha1/pipelineruns/output-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/output-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/task_results_example
=== PAUSE TestExamples/v1alpha1/pipelineruns/task_results_example
=== RUN   TestExamples/v1alpha1/pipelineruns/workspaces
=== PAUSE TestExamples/v1alpha1/pipelineruns/workspaces
=== RUN   TestExamples/v1alpha1/taskruns/build-push-kaniko
=== PAUSE TestExamples/v1alpha1/taskruns/build-push-kaniko
=== RUN   TestExamples/v1alpha1/taskruns/cloud-event
=== PAUSE TestExamples/v1alpha1/taskruns/cloud-event
=== RUN   TestExamples/v1alpha1/taskruns/clustertask
=== PAUSE TestExamples/v1alpha1/taskruns/clustertask
=== RUN   TestExamples/v1alpha1/taskruns/configmap
=== PAUSE TestExamples/v1alpha1/taskruns/configmap
=== RUN   TestExamples/v1alpha1/taskruns/custom-env
=== PAUSE TestExamples/v1alpha1/taskruns/custom-env
=== RUN   TestExamples/v1alpha1/taskruns/custom-volume
=== PAUSE TestExamples/v1alpha1/taskruns/custom-volume
=== RUN   TestExamples/v1alpha1/taskruns/dind-sidecar
=== PAUSE TestExamples/v1alpha1/taskruns/dind-sidecar
=== RUN   TestExamples/v1alpha1/taskruns/gcs-resource
=== PAUSE TestExamples/v1alpha1/taskruns/gcs-resource
=== RUN   TestExamples/v1alpha1/taskruns/git-resource
=== PAUSE TestExamples/v1alpha1/taskruns/git-resource
=== RUN   TestExamples/v1alpha1/taskruns/git-ssh-creds
=== PAUSE TestExamples/v1alpha1/taskruns/git-ssh-creds
=== RUN   TestExamples/v1alpha1/taskruns/git-volume
=== PAUSE TestExamples/v1alpha1/taskruns/git-volume
=== RUN   TestExamples/v1alpha1/taskruns/home-is-set
=== PAUSE TestExamples/v1alpha1/taskruns/home-is-set
=== RUN   TestExamples/v1alpha1/taskruns/home-volume
=== PAUSE TestExamples/v1alpha1/taskruns/home-volume
=== RUN   TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
=== PAUSE TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
=== RUN   TestExamples/v1alpha1/taskruns/optional-resources
=== PAUSE TestExamples/v1alpha1/taskruns/optional-resources
=== RUN   TestExamples/v1alpha1/taskruns/pullrequest
=== PAUSE TestExamples/v1alpha1/taskruns/pullrequest
=== RUN   TestExamples/v1alpha1/taskruns/secret-env
=== PAUSE TestExamples/v1alpha1/taskruns/secret-env
=== RUN   TestExamples/v1alpha1/taskruns/secret-volume-params
=== PAUSE TestExamples/v1alpha1/taskruns/secret-volume-params
=== RUN   TestExamples/v1alpha1/taskruns/secret-volume
=== PAUSE TestExamples/v1alpha1/taskruns/secret-volume
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-interp
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-interp
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-ready-script
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-ready-script
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-ready
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-ready
=== RUN   TestExamples/v1alpha1/taskruns/step-by-digest
=== PAUSE TestExamples/v1alpha1/taskruns/step-by-digest
=== RUN   TestExamples/v1alpha1/taskruns/step-script
=== PAUSE TestExamples/v1alpha1/taskruns/step-script
=== RUN   TestExamples/v1alpha1/taskruns/steps-run-in-order
=== PAUSE TestExamples/v1alpha1/taskruns/steps-run-in-order
=== RUN   TestExamples/v1alpha1/taskruns/steptemplate-env-merge
=== PAUSE TestExamples/v1alpha1/taskruns/steptemplate-env-merge
=== RUN   TestExamples/v1alpha1/taskruns/task-multiple-output-image
=== PAUSE TestExamples/v1alpha1/taskruns/task-multiple-output-image
=== RUN   TestExamples/v1alpha1/taskruns/task-output-image
=== PAUSE TestExamples/v1alpha1/taskruns/task-output-image
=== RUN   TestExamples/v1alpha1/taskruns/task-result
=== PAUSE TestExamples/v1alpha1/taskruns/task-result
=== RUN   TestExamples/v1alpha1/taskruns/task-volume-args
=== PAUSE TestExamples/v1alpha1/taskruns/task-volume-args
=== RUN   TestExamples/v1alpha1/taskruns/template-volume
=== PAUSE TestExamples/v1alpha1/taskruns/template-volume
=== RUN   TestExamples/v1alpha1/taskruns/unnamed-steps
=== PAUSE TestExamples/v1alpha1/taskruns/unnamed-steps
=== RUN   TestExamples/v1alpha1/taskruns/workingdir
=== PAUSE TestExamples/v1alpha1/taskruns/workingdir
=== RUN   TestExamples/v1alpha1/taskruns/workspace-readonly
=== PAUSE TestExamples/v1alpha1/taskruns/workspace-readonly
=== RUN   TestExamples/v1alpha1/taskruns/workspace-volume
=== PAUSE TestExamples/v1alpha1/taskruns/workspace-volume
=== RUN   TestExamples/v1alpha1/taskruns/workspace
=== PAUSE TestExamples/v1alpha1/taskruns/workspace
=== RUN   TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/demo-optional-resources
=== PAUSE TestExamples/v1beta1/pipelineruns/demo-optional-resources
=== RUN   TestExamples/v1beta1/pipelineruns/optional-workspaces
=== PAUSE TestExamples/v1beta1/pipelineruns/optional-workspaces
=== RUN   TestExamples/v1beta1/pipelineruns/output-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/output-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
=== PAUSE TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-results
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-results
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/task_results_example
=== PAUSE TestExamples/v1beta1/pipelineruns/task_results_example
=== RUN   TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== PAUSE TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== RUN   TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
=== PAUSE TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
=== RUN   TestExamples/v1beta1/pipelineruns/using_context_variables
=== PAUSE TestExamples/v1beta1/pipelineruns/using_context_variables
=== RUN   TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
=== PAUSE TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
=== RUN   TestExamples/v1beta1/pipelineruns/workspaces
=== PAUSE TestExamples/v1beta1/pipelineruns/workspaces
=== RUN   TestExamples/v1beta1/taskruns/authenticating-git-commands
=== PAUSE TestExamples/v1beta1/taskruns/authenticating-git-commands
=== RUN   TestExamples/v1beta1/taskruns/cloud-event
=== PAUSE TestExamples/v1beta1/taskruns/cloud-event
=== RUN   TestExamples/v1beta1/taskruns/clustertask
=== PAUSE TestExamples/v1beta1/taskruns/clustertask
=== RUN   TestExamples/v1beta1/taskruns/configmap
=== PAUSE TestExamples/v1beta1/taskruns/configmap
=== RUN   TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
=== PAUSE TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
=== RUN   TestExamples/v1beta1/taskruns/custom-env
=== PAUSE TestExamples/v1beta1/taskruns/custom-env
=== RUN   TestExamples/v1beta1/taskruns/custom-volume
=== PAUSE TestExamples/v1beta1/taskruns/custom-volume
=== RUN   TestExamples/v1beta1/taskruns/dind-sidecar
=== PAUSE TestExamples/v1beta1/taskruns/dind-sidecar
=== RUN   TestExamples/v1beta1/taskruns/gcs-resource
=== PAUSE TestExamples/v1beta1/taskruns/gcs-resource
=== RUN   TestExamples/v1beta1/taskruns/git-resource
=== PAUSE TestExamples/v1beta1/taskruns/git-resource
=== RUN   TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
=== PAUSE TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
=== RUN   TestExamples/v1beta1/taskruns/git-ssh-creds
=== PAUSE TestExamples/v1beta1/taskruns/git-ssh-creds
=== RUN   TestExamples/v1beta1/taskruns/git-volume
=== PAUSE TestExamples/v1beta1/taskruns/git-volume
=== RUN   TestExamples/v1beta1/taskruns/home-is-set
=== PAUSE TestExamples/v1beta1/taskruns/home-is-set
=== RUN   TestExamples/v1beta1/taskruns/home-volume
=== PAUSE TestExamples/v1beta1/taskruns/home-volume
=== RUN   TestExamples/v1beta1/taskruns/image-params
=== PAUSE TestExamples/v1beta1/taskruns/image-params
=== RUN   TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
=== PAUSE TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
=== RUN   TestExamples/v1beta1/taskruns/optional-resources
=== PAUSE TestExamples/v1beta1/taskruns/optional-resources
=== RUN   TestExamples/v1beta1/taskruns/optional-workspaces
=== PAUSE TestExamples/v1beta1/taskruns/optional-workspaces
=== RUN   TestExamples/v1beta1/taskruns/pullrequest
=== PAUSE TestExamples/v1beta1/taskruns/pullrequest
=== RUN   TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
=== PAUSE TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
=== RUN   TestExamples/v1beta1/taskruns/run-steps-as-non-root
=== PAUSE TestExamples/v1beta1/taskruns/run-steps-as-non-root
=== RUN   TestExamples/v1beta1/taskruns/secret-env
=== PAUSE TestExamples/v1beta1/taskruns/secret-env
=== RUN   TestExamples/v1beta1/taskruns/secret-volume-params
=== PAUSE TestExamples/v1beta1/taskruns/secret-volume-params
=== RUN   TestExamples/v1beta1/taskruns/secret-volume
=== PAUSE TestExamples/v1beta1/taskruns/secret-volume
=== RUN   TestExamples/v1beta1/taskruns/sidecar-interp
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-interp
=== RUN   TestExamples/v1beta1/taskruns/sidecar-ready-script
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-ready-script
=== RUN   TestExamples/v1beta1/taskruns/sidecar-ready
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-ready
=== RUN   TestExamples/v1beta1/taskruns/step-by-digest
=== PAUSE TestExamples/v1beta1/taskruns/step-by-digest
=== RUN   TestExamples/v1beta1/taskruns/step-script
=== PAUSE TestExamples/v1beta1/taskruns/step-script
=== RUN   TestExamples/v1beta1/taskruns/steps-run-in-order
=== PAUSE TestExamples/v1beta1/taskruns/steps-run-in-order
=== RUN   TestExamples/v1beta1/taskruns/steptemplate-env-merge
=== PAUSE TestExamples/v1beta1/taskruns/steptemplate-env-merge
=== RUN   TestExamples/v1beta1/taskruns/task-multiple-output-image
=== PAUSE TestExamples/v1beta1/taskruns/task-multiple-output-image
=== RUN   TestExamples/v1beta1/taskruns/task-output-image
=== PAUSE TestExamples/v1beta1/taskruns/task-output-image
=== RUN   TestExamples/v1beta1/taskruns/task-result
=== PAUSE TestExamples/v1beta1/taskruns/task-result
=== RUN   TestExamples/v1beta1/taskruns/task-volume-args
=== PAUSE TestExamples/v1beta1/taskruns/task-volume-args
=== RUN   TestExamples/v1beta1/taskruns/template-volume
=== PAUSE TestExamples/v1beta1/taskruns/template-volume
=== RUN   TestExamples/v1beta1/taskruns/unnamed-steps
=== PAUSE TestExamples/v1beta1/taskruns/unnamed-steps
=== RUN   TestExamples/v1beta1/taskruns/using_context_variables
=== PAUSE TestExamples/v1beta1/taskruns/using_context_variables
=== RUN   TestExamples/v1beta1/taskruns/workingdir
=== PAUSE TestExamples/v1beta1/taskruns/workingdir
=== RUN   TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== PAUSE TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== RUN   TestExamples/v1beta1/taskruns/workspace-readonly
=== PAUSE TestExamples/v1beta1/taskruns/workspace-readonly
=== RUN   TestExamples/v1beta1/taskruns/workspace-volume
=== PAUSE TestExamples/v1beta1/taskruns/workspace-volume
=== RUN   TestExamples/v1beta1/taskruns/workspace
=== PAUSE TestExamples/v1beta1/taskruns/workspace
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
=== CONT  TestExamples/v1beta1/taskruns/workspace
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    init_test.go:135: Create namespace arendelle-m9lnq to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
    init_test.go:135: Create namespace arendelle-8cxjm to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    init_test.go:135: Create namespace arendelle-h2lpw to deploy to
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
    init_test.go:135: Create namespace arendelle-qqxcs to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    init_test.go:135: Create namespace arendelle-8l727 to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    init_test.go:135: Create namespace arendelle-8dbpl to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace
    init_test.go:135: Create namespace arendelle-dgmdw to deploy to
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    init_test.go:135: Create namespace arendelle-jnrhp to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dgmdw"
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-qqxcs"
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-jnrhp"
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8l727"
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-m9lnq"
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-h2lpw"
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8cxjm"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8dbpl"
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    examples_test.go:169: Deleting namespace arendelle-8l727
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
    init_test.go:135: Create namespace arendelle-fcrrp to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fcrrp"
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    examples_test.go:169: Deleting namespace arendelle-jnrhp
=== CONT  TestExamples/v1beta1/taskruns/sidecar-ready-script
    init_test.go:135: Create namespace arendelle-tv4vq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tv4vq"
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
    examples_test.go:169: Deleting namespace arendelle-8cxjm
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
    init_test.go:135: Create namespace arendelle-86l5v to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-86l5v"
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    examples_test.go:169: Deleting namespace arendelle-h2lpw
=== CONT  TestExamples/v1alpha1/taskruns/step-script
    init_test.go:135: Create namespace arendelle-ppcdn to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ppcdn"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    examples_test.go:169: Deleting namespace arendelle-8dbpl
=== CONT  TestExamples/v1beta1/taskruns/git-resource
    init_test.go:135: Create namespace arendelle-vkm7p to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vkm7p"
=== CONT  TestExamples/v1beta1/taskruns/workspace
    examples_test.go:169: Deleting namespace arendelle-dgmdw
=== CONT  TestExamples/v1beta1/taskruns/secret-volume
    init_test.go:135: Create namespace arendelle-f6m9j to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-f6m9j"
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
    examples_test.go:169: Deleting namespace arendelle-qqxcs
=== CONT  TestExamples/v1beta1/taskruns/steps-run-in-order
    init_test.go:135: Create namespace arendelle-ssw9f to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ssw9f"
=== CONT  TestExamples/v1beta1/taskruns/sidecar-ready-script
    examples_test.go:169: Deleting namespace arendelle-tv4vq
=== CONT  TestExamples/v1beta1/pipelineruns/output-pipelinerun
    init_test.go:135: Create namespace arendelle-vwx7r to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vwx7r"
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
    examples_test.go:169: Deleting namespace arendelle-fcrrp
=== CONT  TestExamples/v1beta1/taskruns/gcs-resource
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1beta1/taskruns/step-by-digest
    init_test.go:135: Create namespace arendelle-cj97d to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-cj97d"
=== CONT  TestExamples/v1beta1/taskruns/git-resource
    examples_test.go:169: Deleting namespace arendelle-vkm7p
=== CONT  TestExamples/v1beta1/taskruns/pullrequest
    init_test.go:135: Create namespace arendelle-9gcrs to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-9gcrs"
=== CONT  TestExamples/v1beta1/taskruns/secret-volume
    examples_test.go:169: Deleting namespace arendelle-f6m9j
=== CONT  TestExamples/v1beta1/taskruns/image-params
    init_test.go:135: Create namespace arendelle-qknd9 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-qknd9"
=== CONT  TestExamples/v1beta1/taskruns/steps-run-in-order
    examples_test.go:169: Deleting namespace arendelle-ssw9f
=== CONT  TestExamples/v1alpha1/taskruns/git-volume
    init_test.go:135: Create namespace arendelle-drzpd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-drzpd"
=== CONT  TestExamples/v1beta1/taskruns/image-params
    examples_test.go:144: exit status 1 Output: taskrun.tekton.dev/image-params-vsr97 created
        Error from server (AlreadyExists): error when creating "STDIN": clustertasks.tekton.dev "image-params" already exists
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-qknd9 ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T07:43:57Z"
          generateName: image-params-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/clusterTask: image-params
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:43:57Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  f:tekton.dev/clusterTask: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:43:58Z"
          name: image-params-vsr97
          namespace: arendelle-qknd9
          resourceVersion: "5491824"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-qknd9/taskruns/image-params-vsr97
          uid: 76e4b90f-012a-4496-8665-61b69af4ba2c
        spec:
          serviceAccountName: default
          taskRef:
            kind: ClusterTask
            name: image-params
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T07:43:58Z"
            message: Pending
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: image-params-vsr97-pod-v4rgh
          startTime: "2021-09-27T07:43:57Z"
          taskSpec:
            params:
            - default: ubuntu
              name: image
              type: string
            - default: IfNotPresent
              name: imagePullPolicy
              type: string
            steps:
            - image: $(params.image)
              imagePullPolicy: $(params.imagePullPolicy)
              name: ""
              resources: {}
              script: echo hello
        
        ---
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T07:43:58Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/clusterTask: image-params
            tekton.dev/taskRun: image-params-vsr97
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/clusterTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"76e4b90f-012a-4496-8665-61b69af4ba2c"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:43:58Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T07:43:58Z"
          name: image-params-vsr97-pod-v4rgh
          namespace: arendelle-qknd9
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: image-params-vsr97
            uid: 76e4b90f-012a-4496-8665-61b69af4ba2c
          resourceVersion: "5491835"
          selfLink: /api/v1/namespaces/arendelle-qknd9/pods/image-params-vsr97-pod-v4rgh
          uid: a1522df0-2a50-4f17-b99e-5c851a98d971
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-ppm5j
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ng8br
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ng8br
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-ppm5j"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKZWNobyBoZWxsbw==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ng8br
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-ng8br
            secret:
              defaultMode: 420
              secretName: default-token-ng8br
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:43:58Z"
            message: 'containers with incomplete status: [place-tools place-scripts]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:43:58Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:43:58Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:43:58Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: ubuntu
            imageID: ""
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imageID: ""
            lastState: {}
            name: place-tools
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: place-scripts
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          qosClass: BestEffort
          startTime: "2021-09-27T07:43:58Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-qknd9 ###
    panic.go:636: #####################################################
    build_logs.go:35: Could not get logs for pod image-params-vsr97-pod-v4rgh: container "step-unnamed-0" in pod "image-params-vsr97-pod-v4rgh" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1alpha1/taskruns/home-volume
    init_test.go:135: Create namespace arendelle-9szfj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-9szfj"
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:169: Deleting namespace arendelle-m9lnq
--- PASS: TestYamls (0.00s)
    --- SKIP: TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml (0.00s)
    --- PASS: TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml (226.01s)
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
    init_test.go:135: Create namespace arendelle-sp6ml to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-sp6ml"
=== CONT  TestExamples/v1beta1/taskruns/step-by-digest
    examples_test.go:169: Deleting namespace arendelle-cj97d
=== CONT  TestExamples/v1alpha1/taskruns/gcs-resource
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
=== CONT  TestExamples/v1alpha1/taskruns/step-script
    examples_test.go:169: Deleting namespace arendelle-ppcdn
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    init_test.go:135: Create namespace arendelle-g625b to deploy to
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    init_test.go:135: Create namespace arendelle-slhj5 to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-g625b"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-slhj5"
=== CONT  TestExamples/v1beta1/taskruns/pullrequest
    examples_test.go:169: Deleting namespace arendelle-9gcrs
=== CONT  TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
    init_test.go:135: Create namespace arendelle-4jlq5 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4jlq5"
=== CONT  TestExamples/v1alpha1/taskruns/git-volume
    examples_test.go:169: Deleting namespace arendelle-drzpd
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
    init_test.go:135: Create namespace arendelle-9w6mr to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-9w6mr"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
    examples_test.go:169: Deleting namespace arendelle-86l5v
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results
    init_test.go:135: Create namespace arendelle-wsd8v to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wsd8v"
=== CONT  TestExamples/v1alpha1/taskruns/home-volume
    examples_test.go:169: Deleting namespace arendelle-9szfj
=== CONT  TestExamples/v1beta1/pipelineruns/output-pipelinerun
    examples_test.go:169: Deleting namespace arendelle-vwx7r
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    init_test.go:135: Create namespace arendelle-zg5kd to deploy to
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
    init_test.go:135: Create namespace arendelle-pz762 to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-zg5kd"
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-pz762"
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
    examples_test.go:169: Deleting namespace arendelle-sp6ml
=== CONT  TestExamples/v1beta1/taskruns/task-result
    init_test.go:135: Create namespace arendelle-m2l6l to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-m2l6l"
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    examples_test.go:169: Deleting namespace arendelle-g625b
=== CONT  TestExamples/v1beta1/taskruns/unnamed-steps
    init_test.go:135: Create namespace arendelle-bj6n2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-bj6n2"
=== CONT  TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
    examples_test.go:109: Deleting clustertask cluster-task-pipeline-4-v1alpha1
    examples_test.go:169: Deleting namespace arendelle-4jlq5
=== CONT  TestExamples/v1beta1/taskruns/secret-volume-params
    init_test.go:135: Create namespace arendelle-5w2b6 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-5w2b6"
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
    examples_test.go:169: Deleting namespace arendelle-9w6mr
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    init_test.go:135: Create namespace arendelle-g8t5v to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-g8t5v"
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
    examples_test.go:169: Deleting namespace arendelle-pz762
=== CONT  TestExamples/v1beta1/taskruns/secret-env
    init_test.go:135: Create namespace arendelle-djmnl to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-djmnl"
=== CONT  TestExamples/v1beta1/taskruns/task-result
    examples_test.go:169: Deleting namespace arendelle-m2l6l
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources
    init_test.go:135: Create namespace arendelle-v8rpk to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-v8rpk"
=== CONT  TestExamples/v1beta1/taskruns/secret-volume-params
    examples_test.go:169: Deleting namespace arendelle-5w2b6
=== CONT  TestExamples/v1beta1/taskruns/run-steps-as-non-root
    init_test.go:135: Create namespace arendelle-d66pw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-d66pw"
=== CONT  TestExamples/v1beta1/taskruns/unnamed-steps
    examples_test.go:169: Deleting namespace arendelle-bj6n2
=== CONT  TestExamples/v1beta1/taskruns/template-volume
    init_test.go:135: Create namespace arendelle-nmkb2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-nmkb2"
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    examples_test.go:169: Deleting namespace arendelle-zg5kd
=== CONT  TestExamples/v1alpha1/taskruns/task-output-image
    init_test.go:135: Create namespace arendelle-lxbdq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-lxbdq"
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    examples_test.go:169: Deleting namespace arendelle-g8t5v
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
    init_test.go:135: Create namespace arendelle-bv9mr to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-bv9mr"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results
    examples_test.go:169: Deleting namespace arendelle-wsd8v
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds
    init_test.go:135: Create namespace arendelle-tnbf7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tnbf7"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    examples_test.go:55: Failed waiting for pipeline run done: "demo-pipeline-run-1" failed
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-slhj5 ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T07:44:40Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:40Z"
          name: demo-pipeline
          namespace: arendelle-slhj5
          resourceVersion: "5492446"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/pipelines/demo-pipeline
          uid: 88af90c9-ebac-4f8c-94db-34d025dcddc3
        spec:
          resources:
          - name: source-repo
            type: git
          - name: web-image
            type: image
          - name: app-image
            type: image
          tasks:
          - name: skaffold-unit-tests
            resources:
              inputs:
              - name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: unit-tests
          - name: build-skaffold-web
            params:
            - name: pathToDockerFile
              value: Dockerfile
            - name: pathToContext
              value: /workspace/workspace/examples/microservices/leeroy-web
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              outputs:
              - name: builtImage
                resource: web-image
            runAfter:
            - skaffold-unit-tests
            taskRef:
              kind: Task
              name: build-push
          - name: build-skaffold-app
            params:
            - name: pathToDockerFile
              value: Dockerfile
            - name: pathToContext
              value: /workspace/workspace/examples/microservices/leeroy-app
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              outputs:
              - name: builtImage
                resource: app-image
            runAfter:
            - skaffold-unit-tests
            taskRef:
              kind: Task
              name: build-push
          - name: deploy-app
            params:
            - name: path
              value: /workspace/workspace/examples/microservices/leeroy-app/kubernetes/deployment.yaml
            - name: yqArg
              value: -d1
            - name: yamlPathToImage
              value: spec.template.spec.containers[0].image
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              - from:
                - build-skaffold-app
                name: image
                resource: app-image
            taskRef:
              kind: Task
              name: demo-deploy-kubectl
          - name: deploy-web
            params:
            - name: path
              value: /workspace/workspace/examples/microservices/leeroy-web/kubernetes/deployment.yaml
            - name: yqArg
              value: -d1
            - name: yamlPathToImage
              value: spec.template.spec.containers[0].image
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              - from:
                - build-skaffold-web
                name: image
                resource: web-image
            taskRef:
              kind: Task
              name: demo-deploy-kubectl
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T07:44:39Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:39Z"
          name: skaffold-git-pipelinerun
          namespace: arendelle-slhj5
          resourceVersion: "5492430"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-slhj5/pipelineresources/skaffold-git-pipelinerun
          uid: 863be6f2-4dad-4c3e-a64e-e88048393f98
        spec:
          params:
          - name: revision
            value: v0.32.0
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          type: git
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T07:44:39Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:39Z"
          name: skaffold-image-leeroy-app
          namespace: arendelle-slhj5
          resourceVersion: "5492425"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-slhj5/pipelineresources/skaffold-image-leeroy-app
          uid: 3394c2b5-7c44-4d5e-94ed-97c647fe7cdf
        spec:
          params:
          - name: url
            value: ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app
          type: image
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T07:44:39Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:39Z"
          name: skaffold-image-leeroy-web-pipelinerun
          namespace: arendelle-slhj5
          resourceVersion: "5492428"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-slhj5/pipelineresources/skaffold-image-leeroy-web-pipelinerun
          uid: 1b1250f4-29dd-4494-8077-513766296f9c
        spec:
          params:
          - name: url
            value: ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web
          type: image
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T07:44:40Z"
          generation: 1
          labels:
            tekton.dev/pipeline: demo-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:40Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                f:completionTime: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:resources: {}
                  f:tasks: {}
                f:skippedTasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:demo-pipeline-run-1-build-skaffold-app-nf2pd:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
                  f:demo-pipeline-run-1-build-skaffold-web-2s926:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
                  f:demo-pipeline-run-1-skaffold-unit-tests-8dbgc:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:resourcesResult: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:49:37Z"
          name: demo-pipeline-run-1
          namespace: arendelle-slhj5
          resourceVersion: "5495786"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/pipelineruns/demo-pipeline-run-1
          uid: b6ed862b-32d1-4e54-beea-995ca08de130
        spec:
          pipelineRef:
            name: demo-pipeline
          resources:
          - name: source-repo
            resourceRef:
              name: skaffold-git-pipelinerun
          - name: web-image
            resourceRef:
              name: skaffold-image-leeroy-web-pipelinerun
          - name: app-image
            resourceRef:
              name: skaffold-image-leeroy-app
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T07:49:36Z"
          conditions:
          - lastTransitionTime: "2021-09-27T07:49:36Z"
            message: 'Tasks Completed: 3 (Failed: 2, Cancelled 0), Skipped: 2'
            reason: Failed
            status: "False"
            type: Succeeded
          pipelineSpec:
            resources:
            - name: source-repo
              type: git
            - name: web-image
              type: image
            - name: app-image
              type: image
            tasks:
            - name: skaffold-unit-tests
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: unit-tests
            - name: build-skaffold-web
              params:
              - name: pathToDockerFile
                value: Dockerfile
              - name: pathToContext
                value: /workspace/workspace/examples/microservices/leeroy-web
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                outputs:
                - name: builtImage
                  resource: web-image
              runAfter:
              - skaffold-unit-tests
              taskRef:
                kind: Task
                name: build-push
            - name: build-skaffold-app
              params:
              - name: pathToDockerFile
                value: Dockerfile
              - name: pathToContext
                value: /workspace/workspace/examples/microservices/leeroy-app
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                outputs:
                - name: builtImage
                  resource: app-image
              runAfter:
              - skaffold-unit-tests
              taskRef:
                kind: Task
                name: build-push
            - name: deploy-app
              params:
              - name: path
                value: /workspace/workspace/examples/microservices/leeroy-app/kubernetes/deployment.yaml
              - name: yqArg
                value: -d1
              - name: yamlPathToImage
                value: spec.template.spec.containers[0].image
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                - from:
                  - build-skaffold-app
                  name: image
                  resource: app-image
              taskRef:
                kind: Task
                name: demo-deploy-kubectl
            - name: deploy-web
              params:
              - name: path
                value: /workspace/workspace/examples/microservices/leeroy-web/kubernetes/deployment.yaml
              - name: yqArg
                value: -d1
              - name: yamlPathToImage
                value: spec.template.spec.containers[0].image
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                - from:
                  - build-skaffold-web
                  name: image
                  resource: web-image
              taskRef:
                kind: Task
                name: demo-deploy-kubectl
          skippedTasks:
          - name: deploy-app
          - name: deploy-web
          startTime: "2021-09-27T07:44:42Z"
          taskRuns:
            demo-pipeline-run-1-build-skaffold-app-nf2pd:
              pipelineTaskName: build-skaffold-app
              status:
                completionTime: "2021-09-27T07:49:35Z"
                conditions:
                - lastTransitionTime: "2021-09-27T07:49:35Z"
                  message: |
                    "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-slhj5 logs demo-pipeline-run-1-build-skaffold-app-nf2pd-pod-vrjq2 -c step-build-and-push
                  reason: Failed
                  status: "False"
                  type: Succeeded
                podName: demo-pipeline-run-1-build-skaffold-app-nf2pd-pod-vrjq2
                startTime: "2021-09-27T07:45:48Z"
                steps:
                - container: step-create-dir-builtimage-w9vl7
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-builtimage-w9vl7
                  terminated:
                    containerID: docker://dced9783c9d0f723cc4a1ad19f251bee4bbdb0821e152f6dc0aedc447be4f8b7
                    exitCode: 0
                    finishedAt: "2021-09-27T07:47:22Z"
                    reason: Completed
                    startedAt: "2021-09-27T07:47:21Z"
                - container: step-git-source-workspace-zs2bp
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-workspace-zs2bp
                  terminated:
                    containerID: docker://94f7e73dbc7fd2090f2ea22694ee507a9c8db4a9dc6e857cbe11d1678a2759aa
                    exitCode: 0
                    finishedAt: "2021-09-27T07:47:33Z"
                    message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
                    reason: Completed
                    startedAt: "2021-09-27T07:47:22Z"
                - container: step-build-and-push
                  imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
                  name: build-and-push
                  terminated:
                    containerID: docker://d5c3f8aeec1af8d2766eaf67e8b5073aca019e7cbbb28e8b12dc4af5c5c75388
                    exitCode: 1
                    finishedAt: "2021-09-27T07:49:29Z"
                    reason: Error
                    startedAt: "2021-09-27T07:47:33Z"
                - container: step-image-digest-exporter-8k45m
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
                  name: image-digest-exporter-8k45m
                  terminated:
                    containerID: docker://d2d228173ee9d642be460fbab58d87d3bcfdd7412ea030d8cd8f49fa71338446
                    exitCode: 1
                    finishedAt: "2021-09-27T07:49:29Z"
                    reason: Error
                    startedAt: "2021-09-27T07:49:29Z"
                taskSpec:
                  params:
                  - default: /workspace/workspace/Dockerfile
                    description: The path to the dockerfile to build
                    name: pathToDockerFile
                    type: string
                  - default: /workspace/workspace
                    description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
                    name: pathToContext
                    type: string
                  resources:
                    inputs:
                    - name: workspace
                      type: git
                    outputs:
                    - name: builtImage
                      type: image
                  steps:
                  - args:
                    - --dockerfile=$(inputs.params.pathToDockerFile)
                    - --destination=$(outputs.resources.builtImage.url)
                    - --context=$(inputs.params.pathToContext)
                    command:
                    - /kaniko/executor
                    env:
                    - name: DOCKER_CONFIG
                      value: /tekton/home/.docker/
                    image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
                    name: build-and-push
                    resources: {}
            demo-pipeline-run-1-build-skaffold-web-2s926:
              pipelineTaskName: build-skaffold-web
              status:
                completionTime: "2021-09-27T07:49:14Z"
                conditions:
                - lastTransitionTime: "2021-09-27T07:49:14Z"
                  message: |
                    "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-slhj5 logs demo-pipeline-run-1-build-skaffold-web-2s926-pod-gj89r -c step-build-and-push
                  reason: Failed
                  status: "False"
                  type: Succeeded
                podName: demo-pipeline-run-1-build-skaffold-web-2s926-pod-gj89r
                startTime: "2021-09-27T07:45:48Z"
                steps:
                - container: step-create-dir-builtimage-c966f
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-builtimage-c966f
                  terminated:
                    containerID: docker://0d42bb2466c2f20d9aa3cfabc0c64cf0ff2b16cae4726a3933748b806f81c386
                    exitCode: 0
                    finishedAt: "2021-09-27T07:46:27Z"
                    reason: Completed
                    startedAt: "2021-09-27T07:46:27Z"
                - container: step-git-source-workspace-hp7qj
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-workspace-hp7qj
                  terminated:
                    containerID: docker://03ef3612e00ac6e9de3f256045a28758d8190b2664b245e298941eb42705349c
                    exitCode: 0
                    finishedAt: "2021-09-27T07:46:36Z"
                    message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
                    reason: Completed
                    startedAt: "2021-09-27T07:46:28Z"
                - container: step-build-and-push
                  imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
                  name: build-and-push
                  terminated:
                    containerID: docker://f01feca4f24c05e0555391ec4372ceebf52849e9dc5a7448843ae52ca6606383
                    exitCode: 1
                    finishedAt: "2021-09-27T07:48:46Z"
                    reason: Error
                    startedAt: "2021-09-27T07:46:37Z"
                - container: step-image-digest-exporter-pvqgw
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
                  name: image-digest-exporter-pvqgw
                  terminated:
                    containerID: docker://49c922c135e77521abf0679f0731e4bc54279126c10ace6ae361dd7b50b44271
                    exitCode: 1
                    finishedAt: "2021-09-27T07:48:46Z"
                    reason: Error
                    startedAt: "2021-09-27T07:48:46Z"
                taskSpec:
                  params:
                  - default: /workspace/workspace/Dockerfile
                    description: The path to the dockerfile to build
                    name: pathToDockerFile
                    type: string
                  - default: /workspace/workspace
                    description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
                    name: pathToContext
                    type: string
                  resources:
                    inputs:
                    - name: workspace
                      type: git
                    outputs:
                    - name: builtImage
                      type: image
                  steps:
                  - args:
                    - --dockerfile=$(inputs.params.pathToDockerFile)
                    - --destination=$(outputs.resources.builtImage.url)
                    - --context=$(inputs.params.pathToContext)
                    command:
                    - /kaniko/executor
                    env:
                    - name: DOCKER_CONFIG
                      value: /tekton/home/.docker/
                    image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
                    name: build-and-push
                    resources: {}
            demo-pipeline-run-1-skaffold-unit-tests-8dbgc:
              pipelineTaskName: skaffold-unit-tests
              status:
                completionTime: "2021-09-27T07:45:47Z"
                conditions:
                - lastTransitionTime: "2021-09-27T07:45:47Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: demo-pipeline-run-1-skaffold-unit-tests-8dbgc-pod-8txz8
                resourcesResult:
                - key: commit
                  resourceName: workspace
                  resourceRef:
                    name: workspace
                  value: 6ed7aad5e8a36052ee5f6079fc91368e362121f7
                - key: url
                  resourceName: workspace
                  resourceRef:
                    name: workspace
                  value: https://github.com/GoogleContainerTools/skaffold
                startTime: "2021-09-27T07:44:43Z"
                steps:
                - container: step-git-source-workspace-6xmcb
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-workspace-6xmcb
                  terminated:
                    containerID: docker://072b28a19904a6a903d4474f4d06513344a20b05e5df4180527a645497438ef8
                    exitCode: 0
                    finishedAt: "2021-09-27T07:45:32Z"
                    message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
                    reason: Completed
                    startedAt: "2021-09-27T07:45:20Z"
                - container: step-run-tests
                  imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
                  name: run-tests
                  terminated:
                    containerID: docker://432b80f62a139b5c7afb449704d3271a344387cf7d9460d4605a688b7a44c8f1
                    exitCode: 0
                    finishedAt: "2021-09-27T07:45:33Z"
                    reason: Completed
                    startedAt: "2021-09-27T07:45:32Z"
                taskSpec:
                  resources:
                    inputs:
                    - name: workspace
                      targetPath: go/src/github.com/GoogleContainerTools/skaffold
                      type: git
                  steps:
                  - args:
                    - pass
                    command:
                    - echo
                    env:
                    - name: GOPATH
                      value: /workspace/go
                    image: golang
                    name: run-tests
                    resources: {}
                    workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T07:44:39Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:outputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:39Z"
          name: build-push
          namespace: arendelle-slhj5
          resourceVersion: "5492433"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/tasks/build-push
          uid: 029ea6af-b080-4b9c-b579-7ce1ecedc28e
        spec:
          params:
          - default: /workspace/workspace/Dockerfile
            description: The path to the dockerfile to build
            name: pathToDockerFile
            type: string
          - default: /workspace/workspace
            description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
            name: pathToContext
            type: string
          resources:
            inputs:
            - name: workspace
              type: git
            outputs:
            - name: builtImage
              type: image
          steps:
          - args:
            - --dockerfile=$(inputs.params.pathToDockerFile)
            - --destination=$(outputs.resources.builtImage.url)
            - --context=$(inputs.params.pathToContext)
            command:
            - /kaniko/executor
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            name: build-and-push
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T07:44:40Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:40Z"
          name: demo-deploy-kubectl
          namespace: arendelle-slhj5
          resourceVersion: "5492443"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/tasks/demo-deploy-kubectl
          uid: cc368d56-ce1d-440f-86a4-062186a7072b
        spec:
          params:
          - description: Path to the manifest to apply
            name: path
            type: string
          - description: Okay this is a hack, but I didn't feel right hard-codeing `-d1` down
              below
            name: yqArg
            type: string
          - description: The path to the image to replace in the yaml manifest (arg to yq)
            name: yamlPathToImage
            type: string
          resources:
            inputs:
            - name: workspace
              type: git
            - name: image
              type: image
          steps:
          - args:
            - w
            - -i
            - $(inputs.params.yqArg)
            - $(inputs.params.path)
            - $(inputs.params.yamlPathToImage)
            - $(inputs.resources.image.url)
            command:
            - yq
            image: danielxlee/yq:2.4.0
            name: replace-image
            resources: {}
          - args:
            - apply
            - -f
            - $(inputs.params.path)
            command:
            - kubectl
            image: lachlanevenson/k8s-kubectl
            name: run-kubectl
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T07:44:39Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:44:39Z"
          name: unit-tests
          namespace: arendelle-slhj5
          resourceVersion: "5492432"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/tasks/unit-tests
          uid: 3bdc3680-63a9-4a61-b2d2-58771a482585
        spec:
          resources:
            inputs:
            - name: workspace
              targetPath: go/src/github.com/GoogleContainerTools/skaffold
              type: git
          steps:
          - args:
            - pass
            command:
            - echo
            env:
            - name: GOPATH
              value: /workspace/go
            image: golang
            name: run-tests
            resources: {}
            workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T07:45:48Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-app
            tekton.dev/task: build-push
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"b6ed862b-32d1-4e54-beea-995ca08de130"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:49:35Z"
          name: demo-pipeline-run-1-build-skaffold-app-nf2pd
          namespace: arendelle-slhj5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: b6ed862b-32d1-4e54-beea-995ca08de130
          resourceVersion: "5495777"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/taskruns/demo-pipeline-run-1-build-skaffold-app-nf2pd
          uid: 557928f4-605c-4ba9-8241-7803b96b4c50
        spec:
          params:
          - name: pathToDockerFile
            value: Dockerfile
          - name: pathToContext
            value: /workspace/workspace/examples/microservices/leeroy-app
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
            outputs:
            - name: builtImage
              paths:
              - build-skaffold-app/builtImage
              resourceRef:
                name: skaffold-image-leeroy-app
          serviceAccountName: default
          taskRef:
            kind: Task
            name: build-push
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T07:49:35Z"
          conditions:
          - lastTransitionTime: "2021-09-27T07:49:35Z"
            message: |
              "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-slhj5 logs demo-pipeline-run-1-build-skaffold-app-nf2pd-pod-vrjq2 -c step-build-and-push
            reason: Failed
            status: "False"
            type: Succeeded
          podName: demo-pipeline-run-1-build-skaffold-app-nf2pd-pod-vrjq2
          startTime: "2021-09-27T07:45:48Z"
          steps:
          - container: step-create-dir-builtimage-w9vl7
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-builtimage-w9vl7
            terminated:
              containerID: docker://dced9783c9d0f723cc4a1ad19f251bee4bbdb0821e152f6dc0aedc447be4f8b7
              exitCode: 0
              finishedAt: "2021-09-27T07:47:22Z"
              reason: Completed
              startedAt: "2021-09-27T07:47:21Z"
          - container: step-git-source-workspace-zs2bp
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-zs2bp
            terminated:
              containerID: docker://94f7e73dbc7fd2090f2ea22694ee507a9c8db4a9dc6e857cbe11d1678a2759aa
              exitCode: 0
              finishedAt: "2021-09-27T07:47:33Z"
              message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-27T07:47:22Z"
          - container: step-build-and-push
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            name: build-and-push
            terminated:
              containerID: docker://d5c3f8aeec1af8d2766eaf67e8b5073aca019e7cbbb28e8b12dc4af5c5c75388
              exitCode: 1
              finishedAt: "2021-09-27T07:49:29Z"
              reason: Error
              startedAt: "2021-09-27T07:47:33Z"
          - container: step-image-digest-exporter-8k45m
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            name: image-digest-exporter-8k45m
            terminated:
              containerID: docker://d2d228173ee9d642be460fbab58d87d3bcfdd7412ea030d8cd8f49fa71338446
              exitCode: 1
              finishedAt: "2021-09-27T07:49:29Z"
              reason: Error
              startedAt: "2021-09-27T07:49:29Z"
          taskSpec:
            params:
            - default: /workspace/workspace/Dockerfile
              description: The path to the dockerfile to build
              name: pathToDockerFile
              type: string
            - default: /workspace/workspace
              description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
              name: pathToContext
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
              outputs:
              - name: builtImage
                type: image
            steps:
            - args:
              - --dockerfile=$(inputs.params.pathToDockerFile)
              - --destination=$(outputs.resources.builtImage.url)
              - --context=$(inputs.params.pathToContext)
              command:
              - /kaniko/executor
              env:
              - name: DOCKER_CONFIG
                value: /tekton/home/.docker/
              image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
              name: build-and-push
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T07:45:47Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-web
            tekton.dev/task: build-push
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"b6ed862b-32d1-4e54-beea-995ca08de130"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:49:14Z"
          name: demo-pipeline-run-1-build-skaffold-web-2s926
          namespace: arendelle-slhj5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: b6ed862b-32d1-4e54-beea-995ca08de130
          resourceVersion: "5495575"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/taskruns/demo-pipeline-run-1-build-skaffold-web-2s926
          uid: 81683670-ea32-4540-acff-2201eb0b23ec
        spec:
          params:
          - name: pathToDockerFile
            value: Dockerfile
          - name: pathToContext
            value: /workspace/workspace/examples/microservices/leeroy-web
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
            outputs:
            - name: builtImage
              paths:
              - build-skaffold-web/builtImage
              resourceRef:
                name: skaffold-image-leeroy-web-pipelinerun
          serviceAccountName: default
          taskRef:
            kind: Task
            name: build-push
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T07:49:14Z"
          conditions:
          - lastTransitionTime: "2021-09-27T07:49:14Z"
            message: |
              "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-slhj5 logs demo-pipeline-run-1-build-skaffold-web-2s926-pod-gj89r -c step-build-and-push
            reason: Failed
            status: "False"
            type: Succeeded
          podName: demo-pipeline-run-1-build-skaffold-web-2s926-pod-gj89r
          startTime: "2021-09-27T07:45:48Z"
          steps:
          - container: step-create-dir-builtimage-c966f
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-builtimage-c966f
            terminated:
              containerID: docker://0d42bb2466c2f20d9aa3cfabc0c64cf0ff2b16cae4726a3933748b806f81c386
              exitCode: 0
              finishedAt: "2021-09-27T07:46:27Z"
              reason: Completed
              startedAt: "2021-09-27T07:46:27Z"
          - container: step-git-source-workspace-hp7qj
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-hp7qj
            terminated:
              containerID: docker://03ef3612e00ac6e9de3f256045a28758d8190b2664b245e298941eb42705349c
              exitCode: 0
              finishedAt: "2021-09-27T07:46:36Z"
              message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-27T07:46:28Z"
          - container: step-build-and-push
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            name: build-and-push
            terminated:
              containerID: docker://f01feca4f24c05e0555391ec4372ceebf52849e9dc5a7448843ae52ca6606383
              exitCode: 1
              finishedAt: "2021-09-27T07:48:46Z"
              reason: Error
              startedAt: "2021-09-27T07:46:37Z"
          - container: step-image-digest-exporter-pvqgw
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            name: image-digest-exporter-pvqgw
            terminated:
              containerID: docker://49c922c135e77521abf0679f0731e4bc54279126c10ace6ae361dd7b50b44271
              exitCode: 1
              finishedAt: "2021-09-27T07:48:46Z"
              reason: Error
              startedAt: "2021-09-27T07:48:46Z"
          taskSpec:
            params:
            - default: /workspace/workspace/Dockerfile
              description: The path to the dockerfile to build
              name: pathToDockerFile
              type: string
            - default: /workspace/workspace
              description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
              name: pathToContext
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
              outputs:
              - name: builtImage
                type: image
            steps:
            - args:
              - --dockerfile=$(inputs.params.pathToDockerFile)
              - --destination=$(outputs.resources.builtImage.url)
              - --context=$(inputs.params.pathToContext)
              command:
              - /kaniko/executor
              env:
              - name: DOCKER_CONFIG
                value: /tekton/home/.docker/
              image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
              name: build-and-push
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T07:44:42Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: skaffold-unit-tests
            tekton.dev/task: unit-tests
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"b6ed862b-32d1-4e54-beea-995ca08de130"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:resourcesResult: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:45:47Z"
          name: demo-pipeline-run-1-skaffold-unit-tests-8dbgc
          namespace: arendelle-slhj5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: b6ed862b-32d1-4e54-beea-995ca08de130
          resourceVersion: "5493502"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-slhj5/taskruns/demo-pipeline-run-1-skaffold-unit-tests-8dbgc
          uid: ef332f11-dd36-480c-9ff3-0c967b0cac89
        spec:
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
          serviceAccountName: default
          taskRef:
            kind: Task
            name: unit-tests
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T07:45:47Z"
          conditions:
          - lastTransitionTime: "2021-09-27T07:45:47Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: demo-pipeline-run-1-skaffold-unit-tests-8dbgc-pod-8txz8
          resourcesResult:
          - key: commit
            resourceName: workspace
            resourceRef:
              name: workspace
            value: 6ed7aad5e8a36052ee5f6079fc91368e362121f7
          - key: url
            resourceName: workspace
            resourceRef:
              name: workspace
            value: https://github.com/GoogleContainerTools/skaffold
          startTime: "2021-09-27T07:44:43Z"
          steps:
          - container: step-git-source-workspace-6xmcb
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-6xmcb
            terminated:
              containerID: docker://072b28a19904a6a903d4474f4d06513344a20b05e5df4180527a645497438ef8
              exitCode: 0
              finishedAt: "2021-09-27T07:45:32Z"
              message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-27T07:45:20Z"
          - container: step-run-tests
            imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
            name: run-tests
            terminated:
              containerID: docker://432b80f62a139b5c7afb449704d3271a344387cf7d9460d4605a688b7a44c8f1
              exitCode: 0
              finishedAt: "2021-09-27T07:45:33Z"
              reason: Completed
              startedAt: "2021-09-27T07:45:32Z"
          taskSpec:
            resources:
              inputs:
              - name: workspace
                targetPath: go/src/github.com/GoogleContainerTools/skaffold
                type: git
            steps:
            - args:
              - pass
              command:
              - echo
              env:
              - name: GOPATH
                value: /workspace/go
              image: golang
              name: run-tests
              resources: {}
              workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 1043b1ef31eb2664750cf36e5da7274d60d117ba0ab128b366c6d80e2b5193b2
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T07:45:48Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-app
            tekton.dev/task: build-push
            tekton.dev/taskRun: demo-pipeline-run-1-build-skaffold-app-nf2pd
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"557928f4-605c-4ba9-8241-7803b96b4c50"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-build-and-push"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"DOCKER_CONFIG"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-create-dir-builtimage-w9vl7"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-zs2bp"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-image-digest-exporter-8k45m"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:46:34Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T07:49:35Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.43"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T07:49:35Z"
          name: demo-pipeline-run-1-build-skaffold-app-nf2pd-pod-vrjq2
          namespace: arendelle-slhj5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-build-skaffold-app-nf2pd
            uid: 557928f4-605c-4ba9-8241-7803b96b4c50
          resourceVersion: "5495771"
          selfLink: /api/v1/namespaces/arendelle-slhj5/pods/demo-pipeline-run-1-build-skaffold-app-nf2pd-pod-vrjq2
          uid: 3c2d77a6-43ce-49d1-ba78-7d3d3ca9ea01
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-builtimage-w9vl7
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/builtImage
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-builtimage-w9vl7
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-zs2bp
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/workspace
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-zs2bp
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-build-and-push
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /kaniko/executor
            - --
            - --dockerfile=Dockerfile
            - --destination=ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app
            - --context=/workspace/workspace/examples/microservices/leeroy-app
            command:
            - /tekton/bin/entrypoint
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imagePullPolicy: IfNotPresent
            name: step-build-and-push
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-image-digest-exporter-8k45m
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /ko-app/imagedigestexporter
            - --
            - -images
            - '[{"name":"builtImage","type":"image","url":"ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app","digest":"","OutputImageDir":"/workspace/output/builtImage"}]'
            command:
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imagePullPolicy: IfNotPresent
            name: step-image-digest-exporter-8k45m
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: default-token-l4pw8
            secret:
              defaultMode: 420
              secretName: default-token-l4pw8
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:46:04Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:47:25Z"
            message: 'containers with unready status: [step-create-dir-builtimage-w9vl7 step-git-source-workspace-zs2bp
              step-build-and-push step-image-digest-exporter-8k45m]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:47:25Z"
            message: 'containers with unready status: [step-create-dir-builtimage-w9vl7 step-git-source-workspace-zs2bp
              step-build-and-push step-image-digest-exporter-8k45m]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:45:48Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://d5c3f8aeec1af8d2766eaf67e8b5073aca019e7cbbb28e8b12dc4af5c5c75388
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            lastState: {}
            name: step-build-and-push
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://d5c3f8aeec1af8d2766eaf67e8b5073aca019e7cbbb28e8b12dc4af5c5c75388
                exitCode: 1
                finishedAt: "2021-09-27T07:49:29Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:47:33.703Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:46:14Z"
          - containerID: docker://dced9783c9d0f723cc4a1ad19f251bee4bbdb0821e152f6dc0aedc447be4f8b7
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-builtimage-w9vl7
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://dced9783c9d0f723cc4a1ad19f251bee4bbdb0821e152f6dc0aedc447be4f8b7
                exitCode: 0
                finishedAt: "2021-09-27T07:47:22Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:47:21.703Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T07:46:09Z"
          - containerID: docker://94f7e73dbc7fd2090f2ea22694ee507a9c8db4a9dc6e857cbe11d1678a2759aa
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-zs2bp
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://94f7e73dbc7fd2090f2ea22694ee507a9c8db4a9dc6e857cbe11d1678a2759aa
                exitCode: 0
                finishedAt: "2021-09-27T07:47:33Z"
                message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-27T07:47:22.702Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T07:46:11Z"
          - containerID: docker://d2d228173ee9d642be460fbab58d87d3bcfdd7412ea030d8cd8f49fa71338446
            image: sha256:6f40bd0d4755ea63b7c947c27d7693efd3c474110f5adf8da91beffc7582df41
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            lastState: {}
            name: step-image-digest-exporter-8k45m
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://d2d228173ee9d642be460fbab58d87d3bcfdd7412ea030d8cd8f49fa71338446
                exitCode: 1
                finishedAt: "2021-09-27T07:49:29Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:49:29.014Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:46:17Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://23080439f37583fee2ebe1acabf45808ce6f77d1fc5fe60856c0299a364a64a0
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://23080439f37583fee2ebe1acabf45808ce6f77d1fc5fe60856c0299a364a64a0
                exitCode: 0
                finishedAt: "2021-09-27T07:45:59Z"
                reason: Completed
                startedAt: "2021-09-27T07:45:59Z"
          phase: Failed
          podIP: 172.20.64.43
          podIPs:
          - ip: 172.20.64.43
          qosClass: BestEffort
          startTime: "2021-09-27T07:45:50Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 6bd964554d60c27fcf3b565ed008c792e22f81041fe6ca45975eac85a6410fe4
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T07:45:48Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-web
            tekton.dev/task: build-push
            tekton.dev/taskRun: demo-pipeline-run-1-build-skaffold-web-2s926
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"81683670-ea32-4540-acff-2201eb0b23ec"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-build-and-push"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"DOCKER_CONFIG"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-create-dir-builtimage-c966f"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-hp7qj"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-image-digest-exporter-pvqgw"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:46:17Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.24"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T07:49:11Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T07:49:14Z"
          name: demo-pipeline-run-1-build-skaffold-web-2s926-pod-gj89r
          namespace: arendelle-slhj5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-build-skaffold-web-2s926
            uid: 81683670-ea32-4540-acff-2201eb0b23ec
          resourceVersion: "5495583"
          selfLink: /api/v1/namespaces/arendelle-slhj5/pods/demo-pipeline-run-1-build-skaffold-web-2s926-pod-gj89r
          uid: 40c8aecb-1bb6-4077-a469-5a8a29a8ef5d
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-builtimage-c966f
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/builtImage
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-builtimage-c966f
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-hp7qj
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/workspace
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-hp7qj
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-build-and-push
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /kaniko/executor
            - --
            - --dockerfile=Dockerfile
            - --destination=ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web
            - --context=/workspace/workspace/examples/microservices/leeroy-web
            command:
            - /tekton/bin/entrypoint
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imagePullPolicy: IfNotPresent
            name: step-build-and-push
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-image-digest-exporter-pvqgw
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /ko-app/imagedigestexporter
            - --
            - -images
            - '[{"name":"builtImage","type":"image","url":"ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web","digest":"","OutputImageDir":"/workspace/output/builtImage"}]'
            command:
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imagePullPolicy: IfNotPresent
            name: step-image-digest-exporter-pvqgw
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: default-token-l4pw8
            secret:
              defaultMode: 420
              secretName: default-token-l4pw8
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:46:00Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:47:20Z"
            message: 'containers with unready status: [step-create-dir-builtimage-c966f step-git-source-workspace-hp7qj
              step-build-and-push step-image-digest-exporter-pvqgw]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:47:20Z"
            message: 'containers with unready status: [step-create-dir-builtimage-c966f step-git-source-workspace-hp7qj
              step-build-and-push step-image-digest-exporter-pvqgw]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:45:48Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://f01feca4f24c05e0555391ec4372ceebf52849e9dc5a7448843ae52ca6606383
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            lastState: {}
            name: step-build-and-push
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://f01feca4f24c05e0555391ec4372ceebf52849e9dc5a7448843ae52ca6606383
                exitCode: 1
                finishedAt: "2021-09-27T07:48:46Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:46:37.048Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:46:10Z"
          - containerID: docker://0d42bb2466c2f20d9aa3cfabc0c64cf0ff2b16cae4726a3933748b806f81c386
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-builtimage-c966f
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://0d42bb2466c2f20d9aa3cfabc0c64cf0ff2b16cae4726a3933748b806f81c386
                exitCode: 0
                finishedAt: "2021-09-27T07:46:27Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:46:27.062Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T07:46:04Z"
          - containerID: docker://03ef3612e00ac6e9de3f256045a28758d8190b2664b245e298941eb42705349c
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-hp7qj
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://03ef3612e00ac6e9de3f256045a28758d8190b2664b245e298941eb42705349c
                exitCode: 0
                finishedAt: "2021-09-27T07:46:36Z"
                message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-27T07:46:28.102Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T07:46:06Z"
          - containerID: docker://49c922c135e77521abf0679f0731e4bc54279126c10ace6ae361dd7b50b44271
            image: sha256:6f40bd0d4755ea63b7c947c27d7693efd3c474110f5adf8da91beffc7582df41
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            lastState: {}
            name: step-image-digest-exporter-pvqgw
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://49c922c135e77521abf0679f0731e4bc54279126c10ace6ae361dd7b50b44271
                exitCode: 1
                finishedAt: "2021-09-27T07:48:46Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:48:46.290Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:46:13Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://f02447393dc3d07566dae467004aa75c052e1252bd750cc3cc97040386f492c7
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://f02447393dc3d07566dae467004aa75c052e1252bd750cc3cc97040386f492c7
                exitCode: 0
                finishedAt: "2021-09-27T07:45:56Z"
                reason: Completed
                startedAt: "2021-09-27T07:45:56Z"
          phase: Failed
          podIP: 172.20.64.24
          podIPs:
          - ip: 172.20.64.24
          qosClass: BestEffort
          startTime: "2021-09-27T07:45:49Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 6c2fca8e432b37279674e66720009fc8e07c515e3d738166659931fdd69c1df7
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T07:44:43Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: skaffold-unit-tests
            tekton.dev/task: unit-tests
            tekton.dev/taskRun: demo-pipeline-run-1-skaffold-unit-tests-8dbgc
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"ef332f11-dd36-480c-9ff3-0c967b0cac89"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-workspace-6xmcb"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-run-tests"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"GOPATH"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"working-dir-initializer"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:45:14Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T07:45:42Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.25"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T07:45:43Z"
          name: demo-pipeline-run-1-skaffold-unit-tests-8dbgc-pod-8txz8
          namespace: arendelle-slhj5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-skaffold-unit-tests-8dbgc
            uid: ef332f11-dd36-480c-9ff3-0c967b0cac89
          resourceVersion: "5493480"
          selfLink: /api/v1/namespaces/arendelle-slhj5/pods/demo-pipeline-run-1-skaffold-unit-tests-8dbgc-pod-8txz8
          uid: 7e083a52-86bc-4d20-8829-b98a18621b82
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-6xmcb
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/go/src/github.com/GoogleContainerTools/skaffold
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-6xmcb
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-run-tests
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - echo
            - --
            - pass
            command:
            - /tekton/bin/entrypoint
            env:
            - name: GOPATH
              value: /workspace/go
            image: golang
            imagePullPolicy: Always
            name: step-run-tests
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /
          - args:
            - -c
            - mkdir -p /workspace/go/src/github.com/GoogleContainerTools/skaffold
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: working-dir-initializer
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-l4pw8
              readOnly: true
            workingDir: /workspace
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-l4pw8
            secret:
              defaultMode: 420
              secretName: default-token-l4pw8
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:44:58Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:45:41Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:45:41Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:44:43Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://072b28a19904a6a903d4474f4d06513344a20b05e5df4180527a645497438ef8
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-6xmcb
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://072b28a19904a6a903d4474f4d06513344a20b05e5df4180527a645497438ef8
                exitCode: 0
                finishedAt: "2021-09-27T07:45:32Z"
                message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-27T07:45:20.655Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T07:45:01Z"
          - containerID: docker://432b80f62a139b5c7afb449704d3271a344387cf7d9460d4605a688b7a44c8f1
            image: golang:latest
            imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
            lastState: {}
            name: step-run-tests
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://432b80f62a139b5c7afb449704d3271a344387cf7d9460d4605a688b7a44c8f1
                exitCode: 0
                finishedAt: "2021-09-27T07:45:33Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:45:32.158Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T07:45:12Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://6ccdee12aa74cf2f3b7ecc7d159410ca6ca41d94da7ac131735e739e0b17f176
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://6ccdee12aa74cf2f3b7ecc7d159410ca6ca41d94da7ac131735e739e0b17f176
                exitCode: 0
                finishedAt: "2021-09-27T07:44:51Z"
                reason: Completed
                startedAt: "2021-09-27T07:44:51Z"
          - containerID: docker://765dace90d0405e6e390dec7c432f19df8f3434c45fecd8cd9d3f4fd533b5382
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: working-dir-initializer
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://765dace90d0405e6e390dec7c432f19df8f3434c45fecd8cd9d3f4fd533b5382
                exitCode: 0
                finishedAt: "2021-09-27T07:44:55Z"
                reason: Completed
                startedAt: "2021-09-27T07:44:55Z"
          phase: Succeeded
          podIP: 172.20.64.25
          podIPs:
          - ip: 172.20.64.25
          qosClass: BestEffort
          startTime: "2021-09-27T07:44:43Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-slhj5 ###
    panic.go:636: #####################################################
    build_logs.go:37: build logs 
        >>> Container step-create-dir-builtimage-w9vl7:
        
        >>> Container step-git-source-workspace-zs2bp:
        {"level":"info","ts":1632728852.8592198,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/workspace"}
        {"level":"info","ts":1632728852.9872732,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/workspace"}
        
        >>> Container step-build-and-push:
        [36mINFO[0m[0004] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0004] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0004] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0004] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0004] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0004] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0005] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0005] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0005] Built cross stage deps: map[0:[/app]]        
        [36mINFO[0m[0005] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0006] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0006] Unpacking rootfs as cmd COPY app.go . requires it. 
        [36mINFO[0m[0020] Taking snapshot of full filesystem...        
        [36mINFO[0m[0111] COPY app.go .                                
        [36mINFO[0m[0111] Taking snapshot of files...                  
        [36mINFO[0m[0111] RUN go build -o /app .                       
        [36mINFO[0m[0111] cmd: /bin/sh                                 
        [36mINFO[0m[0111] args: [-c go build -o /app .]                
        # _/go
        /usr/local/go/pkg/tool/linux_ppc64le/link: running gcc failed: exec: "gcc": executable file not found in $PATH
        
        error building image: error building stage: failed to execute command: waiting for process to exit: exit status 2
        
        >>> Container step-image-digest-exporter-8k45m:
        2021/09/27 07:49:29 Skipping step because a previous step failed
    build_logs.go:37: build logs 
        >>> Container step-create-dir-builtimage-c966f:
        
        >>> Container step-git-source-workspace-hp7qj:
        {"level":"info","ts":1632728795.170094,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/workspace"}
        {"level":"info","ts":1632728795.192632,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/workspace"}
        
        >>> Container step-build-and-push:
        [36mINFO[0m[0000] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0000] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0000] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0000] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0000] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0000] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0001] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0001] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0001] Built cross stage deps: map[0:[/web]]        
        [36mINFO[0m[0001] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0002] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0002] Unpacking rootfs as cmd COPY web.go . requires it. 
        [36mINFO[0m[0015] Taking snapshot of full filesystem...        
        [36mINFO[0m[0125] COPY web.go .                                
        [36mINFO[0m[0125] Taking snapshot of files...                  
        [36mINFO[0m[0125] RUN go build -o /web .                       
        [36mINFO[0m[0125] cmd: /bin/sh                                 
        [36mINFO[0m[0125] args: [-c go build -o /web .]                
        # _/go
        /usr/local/go/pkg/tool/linux_ppc64le/link: running gcc failed: exec: "gcc": executable file not found in $PATH
        
        error building image: error building stage: failed to execute command: waiting for process to exit: exit status 2
        
        >>> Container step-image-digest-exporter-pvqgw:
        2021/09/27 07:48:46 Skipping step because a previous step failed
    build_logs.go:37: build logs 
        >>> Container step-git-source-workspace-6xmcb:
        {"level":"info","ts":1632728727.2880065,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/go/src/github.com/GoogleContainerTools/skaffold"}
        {"level":"info","ts":1632728727.3096752,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/go/src/github.com/GoogleContainerTools/skaffold"}
        
        >>> Container step-run-tests:
        pass
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    init_test.go:135: Create namespace arendelle-6kpmx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6kpmx"
=== CONT  TestExamples/v1beta1/taskruns/run-steps-as-non-root
    examples_test.go:169: Deleting namespace arendelle-d66pw
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
    init_test.go:135: Create namespace arendelle-gh7t7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gh7t7"
=== CONT  TestExamples/v1beta1/taskruns/secret-env
    examples_test.go:169: Deleting namespace arendelle-djmnl
=== CONT  TestExamples/v1alpha1/taskruns/task-multiple-output-image
    init_test.go:135: Create namespace arendelle-95xdj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-95xdj"
=== CONT  TestExamples/v1beta1/taskruns/template-volume
    examples_test.go:169: Deleting namespace arendelle-nmkb2
=== CONT  TestExamples/v1beta1/taskruns/dind-sidecar
    init_test.go:135: Create namespace arendelle-78tm5 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-78tm5"
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources
    examples_test.go:169: Deleting namespace arendelle-v8rpk
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    init_test.go:135: Create namespace arendelle-qvfzq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-qvfzq"
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
    examples_test.go:169: Deleting namespace arendelle-bv9mr
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
    init_test.go:135: Create namespace arendelle-57n48 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-57n48"
=== CONT  TestExamples/v1alpha1/taskruns/task-output-image
    examples_test.go:169: Deleting namespace arendelle-lxbdq
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready-script
    init_test.go:135: Create namespace arendelle-dzn9t to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dzn9t"
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
    examples_test.go:169: Deleting namespace arendelle-gh7t7
=== CONT  TestExamples/v1beta1/taskruns/custom-env
    init_test.go:135: Create namespace arendelle-cgd46 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-cgd46"
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds
    examples_test.go:169: Deleting namespace arendelle-tnbf7
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready
    init_test.go:135: Create namespace arendelle-t96zx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-t96zx"
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    examples_test.go:169: Deleting namespace arendelle-6kpmx
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-interp
    init_test.go:135: Create namespace arendelle-r4kfp to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-r4kfp"
=== CONT  TestExamples/v1alpha1/taskruns/task-multiple-output-image
    examples_test.go:169: Deleting namespace arendelle-95xdj
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
    init_test.go:135: Create namespace arendelle-w4ds2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-w4ds2"
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
    examples_test.go:169: Deleting namespace arendelle-57n48
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume-params
    init_test.go:135: Create namespace arendelle-t7fm2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-t7fm2"
=== CONT  TestExamples/v1beta1/taskruns/custom-env
    examples_test.go:169: Deleting namespace arendelle-cgd46
=== CONT  TestExamples/v1alpha1/taskruns/secret-env
    init_test.go:135: Create namespace arendelle-xnr75 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xnr75"
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
    examples_test.go:169: Deleting namespace arendelle-w4ds2
=== CONT  TestExamples/v1beta1/taskruns/step-script
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-interp
    examples_test.go:169: Deleting namespace arendelle-r4kfp
=== CONT  TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
=== CONT  TestExamples/v1beta1/taskruns/step-script
    init_test.go:135: Create namespace arendelle-272l7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-272l7"
=== CONT  TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
    init_test.go:135: Create namespace arendelle-ds7cz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ds7cz"
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    examples_test.go:169: Deleting namespace arendelle-qvfzq
=== CONT  TestExamples/v1beta1/taskruns/steptemplate-env-merge
    init_test.go:135: Create namespace arendelle-7t56z to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7t56z"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready-script
    examples_test.go:169: Deleting namespace arendelle-dzn9t
=== CONT  TestExamples/v1beta1/taskruns/task-output-image
    init_test.go:135: Create namespace arendelle-vn68q to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vn68q"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready
    examples_test.go:169: Deleting namespace arendelle-t96zx
=== CONT  TestExamples/v1beta1/taskruns/sidecar-ready
    init_test.go:135: Create namespace arendelle-fmbxt to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fmbxt"
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume-params
    examples_test.go:169: Deleting namespace arendelle-t7fm2
=== CONT  TestExamples/v1beta1/taskruns/configmap
    init_test.go:135: Create namespace arendelle-vsnhm to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vsnhm"
=== CONT  TestExamples/v1alpha1/taskruns/secret-env
    examples_test.go:169: Deleting namespace arendelle-xnr75
=== CONT  TestExamples/v1beta1/taskruns/clustertask
    init_test.go:135: Create namespace arendelle-6b7ph to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6b7ph"
=== CONT  TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
    examples_test.go:169: Deleting namespace arendelle-ds7cz
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:135: Create namespace arendelle-bhlmb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-bhlmb"
=== CONT  TestExamples/v1beta1/taskruns/dind-sidecar
    examples_test.go:169: Deleting namespace arendelle-78tm5
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    init_test.go:135: Create namespace arendelle-xvfxz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xvfxz"
=== CONT  TestExamples/v1beta1/taskruns/configmap
    examples_test.go:169: Deleting namespace arendelle-vsnhm
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    init_test.go:135: Create namespace arendelle-gspd5 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gspd5"
=== CONT  TestExamples/v1beta1/taskruns/steptemplate-env-merge
    examples_test.go:169: Deleting namespace arendelle-7t56z
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    init_test.go:135: Create namespace arendelle-nzvvq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-nzvvq"
=== CONT  TestExamples/v1beta1/taskruns/task-output-image
    examples_test.go:169: Deleting namespace arendelle-vn68q
=== CONT  TestExamples/v1beta1/pipelineruns/workspaces
    init_test.go:135: Create namespace arendelle-mbjdc to deploy to
=== CONT  TestExamples/v1beta1/taskruns/sidecar-ready
    examples_test.go:169: Deleting namespace arendelle-fmbxt
=== CONT  TestExamples/v1beta1/pipelineruns/workspaces
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mbjdc"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    init_test.go:135: Create namespace arendelle-572k8 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-572k8"
=== CONT  TestExamples/v1beta1/taskruns/clustertask
    examples_test.go:109: Deleting clustertask clustertask-v1beta1
    examples_test.go:169: Deleting namespace arendelle-6b7ph
=== CONT  TestExamples/v1beta1/taskruns/authenticating-git-commands
    init_test.go:135: Create namespace arendelle-st7vp to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-st7vp"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    examples_test.go:169: Deleting namespace arendelle-bhlmb
=== CONT  TestExamples/v1beta1/taskruns/sidecar-interp
    init_test.go:135: Create namespace arendelle-rml2j to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rml2j"
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    examples_test.go:169: Deleting namespace arendelle-xvfxz
=== CONT  TestExamples/v1beta1/pipelineruns/using_context_variables
    init_test.go:135: Create namespace arendelle-p2t87 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-p2t87"
=== CONT  TestExamples/v1beta1/taskruns/step-script
    examples_test.go:169: Deleting namespace arendelle-272l7
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
    init_test.go:135: Create namespace arendelle-9m7p7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-9m7p7"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    examples_test.go:169: Deleting namespace arendelle-572k8
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
    init_test.go:135: Create namespace arendelle-c24cj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-c24cj"
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    examples_test.go:169: Deleting namespace arendelle-gspd5
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
    init_test.go:135: Create namespace arendelle-wgrqn to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wgrqn"
=== CONT  TestExamples/v1beta1/taskruns/authenticating-git-commands
    examples_test.go:169: Deleting namespace arendelle-st7vp
=== CONT  TestExamples/v1alpha1/taskruns/pullrequest
    init_test.go:135: Create namespace arendelle-7rj86 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7rj86"
=== CONT  TestExamples/v1beta1/taskruns/sidecar-interp
    examples_test.go:169: Deleting namespace arendelle-rml2j
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
    init_test.go:135: Create namespace arendelle-mgbcx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mgbcx"
=== CONT  TestExamples/v1beta1/pipelineruns/using_context_variables
    examples_test.go:169: Deleting namespace arendelle-p2t87
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
    init_test.go:135: Create namespace arendelle-h9hvz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-h9hvz"
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
    examples_test.go:109: Deleting clustertask clustertask-with-optional-resources-v1alpha1
    examples_test.go:169: Deleting namespace arendelle-9m7p7
=== CONT  TestExamples/v1beta1/taskruns/task-multiple-output-image
    init_test.go:135: Create namespace arendelle-fwft8 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fwft8"
=== CONT  TestExamples/v1beta1/pipelineruns/workspaces
    examples_test.go:169: Deleting namespace arendelle-mbjdc
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
    init_test.go:135: Create namespace arendelle-m4ld7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-m4ld7"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    examples_test.go:169: Deleting namespace arendelle-nzvvq
=== CONT  TestExamples/v1alpha1/taskruns/home-is-set
    init_test.go:135: Create namespace arendelle-7977g to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7977g"
    examples_test.go:169: Deleting namespace arendelle-7977g
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    init_test.go:135: Create namespace arendelle-r922x to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-r922x"
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
    examples_test.go:169: Deleting namespace arendelle-c24cj
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    init_test.go:135: Create namespace arendelle-b8wvl to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-b8wvl"
=== CONT  TestExamples/v1alpha1/taskruns/pullrequest
    examples_test.go:169: Deleting namespace arendelle-7rj86
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
    init_test.go:135: Create namespace arendelle-gtlfv to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gtlfv"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
    examples_test.go:169: Deleting namespace arendelle-mgbcx
=== CONT  TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
    init_test.go:135: Create namespace arendelle-fgf7l to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fgf7l"
    examples_test.go:144: exit status 1 Output: pipeline.tekton.dev/sample-pipeline-cluster-task-4 created
        pipelinerun.tekton.dev/demo-pipeline-run-4 created
        Error from server (AlreadyExists): error when creating "STDIN": clustertasks.tekton.dev "cluster-task-pipeline-4" already exists
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-fgf7l ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T07:57:50Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:57:50Z"
          name: sample-pipeline-cluster-task-4
          namespace: arendelle-fgf7l
          resourceVersion: "5502645"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fgf7l/pipelines/sample-pipeline-cluster-task-4
          uid: d99f81fc-a0da-424e-8daf-5427e37f84ae
        spec:
          tasks:
          - name: cluster-task-pipeline-4
            taskRef:
              kind: ClusterTask
              name: cluster-task-pipeline-4
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T07:57:50Z"
          generation: 1
          labels:
            tekton.dev/pipeline: sample-pipeline-cluster-task-4
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:57:50Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:57:51Z"
          name: demo-pipeline-run-4
          namespace: arendelle-fgf7l
          resourceVersion: "5502657"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fgf7l/pipelineruns/demo-pipeline-run-4
          uid: 309e4f46-a212-447b-86f8-c5d0c3fbf455
        spec:
          pipelineRef:
            name: sample-pipeline-cluster-task-4
          serviceAccountName: default
          timeout: 1h0m0s
        status: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          creationTimestamp: "2021-09-27T07:57:51Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sample-pipeline-cluster-task-4
            tekton.dev/pipelineRun: demo-pipeline-run-4
            tekton.dev/pipelineTask: cluster-task-pipeline-4
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"309e4f46-a212-447b-86f8-c5d0c3fbf455"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:podName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:57:51Z"
          name: demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9
          namespace: arendelle-fgf7l
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-4
            uid: 309e4f46-a212-447b-86f8-c5d0c3fbf455
          resourceVersion: "5502653"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fgf7l/taskruns/demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9
          uid: 341bb1ec-c4f2-4372-8568-e8568316dc1a
        spec:
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: ClusterTask
            name: cluster-task-pipeline-4
          timeout: 1h0m0s
        status:
          podName: ""
        
        ---
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T07:57:51Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/clusterTask: cluster-task-pipeline-4
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: sample-pipeline-cluster-task-4
            tekton.dev/pipelineRun: demo-pipeline-run-4
            tekton.dev/pipelineTask: cluster-task-pipeline-4
            tekton.dev/taskRun: demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/clusterTask: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"341bb1ec-c4f2-4372-8568-e8568316dc1a"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-task-two-step-one"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:57:51Z"
          name: demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9-pod-5pq59
          namespace: arendelle-fgf7l
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9
            uid: 341bb1ec-c4f2-4372-8568-e8568316dc1a
          resourceVersion: "5502661"
          selfLink: /api/v1/namespaces/arendelle-fgf7l/pods/demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9-pod-5pq59
          uid: 142aaf60-9284-4a9d-a905-afd85897040a
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-task-two-step-one
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /bin/bash
            - --
            - -c
            - echo success
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-task-two-step-one
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dgzq9
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-dgzq9
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-dgzq9
            secret:
              defaultMode: 420
              secretName: default-token-dgzq9
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:57:51Z"
            status: "True"
            type: PodScheduled
          phase: Pending
          qosClass: BestEffort
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-fgf7l ###
    panic.go:636: #####################################################
    build_logs.go:35: Could not get logs for pod demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9-pod-5pq59: container "step-task-two-step-one" in pod "demo-pipeline-run-4-cluster-task-pipeline-4-ddwf9-pod-5pq59" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
    init_test.go:135: Create namespace arendelle-xc49m to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xc49m"
=== CONT  TestExamples/v1beta1/taskruns/task-multiple-output-image
    examples_test.go:169: Deleting namespace arendelle-fwft8
=== CONT  TestExamples/v1beta1/taskruns/home-volume
    init_test.go:135: Create namespace arendelle-5z84p to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-5z84p"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
    examples_test.go:169: Deleting namespace arendelle-gtlfv
=== CONT  TestExamples/v1beta1/taskruns/optional-workspaces
    init_test.go:135: Create namespace arendelle-q4p5h to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-q4p5h"
=== CONT  TestExamples/v1beta1/pipelineruns/task_results_example
    examples_test.go:169: Deleting namespace arendelle-b8wvl
=== CONT  TestExamples/v1beta1/taskruns/optional-resources
    init_test.go:135: Create namespace arendelle-r99dk to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-r99dk"
=== CONT  TestExamples/v1beta1/taskruns/home-volume
    examples_test.go:169: Deleting namespace arendelle-5z84p
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    init_test.go:135: Create namespace arendelle-jcdq5 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-jcdq5"
=== CONT  TestExamples/v1beta1/taskruns/optional-workspaces
    examples_test.go:169: Deleting namespace arendelle-q4p5h
=== CONT  TestExamples/v1alpha1/taskruns/workspace-volume
    init_test.go:135: Create namespace arendelle-ppwdn to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ppwdn"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
    examples_test.go:169: Deleting namespace arendelle-xc49m
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
    init_test.go:135: Create namespace arendelle-6pgtb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6pgtb"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
    examples_test.go:169: Deleting namespace arendelle-m4ld7
=== CONT  TestExamples/v1alpha1/taskruns/workspace-readonly
    init_test.go:135: Create namespace arendelle-g4pkj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-g4pkj"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
    examples_test.go:169: Deleting namespace arendelle-h9hvz
=== CONT  TestExamples/v1alpha1/pipelineruns/workspaces
    init_test.go:135: Create namespace arendelle-ds5dd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ds5dd"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
    examples_test.go:169: Deleting namespace arendelle-wgrqn
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    init_test.go:135: Create namespace arendelle-4vjxt to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4vjxt"
=== CONT  TestExamples/v1beta1/taskruns/optional-resources
    examples_test.go:169: Deleting namespace arendelle-r99dk
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    init_test.go:135: Create namespace arendelle-dpb9p to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dpb9p"
=== CONT  TestExamples/v1alpha1/taskruns/workspace-volume
    examples_test.go:169: Deleting namespace arendelle-ppwdn
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    init_test.go:135: Create namespace arendelle-dh8sw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dh8sw"
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
    examples_test.go:169: Deleting namespace arendelle-6pgtb
=== CONT  TestExamples/v1beta1/pipelineruns/demo-optional-resources
    init_test.go:135: Create namespace arendelle-mclzh to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mclzh"
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    examples_test.go:169: Deleting namespace arendelle-4vjxt
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    init_test.go:135: Create namespace arendelle-2zszn to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-2zszn"
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    examples_test.go:169: Deleting namespace arendelle-jcdq5
=== CONT  TestExamples/v1alpha1/taskruns/unnamed-steps
    init_test.go:135: Create namespace arendelle-wnvlq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wnvlq"
=== CONT  TestExamples/v1alpha1/taskruns/workspace-readonly
    examples_test.go:169: Deleting namespace arendelle-g4pkj
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    init_test.go:135: Create namespace arendelle-8qdhc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8qdhc"
=== CONT  TestExamples/v1alpha1/pipelineruns/workspaces
    examples_test.go:169: Deleting namespace arendelle-ds5dd
=== CONT  TestExamples/v1alpha1/pipelineruns/output-pipelinerun
    init_test.go:135: Create namespace arendelle-pj4z2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-pj4z2"
=== CONT  TestExamples/v1beta1/pipelineruns/demo-optional-resources
    examples_test.go:169: Deleting namespace arendelle-mclzh
=== CONT  TestExamples/v1alpha1/pipelineruns/task_results_example
    init_test.go:135: Create namespace arendelle-5pk57 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-5pk57"
    examples_test.go:153: pipelinerun or taskrun not created for ../examples/v1alpha1/pipelineruns/task_results_example.yaml
    panic.go:636: Deleting namespace arendelle-5pk57
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    init_test.go:135: Create namespace arendelle-hwgqd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-hwgqd"
=== CONT  TestExamples/v1alpha1/taskruns/unnamed-steps
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-wnvlq ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1alpha1/pipelineruns/output-pipelinerun
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-pj4z2 ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-hwgqd ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-r922x ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-8qdhc ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-2zszn ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-dh8sw ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-dpb9p ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1alpha1/taskruns/unnamed-steps
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:07Z"
          generateName: unnamed-steps-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:07Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:03Z"
          name: unnamed-steps-zmz6w
          namespace: arendelle-wnvlq
          resourceVersion: "5507833"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-wnvlq/taskruns/unnamed-steps-zmz6w
          uid: 7c5ddba9-36ad-41f6-adb5-ea3386116247
        spec:
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: "true"
            - image: ubuntu
              name: ""
              resources: {}
              script: "true"
            - image: ubuntu
              name: ""
              resources: {}
              script: "true"
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:03Z"
            message: 'pod status "Ready":"False"; message: "containers with unready status:
              [step-unnamed-0 step-unnamed-1 step-unnamed-2]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: unnamed-steps-zmz6w-pod-q7xvl
          startTime: "2021-09-27T08:02:09Z"
          steps:
          - container: step-unnamed-0
            name: unnamed-0
            waiting:
              reason: PodInitializing
          - container: step-unnamed-1
            name: unnamed-1
            waiting:
              reason: PodInitializing
          - container: step-unnamed-2
            name: unnamed-2
            waiting:
              reason: PodInitializing
          taskSpec:
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: "true"
            - image: ubuntu
              name: ""
              resources: {}
              script: "true"
            - image: ubuntu
              name: ""
              resources: {}
              script: "true"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: ce8a843d01652ed954cf28aec001c31ffd5cec2b22505fe7d5c5993b6b105466
            cni.projectcalico.org/podIP: 172.20.64.31/32
            cni.projectcalico.org/podIPs: 172.20.64.31/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:08Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: unnamed-steps-zmz6w
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"7c5ddba9-36ad-41f6-adb5-ea3386116247"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-unnamed-1"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-unnamed-2"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:02:08Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:03:40Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.31"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:03Z"
          name: unnamed-steps-zmz6w-pod-q7xvl
          namespace: arendelle-wnvlq
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: unnamed-steps-zmz6w
            uid: 7c5ddba9-36ad-41f6-adb5-ea3386116247
          resourceVersion: "5507831"
          selfLink: /api/v1/namespaces/arendelle-wnvlq/pods/unnamed-steps-zmz6w-pod-q7xvl
          uid: 2664b5c0-07f2-4e96-be69-2d54b7f8f905
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-8ptj8
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-m8q6x
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-1
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-fxgsd
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-1
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-m8q6x
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-2
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /tekton/scripts/script-2-ln8lk
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-2
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-m8q6x
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-m8q6x
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-8ptj8"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdHJ1ZQ==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-1-fxgsd"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdHJ1ZQ==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-2-ln8lk"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdHJ1ZQ==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-m8q6x
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - name: default-token-m8q6x
            secret:
              defaultMode: 420
              secretName: default-token-m8q6x
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:03Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            message: 'containers with unready status: [step-unnamed-0 step-unnamed-1 step-unnamed-2]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            message: 'containers with unready status: [step-unnamed-0 step-unnamed-1 step-unnamed-2]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: ubuntu
            imageID: ""
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: ubuntu
            imageID: ""
            lastState: {}
            name: step-unnamed-1
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: ubuntu
            imageID: ""
            lastState: {}
            name: step-unnamed-2
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://baf4278b177785cd1061ed342b3674c981f91f6f2b457fc8653d299883f41a35
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://baf4278b177785cd1061ed342b3674c981f91f6f2b457fc8653d299883f41a35
                exitCode: 0
                finishedAt: "2021-09-27T08:03:46Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:46Z"
          - containerID: docker://bb71d46fe2a895bd2bc936a342e88641ddce8794c59fcd48bd19cd4d5e8b5320
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://bb71d46fe2a895bd2bc936a342e88641ddce8794c59fcd48bd19cd4d5e8b5320
                exitCode: 0
                finishedAt: "2021-09-27T08:03:59Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:59Z"
          phase: Pending
          podIP: 172.20.64.31
          podIPs:
          - ip: 172.20.64.31
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-wnvlq ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:tasks: {}
                f:workspaces: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: volume-from-template
          namespace: arendelle-2zszn
          resourceVersion: "5506185"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-2zszn/pipelines/volume-from-template
          uid: cf99d33a-c035-4faa-9305-205315868396
        spec:
          tasks:
          - name: writer
            taskSpec:
              metadata: {}
              spec: null
              steps:
              - image: ubuntu
                name: write
                resources: {}
                script: echo bar > $(workspaces.task-ws.path)/foo
              workspaces:
              - name: task-ws
            workspaces:
            - name: task-ws
              workspace: ws
          - name: reader
            runAfter:
            - writer
            taskSpec:
              metadata: {}
              spec: null
              steps:
              - image: ubuntu
                name: read
                resources: {}
                script: cat $(workspaces.myws.path)/foo | grep bar
              workspaces:
              - name: myws
            workspaces:
            - name: myws
              workspace: ws
          workspaces:
          - name: ws
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: run-with-template-
          generation: 1
          labels:
            tekton.dev/pipeline: volume-from-template
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:workspaces: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                  f:workspaces: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:run-with-template-b26jc-writer-p59df:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:steps: {}
                        f:workspaces: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:17Z"
          name: run-with-template-b26jc
          namespace: arendelle-2zszn
          resourceVersion: "5508108"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-2zszn/pipelineruns/run-with-template-b26jc
          uid: cc545fec-ffa5-4564-8f12-9373c599b3f2
        spec:
          pipelineRef:
            name: volume-from-template
          serviceAccountName: default
          timeout: 1h0m0s
          workspaces:
          - name: ws
            volumeClaimTemplate:
              metadata:
                creationTimestamp: null
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
              status: {}
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:02:09Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 2, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            tasks:
            - name: writer
              taskSpec:
                metadata: {}
                spec: null
                steps:
                - image: ubuntu
                  name: write
                  resources: {}
                  script: echo bar > $(workspaces.task-ws.path)/foo
                workspaces:
                - name: task-ws
              workspaces:
              - name: task-ws
                workspace: ws
            - name: reader
              runAfter:
              - writer
              taskSpec:
                metadata: {}
                spec: null
                steps:
                - image: ubuntu
                  name: read
                  resources: {}
                  script: cat $(workspaces.myws.path)/foo | grep bar
                workspaces:
                - name: myws
              workspaces:
              - name: myws
                workspace: ws
            workspaces:
            - name: ws
          startTime: "2021-09-27T08:02:09Z"
          taskRuns:
            run-with-template-b26jc-writer-p59df:
              pipelineTaskName: writer
              status:
                conditions:
                - lastTransitionTime: "2021-09-27T08:04:17Z"
                  message: Not all Steps in the Task have finished executing
                  reason: Running
                  status: Unknown
                  type: Succeeded
                podName: run-with-template-b26jc-writer-p59df-pod-5kmc6
                startTime: "2021-09-27T08:02:13Z"
                steps:
                - container: step-write
                  imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
                  name: write
                  running:
                    startedAt: "2021-09-27T08:04:16Z"
                taskSpec:
                  steps:
                  - image: ubuntu
                    name: write
                    resources: {}
                    script: echo bar > $(workspaces.task-ws.path)/foo
                  workspaces:
                  - name: task-ws
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/affinity-assistant: affinity-assistant-6e14bbf480
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: volume-from-template
            tekton.dev/pipelineRun: run-with-template-b26jc
            tekton.dev/pipelineTask: writer
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/affinity-assistant: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"cc545fec-ffa5-4564-8f12-9373c599b3f2"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:workspaces: {}
                f:timeout: {}
                f:workspaces: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:workspaces: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:17Z"
          name: run-with-template-b26jc-writer-p59df
          namespace: arendelle-2zszn
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: run-with-template-b26jc
            uid: cc545fec-ffa5-4564-8f12-9373c599b3f2
          resourceVersion: "5508105"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-2zszn/taskruns/run-with-template-b26jc-writer-p59df
          uid: 3625e7ca-2c91-4ed7-8d93-cffb20c49c05
        spec:
          resources: {}
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: echo bar > $(workspaces.task-ws.path)/foo
            workspaces:
            - name: task-ws
          timeout: 1h0m0s
          workspaces:
          - name: task-ws
            persistentVolumeClaim:
              claimName: pvc-f774b7cfa6
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:17Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: run-with-template-b26jc-writer-p59df-pod-5kmc6
          startTime: "2021-09-27T08:02:13Z"
          steps:
          - container: step-write
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: write
            running:
              startedAt: "2021-09-27T08:04:16Z"
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: echo bar > $(workspaces.task-ws.path)/foo
            workspaces:
            - name: task-ws
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 0d5fbaeeb072ed9fa861f0f87bc667876f2552a87e436a361a1439d0b8d890d6
            cni.projectcalico.org/podIP: 172.20.64.39/32
            cni.projectcalico.org/podIPs: 172.20.64.39/32
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: affinity-assistant-6e14bbf480-
          labels:
            app.kubernetes.io/component: affinity-assistant
            app.kubernetes.io/instance: affinity-assistant-6e14bbf480
            controller-revision-hash: affinity-assistant-6e14bbf480-f754b56b5
            statefulset.kubernetes.io/pod-name: affinity-assistant-6e14bbf480-0
            tekton.dev/pipeline: volume-from-template
            tekton.dev/pipelineRun: run-with-template-b26jc
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/component: {}
                  f:app.kubernetes.io/instance: {}
                  f:controller-revision-hash: {}
                  f:statefulset.kubernetes.io/pod-name: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"7ddaed28-094d-4999-b9a4-4666cc185f85"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:affinity:
                  .: {}
                  f:podAntiAffinity:
                    .: {}
                    f:preferredDuringSchedulingIgnoredDuringExecution: {}
                f:containers:
                  k:{"name":"affinity-assistant"}:
                    .: {}
                    f:args: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources:
                      .: {}
                      f:limits:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                      f:requests:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:hostname: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"workspace"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
            manager: kube-controller-manager
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:03:51Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.39"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:03:59Z"
          name: affinity-assistant-6e14bbf480-0
          namespace: arendelle-2zszn
          ownerReferences:
          - apiVersion: apps/v1
            blockOwnerDeletion: true
            controller: true
            kind: StatefulSet
            name: affinity-assistant-6e14bbf480
            uid: 7ddaed28-094d-4999-b9a4-4666cc185f85
          resourceVersion: "5507753"
          selfLink: /api/v1/namespaces/arendelle-2zszn/pods/affinity-assistant-6e14bbf480-0
          uid: 07cc7afa-aabb-4d74-b4d8-9e74fdf3ffdd
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/component: affinity-assistant
                  topologyKey: kubernetes.io/hostname
                weight: 100
          containers:
          - args:
            - tekton_run_indefinitely
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/nop-8eac7c133edad5df719dc37b36b62482@sha256:c6acf12a6d572eabade934756e3125bd20ca2c3ebf4018127db0b523b2693545
            imagePullPolicy: IfNotPresent
            name: affinity-assistant
            resources:
              limits:
                cpu: 50m
                memory: 100Mi
              requests:
                cpu: 50m
                memory: 100Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cwfhz
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          hostname: affinity-assistant-6e14bbf480-0
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - name: workspace
            persistentVolumeClaim:
              claimName: pvc-f774b7cfa6
          - name: default-token-cwfhz
            secret:
              defaultMode: 420
              secretName: default-token-cwfhz
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:59Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:59Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://0b7f5e89ebab8f63c46803b191b0d3a7cb4fcc595d6722aa22dbf10a33330c17
            image: sha256:87b9f08a34d73c52991ce182ab10ff3d2cb33bcd19630652bc597dd62a1e0db8
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/nop-8eac7c133edad5df719dc37b36b62482@sha256:c6acf12a6d572eabade934756e3125bd20ca2c3ebf4018127db0b523b2693545
            lastState: {}
            name: affinity-assistant
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:03:55Z"
          hostIP: 192.168.100.196
          phase: Running
          podIP: 172.20.64.39
          podIPs:
          - ip: 172.20.64.39
          qosClass: Guaranteed
          startTime: "2021-09-27T08:03:31Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 5cb20c8a1973bb364cce80723408b46f7508802794ca1a9fa9af2fbac492e0cc
            cni.projectcalico.org/podIP: 172.20.64.37/32
            cni.projectcalico.org/podIPs: 172.20.64.37/32
            pipeline.tekton.dev/affinity-assistant: affinity-assistant-6e14bbf480
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:13Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: volume-from-template
            tekton.dev/pipelineRun: run-with-template-b26jc
            tekton.dev/pipelineTask: writer
            tekton.dev/taskRun: run-with-template-b26jc-writer-p59df
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  .: {}
                  k:{"type":"PodScheduled"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
            manager: kube-scheduler
            operation: Update
            time: "2021-09-27T08:03:31Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:03:51Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/affinity-assistant: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"3625e7ca-2c91-4ed7-8d93-cffb20c49c05"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:affinity:
                  .: {}
                  f:podAffinity:
                    .: {}
                    f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:containers:
                  k:{"name":"step-write"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace/task-ws"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"ws-gqzr9"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:17Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.37"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:53Z"
          name: run-with-template-b26jc-writer-p59df-pod-5kmc6
          namespace: arendelle-2zszn
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: run-with-template-b26jc-writer-p59df
            uid: 3625e7ca-2c91-4ed7-8d93-cffb20c49c05
          resourceVersion: "5508379"
          selfLink: /api/v1/namespaces/arendelle-2zszn/pods/run-with-template-b26jc-writer-p59df-pod-5kmc6
          uid: 0523b8f7-364c-46be-9253-63b13b7262c7
        spec:
          activeDeadlineSeconds: 5400
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: affinity-assistant
                    app.kubernetes.io/instance: affinity-assistant-6e14bbf480
                topologyKey: kubernetes.io/hostname
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-t8x6k
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /workspace/task-ws
              name: ws-gqzr9
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cwfhz
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cwfhz
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-t8x6k"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKZWNobyBiYXIgPiAvd29ya3NwYWNlL3Rhc2std3MvZm9v
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-cwfhz
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: ws-gqzr9
            persistentVolumeClaim:
              claimName: pvc-f774b7cfa6
          - name: default-token-cwfhz
            secret:
              defaultMode: 420
              secretName: default-token-cwfhz
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:05Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:30Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:30Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://9512f8322538ae99ceef9a26d7f66e2e08e6a4d6be9d14fa9c4d99622951ef93
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://9512f8322538ae99ceef9a26d7f66e2e08e6a4d6be9d14fa9c4d99622951ef93
                exitCode: 0
                finishedAt: "2021-09-27T08:04:23Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:23.035Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:04:16Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://6f322ec16a5addc20305a6200c12fd21ea66e27293b0821817bfbff380807d8c
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://6f322ec16a5addc20305a6200c12fd21ea66e27293b0821817bfbff380807d8c
                exitCode: 0
                finishedAt: "2021-09-27T08:03:55Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:54Z"
          - containerID: docker://b81930c1f484989ac99f8ebc0935ab6cefddaba9610f0b44439516ce2bc504dd
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://b81930c1f484989ac99f8ebc0935ab6cefddaba9610f0b44439516ce2bc504dd
                exitCode: 0
                finishedAt: "2021-09-27T08:04:04Z"
                reason: Completed
                startedAt: "2021-09-27T08:04:04Z"
          phase: Succeeded
          podIP: 172.20.64.37
          podIPs:
          - ip: 172.20.64.37
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-2zszn ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/taskruns/unnamed-steps
    build_logs.go:35: Could not get logs for pod unnamed-steps-zmz6w-pod-q7xvl: container "step-unnamed-0" in pod "unnamed-steps-zmz6w-pod-q7xvl" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: optional-workspaces-
          generation: 1
          labels:
            tekton.dev/pipeline: optional-workspaces-j8vv7
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                  f:workspaces: {}
                f:workspaces: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                  f:workspaces: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:optional-workspaces-j8vv7-print-bound-state-tqsx8:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:steps: {}
                  f:optional-workspaces-j8vv7-run-js-5lk5z:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:steps: {}
                        f:workspaces: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:30Z"
          name: optional-workspaces-j8vv7
          namespace: arendelle-dpb9p
          resourceVersion: "5508331"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dpb9p/pipelineruns/optional-workspaces-j8vv7
          uid: 15ef7017-949d-4731-ad52-90beb9098f1d
        spec:
          pipelineSpec:
            tasks:
            - name: print-bound-state
              params:
              - name: values
                value:
                - 'Was a prelaunch workspace provided? '
                - $(workspaces.prelaunch.bound)
                - |2+
        
                - 'Was a launch workspace provided? '
                - $(workspaces.launch.bound)
                - |2+
        
              taskRef:
                kind: Task
                name: echo
            - name: run-js
              runAfter:
              - print-bound-state
              taskRef:
                kind: Task
                name: run-js
              workspaces:
              - name: prelaunch
                workspace: prelaunch
              - name: launch
                workspace: launch
            workspaces:
            - description: |
                The program to run. Must provide a main.js at its root.
              name: launch
            - description: |
                Prelaunch program to run before the launch program. Use this
                to set up any environment-specific requirements. Must provide
                an init.js file at its root.
              name: prelaunch
              optional: true
          serviceAccountName: default
          timeout: 1h0m0s
          workspaces:
          - configMap:
              name: example-source-code-configmap
            name: launch
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:09Z"
            message: 'Tasks Completed: 1 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            tasks:
            - name: print-bound-state
              params:
              - name: values
                value:
                - 'Was a prelaunch workspace provided? '
                - $(workspaces.prelaunch.bound)
                - |2+
        
                - 'Was a launch workspace provided? '
                - $(workspaces.launch.bound)
                - |2+
        
              taskRef:
                kind: Task
                name: echo
            - name: run-js
              runAfter:
              - print-bound-state
              taskRef:
                kind: Task
                name: run-js
              workspaces:
              - name: prelaunch
                workspace: prelaunch
              - name: launch
                workspace: launch
            workspaces:
            - description: |
                The program to run. Must provide a main.js at its root.
              name: launch
            - description: |
                Prelaunch program to run before the launch program. Use this
                to set up any environment-specific requirements. Must provide
                an init.js file at its root.
              name: prelaunch
              optional: true
          startTime: "2021-09-27T08:02:10Z"
          taskRuns:
            optional-workspaces-j8vv7-print-bound-state-tqsx8:
              pipelineTaskName: print-bound-state
              status:
                completionTime: "2021-09-27T08:04:09Z"
                conditions:
                - lastTransitionTime: "2021-09-27T08:04:09Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: optional-workspaces-j8vv7-print-bound-state-tqsx8-pod-b6nph
                startTime: "2021-09-27T08:02:13Z"
                steps:
                - container: step-unnamed-0
                  imageID: docker-pullable://192.168.143.246:5000/alpine@sha256:9bea59997a84beb47a8cc7ddb11abc957b141e8160852aa93b4cf60659016b53
                  name: unnamed-0
                  terminated:
                    containerID: docker://f3864e9d848e7dc8a6c0ef039f2aabc1f13c0ad675a8461b24f26cc95c2a3445
                    exitCode: 0
                    finishedAt: "2021-09-27T08:04:06Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:04:05Z"
                taskSpec:
                  params:
                  - name: values
                    type: array
                  steps:
                  - args:
                    - $(params.values[*])
                    command:
                    - echo
                    image: alpine
                    name: ""
                    resources: {}
            optional-workspaces-j8vv7-run-js-5lk5z:
              pipelineTaskName: run-js
              status:
                conditions:
                - lastTransitionTime: "2021-09-27T08:04:30Z"
                  message: Not all Steps in the Task have finished executing
                  reason: Running
                  status: Unknown
                  type: Succeeded
                podName: optional-workspaces-j8vv7-run-js-5lk5z-pod-gkx92
                startTime: "2021-09-27T08:04:10Z"
                steps:
                - container: step-unnamed-0
                  imageID: docker-pullable://node@sha256:8c94a0291133e16b92be5c667e0bc35930940dfa7be544fb142e25f8e4510a45
                  name: unnamed-0
                  running:
                    startedAt: "2021-09-27T08:04:27Z"
                taskSpec:
                  steps:
                  - image: node:lts-alpine3.11
                    name: ""
                    resources: {}
                    script: |
                      #!/usr/bin/env sh
                      if [ $(workspaces.prelaunch.bound) == "true" ] ; then
                        node "$(workspaces.prelaunch.path)/init.js"
                      else
                        echo "Skipping prelaunch."
                      fi
                      if [ -f "$(workspaces.launch.path)/main.js" ] ; then
                        node "$(workspaces.launch.path)/main.js"
                      else
                        echo "Error: missing main.js file in launch workspace!"
                        exit 1
                      fi
                  workspaces:
                  - name: prelaunch
                    optional: true
                  - name: launch
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: echo
          namespace: arendelle-dpb9p
          resourceVersion: "5506216"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dpb9p/tasks/echo
          uid: e158d8f6-3207-4587-b12c-958e6da20d7c
        spec:
          params:
          - name: values
            type: array
          steps:
          - args:
            - $(params.values[*])
            command:
            - echo
            image: alpine
            name: ""
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
                f:workspaces: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: run-js
          namespace: arendelle-dpb9p
          resourceVersion: "5506203"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dpb9p/tasks/run-js
          uid: c2919d1f-4d1d-48cc-849a-1384b4869ab3
        spec:
          steps:
          - image: node:lts-alpine3.11
            name: ""
            resources: {}
            script: |
              #!/usr/bin/env sh
              if [ $(workspaces.prelaunch.bound) == "true" ] ; then
                node "$(workspaces.prelaunch.path)/init.js"
              else
                echo "Skipping prelaunch."
              fi
              if [ -f "$(workspaces.launch.path)/main.js" ] ; then
                node "$(workspaces.launch.path)/main.js"
              else
                echo "Error: missing main.js file in launch workspace!"
                exit 1
              fi
          workspaces:
          - name: prelaunch
            optional: true
          - name: launch
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:10Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: optional-workspaces-j8vv7
            tekton.dev/pipelineRun: optional-workspaces-j8vv7
            tekton.dev/pipelineTask: print-bound-state
            tekton.dev/task: echo
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"15ef7017-949d-4731-ad52-90beb9098f1d"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:09Z"
          name: optional-workspaces-j8vv7-print-bound-state-tqsx8
          namespace: arendelle-dpb9p
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: optional-workspaces-j8vv7
            uid: 15ef7017-949d-4731-ad52-90beb9098f1d
          resourceVersion: "5507937"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dpb9p/taskruns/optional-workspaces-j8vv7-print-bound-state-tqsx8
          uid: 362424ea-dc61-41b9-8f71-11337deb5461
        spec:
          params:
          - name: values
            value:
            - 'Was a prelaunch workspace provided? '
            - "false"
            - |2+
        
            - 'Was a launch workspace provided? '
            - "true"
            - |2+
        
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: Task
            name: echo
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:04:09Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:09Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: optional-workspaces-j8vv7-print-bound-state-tqsx8-pod-b6nph
          startTime: "2021-09-27T08:02:13Z"
          steps:
          - container: step-unnamed-0
            imageID: docker-pullable://192.168.143.246:5000/alpine@sha256:9bea59997a84beb47a8cc7ddb11abc957b141e8160852aa93b4cf60659016b53
            name: unnamed-0
            terminated:
              containerID: docker://f3864e9d848e7dc8a6c0ef039f2aabc1f13c0ad675a8461b24f26cc95c2a3445
              exitCode: 0
              finishedAt: "2021-09-27T08:04:06Z"
              reason: Completed
              startedAt: "2021-09-27T08:04:05Z"
          taskSpec:
            params:
            - name: values
              type: array
            steps:
            - args:
              - $(params.values[*])
              command:
              - echo
              image: alpine
              name: ""
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:04:09Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: optional-workspaces-j8vv7
            tekton.dev/pipelineRun: optional-workspaces-j8vv7
            tekton.dev/pipelineTask: run-js
            tekton.dev/task: run-js
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"15ef7017-949d-4731-ad52-90beb9098f1d"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
                f:workspaces: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:workspaces: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:30Z"
          name: optional-workspaces-j8vv7-run-js-5lk5z
          namespace: arendelle-dpb9p
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: optional-workspaces-j8vv7
            uid: 15ef7017-949d-4731-ad52-90beb9098f1d
          resourceVersion: "5508325"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dpb9p/taskruns/optional-workspaces-j8vv7-run-js-5lk5z
          uid: a8077be2-e38e-4bc1-ab3a-d5bbd849a309
        spec:
          resources: {}
          serviceAccountName: default
          taskRef:
            kind: Task
            name: run-js
          timeout: 1h0m0s
          workspaces:
          - configMap:
              name: example-source-code-configmap
            name: launch
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:30Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: optional-workspaces-j8vv7-run-js-5lk5z-pod-gkx92
          startTime: "2021-09-27T08:04:10Z"
          steps:
          - container: step-unnamed-0
            imageID: docker-pullable://node@sha256:8c94a0291133e16b92be5c667e0bc35930940dfa7be544fb142e25f8e4510a45
            name: unnamed-0
            running:
              startedAt: "2021-09-27T08:04:27Z"
          taskSpec:
            steps:
            - image: node:lts-alpine3.11
              name: ""
              resources: {}
              script: |
                #!/usr/bin/env sh
                if [ $(workspaces.prelaunch.bound) == "true" ] ; then
                  node "$(workspaces.prelaunch.path)/init.js"
                else
                  echo "Skipping prelaunch."
                fi
                if [ -f "$(workspaces.launch.path)/main.js" ] ; then
                  node "$(workspaces.launch.path)/main.js"
                else
                  echo "Error: missing main.js file in launch workspace!"
                  exit 1
                fi
            workspaces:
            - name: prelaunch
              optional: true
            - name: launch
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 234f58da4c5370665a62b06adf4cbe737a0a4aab4de1214d5c2f5227dd985a1c
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:15Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: optional-workspaces-j8vv7
            tekton.dev/pipelineRun: optional-workspaces-j8vv7
            tekton.dev/pipelineTask: print-bound-state
            tekton.dev/task: echo
            tekton.dev/taskRun: optional-workspaces-j8vv7-print-bound-state-tqsx8
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"362424ea-dc61-41b9-8f71-11337deb5461"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:02Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.6"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:09Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:04:10Z"
          name: optional-workspaces-j8vv7-print-bound-state-tqsx8-pod-b6nph
          namespace: arendelle-dpb9p
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: optional-workspaces-j8vv7-print-bound-state-tqsx8
            uid: 362424ea-dc61-41b9-8f71-11337deb5461
          resourceVersion: "5507959"
          selfLink: /api/v1/namespaces/arendelle-dpb9p/pods/optional-workspaces-j8vv7-print-bound-state-tqsx8-pod-b6nph
          uid: 4a5c2760-544f-4041-a3ec-527365767cb1
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - echo
            - --
            - 'Was a prelaunch workspace provided? '
            - "false"
            - |2+
        
            - 'Was a launch workspace provided? '
            - "true"
            - |2+
        
            command:
            - /tekton/bin/entrypoint
            image: alpine
            imagePullPolicy: Always
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lt8p9
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lt8p9
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-lt8p9
            secret:
              defaultMode: 420
              secretName: default-token-lt8p9
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:49Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:09Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:09Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://f3864e9d848e7dc8a6c0ef039f2aabc1f13c0ad675a8461b24f26cc95c2a3445
            image: 192.168.143.246:5000/alpine:latest
            imageID: docker-pullable://192.168.143.246:5000/alpine@sha256:9bea59997a84beb47a8cc7ddb11abc957b141e8160852aa93b4cf60659016b53
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://f3864e9d848e7dc8a6c0ef039f2aabc1f13c0ad675a8461b24f26cc95c2a3445
                exitCode: 0
                finishedAt: "2021-09-27T08:04:06Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:05.775Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:03:58Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://ec2e3c082cf6552132aff219a389ccee8bfa81aac36bc2187c7ee2c17bb49aa2
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://ec2e3c082cf6552132aff219a389ccee8bfa81aac36bc2187c7ee2c17bb49aa2
                exitCode: 0
                finishedAt: "2021-09-27T08:03:47Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:46Z"
          phase: Succeeded
          podIP: 172.20.64.6
          podIPs:
          - ip: 172.20.64.6
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 800587bf886138db3639c0cf17478c758369ecf804923ed5582b7691a356ef44
            cni.projectcalico.org/podIP: 172.20.64.60/32
            cni.projectcalico.org/podIPs: 172.20.64.60/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:04:09Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: optional-workspaces-j8vv7
            tekton.dev/pipelineRun: optional-workspaces-j8vv7
            tekton.dev/pipelineTask: run-js
            tekton.dev/task: run-js
            tekton.dev/taskRun: optional-workspaces-j8vv7-run-js-5lk5z
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:04:17Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.60"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:28Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"a8077be2-e38e-4bc1-ab3a-d5bbd849a309"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace/launch"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"ws-rp5vt"}:
                    .: {}
                    f:configMap:
                      .: {}
                      f:defaultMode: {}
                      f:name: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:30Z"
          name: optional-workspaces-j8vv7-run-js-5lk5z-pod-gkx92
          namespace: arendelle-dpb9p
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: optional-workspaces-j8vv7-run-js-5lk5z
            uid: a8077be2-e38e-4bc1-ab3a-d5bbd849a309
          resourceVersion: "5508321"
          selfLink: /api/v1/namespaces/arendelle-dpb9p/pods/optional-workspaces-j8vv7-run-js-5lk5z-pod-gkx92
          uid: 1df07b7d-833a-45ee-913a-ddb750baa7af
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-5zkgf
            - --
            command:
            - /tekton/bin/entrypoint
            image: node:lts-alpine3.11
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /workspace/launch
              name: ws-rp5vt
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lt8p9
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lt8p9
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-5zkgf"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyBmYWxzZSA9PSAidHJ1ZSIgXSA7IHRoZW4KICBub2RlICIvaW5pdC5qcyIKZWxzZQogIGVjaG8gIlNraXBwaW5nIHByZWxhdW5jaC4iCmZpCmlmIFsgLWYgIi93b3Jrc3BhY2UvbGF1bmNoL21haW4uanMiIF0gOyB0aGVuCiAgbm9kZSAiL3dvcmtzcGFjZS9sYXVuY2gvbWFpbi5qcyIKZWxzZQogIGVjaG8gIkVycm9yOiBtaXNzaW5nIG1haW4uanMgZmlsZSBpbiBsYXVuY2ggd29ya3NwYWNlISIKICBleGl0IDEKZmkK
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lt8p9
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - configMap:
              defaultMode: 420
              name: example-source-code-configmap
            name: ws-rp5vt
          - name: default-token-lt8p9
            secret:
              defaultMode: 420
              secretName: default-token-lt8p9
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:24Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:28Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:28Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:09Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://bf318db2bb8bd45c86780402e45724876bd818dbcd5f813031060d56b49b6a47
            image: node:lts-alpine3.11
            imageID: docker-pullable://node@sha256:8c94a0291133e16b92be5c667e0bc35930940dfa7be544fb142e25f8e4510a45
            lastState: {}
            name: step-unnamed-0
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:27Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://bf7c1c0660437f15934c521e501500bb539097b8f7172790726f929453f1c20e
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://bf7c1c0660437f15934c521e501500bb539097b8f7172790726f929453f1c20e
                exitCode: 0
                finishedAt: "2021-09-27T08:04:19Z"
                reason: Completed
                startedAt: "2021-09-27T08:04:19Z"
          - containerID: docker://75a2c2c243604ff478cf68300e5f5429eeb597c1100d72b299c715e1e8b8dc9b
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://75a2c2c243604ff478cf68300e5f5429eeb597c1100d72b299c715e1e8b8dc9b
                exitCode: 0
                finishedAt: "2021-09-27T08:04:22Z"
                reason: Completed
                startedAt: "2021-09-27T08:04:22Z"
          phase: Running
          podIP: 172.20.64.60
          podIPs:
          - ip: 172.20.64.60
          qosClass: BestEffort
          startTime: "2021-09-27T08:04:10Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-dpb9p ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/pipelineruns/output-pipelinerun
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: output-pipeline
          namespace: arendelle-pj4z2
          resourceVersion: "5506200"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-pj4z2/pipelines/output-pipeline
          uid: 3d41fb79-d3a2-4583-b367-72473ee8f98a
        spec:
          resources:
          - name: source-repo
            type: git
          tasks:
          - name: first-create-file
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              outputs:
              - name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: create-file
          - name: then-check
            params:
            - name: args
              value:
              - -c
              - cat /workspace/newworkspace/stuff
            resources:
              inputs:
              - from:
                - first-create-file
                name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: check-stuff-file-exists
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: skaffold-git-output-pipelinerun
          namespace: arendelle-pj4z2
          resourceVersion: "5506184"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-pj4z2/pipelineresources/skaffold-git-output-pipelinerun
          uid: 703172a2-c1ea-4140-9a3c-0162ab26a370
        spec:
          params:
          - name: revision
            value: v0.32.0
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          type: git
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          labels:
            tekton.dev/pipeline: output-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:output-pipeline-run-first-create-file-vdgkp:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:03:54Z"
          name: output-pipeline-run
          namespace: arendelle-pj4z2
          resourceVersion: "5507674"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-pj4z2/pipelineruns/output-pipeline-run
          uid: 9f34d636-eab9-4fa6-ba43-f74ac42d4df4
        spec:
          pipelineRef:
            name: output-pipeline
          resources:
          - name: source-repo
            resourceRef:
              name: skaffold-git-output-pipelinerun
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:02:09Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 2, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            resources:
            - name: source-repo
              type: git
            tasks:
            - name: first-create-file
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                outputs:
                - name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: create-file
            - name: then-check
              params:
              - name: args
                value:
                - -c
                - cat /workspace/newworkspace/stuff
              resources:
                inputs:
                - from:
                  - first-create-file
                  name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: check-stuff-file-exists
          startTime: "2021-09-27T08:02:09Z"
          taskRuns:
            output-pipeline-run-first-create-file-vdgkp:
              pipelineTaskName: first-create-file
              status:
                conditions:
                - lastTransitionTime: "2021-09-27T08:03:54Z"
                  message: 'pod status "Ready":"False"; message: "containers with unready
                    status: [step-create-dir-workspace-b6ztt step-git-source-workspace-zhxpr
                    step-read-docs-old step-write-new-stuff step-source-mkdir-workspace-7kvhc
                    step-source-copy-workspace-drmwx]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: output-pipeline-run-first-create-file-vdgkp-pod-v22nq
                startTime: "2021-09-27T08:02:12Z"
                steps:
                - container: step-create-dir-workspace-b6ztt
                  name: create-dir-workspace-b6ztt
                  waiting:
                    reason: PodInitializing
                - container: step-git-source-workspace-zhxpr
                  name: git-source-workspace-zhxpr
                  waiting:
                    reason: PodInitializing
                - container: step-read-docs-old
                  name: read-docs-old
                  waiting:
                    reason: PodInitializing
                - container: step-write-new-stuff
                  name: write-new-stuff
                  waiting:
                    reason: PodInitializing
                - container: step-source-mkdir-workspace-7kvhc
                  name: source-mkdir-workspace-7kvhc
                  waiting:
                    reason: PodInitializing
                - container: step-source-copy-workspace-drmwx
                  name: source-copy-workspace-drmwx
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  resources:
                    inputs:
                    - name: workspace
                      targetPath: damnworkspace
                      type: git
                    outputs:
                    - name: workspace
                      type: git
                  steps:
                  - args:
                    - -c
                    - ls -la /workspace/damnworkspace/docs/README.md
                    command:
                    - /bin/bash
                    image: ubuntu
                    name: read-docs-old
                    resources: {}
                  - args:
                    - -c
                    - ln -s /workspace/damnworkspace /workspace/output/workspace && echo some
                      stuff > /workspace/output/workspace/stuff
                    command:
                    - bash
                    image: ubuntu
                    name: write-new-stuff
                    resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: check-stuff-file-exists
          namespace: arendelle-pj4z2
          resourceVersion: "5506193"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-pj4z2/tasks/check-stuff-file-exists
          uid: 11f607a9-4e63-4bb8-8b09-cad2d0a5e985
        spec:
          params:
          - name: args
            type: array
          resources:
            inputs:
            - name: workspace
              targetPath: newworkspace
              type: git
          steps:
          - args:
            - $(inputs.params.args[*])
            command:
            - /bin/bash
            image: ubuntu
            name: read
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:outputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: create-file
          namespace: arendelle-pj4z2
          resourceVersion: "5506189"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-pj4z2/tasks/create-file
          uid: fa36baa3-6fd0-4f0b-a3a2-c4e80f081a39
        spec:
          resources:
            inputs:
            - name: workspace
              targetPath: damnworkspace
              type: git
            outputs:
            - name: workspace
              type: git
          steps:
          - args:
            - -c
            - ls -la /workspace/damnworkspace/docs/README.md
            command:
            - /bin/bash
            image: ubuntu
            name: read-docs-old
            resources: {}
          - args:
            - -c
            - ln -s /workspace/damnworkspace /workspace/output/workspace && echo some stuff
              > /workspace/output/workspace/stuff
            command:
            - bash
            image: ubuntu
            name: write-new-stuff
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: output-pipeline
            tekton.dev/pipelineRun: output-pipeline-run
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-file
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"9f34d636-eab9-4fa6-ba43-f74ac42d4df4"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:03:54Z"
          name: output-pipeline-run-first-create-file-vdgkp
          namespace: arendelle-pj4z2
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: output-pipeline-run
            uid: 9f34d636-eab9-4fa6-ba43-f74ac42d4df4
          resourceVersion: "5507668"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-pj4z2/taskruns/output-pipeline-run-first-create-file-vdgkp
          uid: 981e7e83-57d9-41d0-8f13-6795efaf6e89
        spec:
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-output-pipelinerun
            outputs:
            - name: workspace
              paths:
              - /pvc/first-create-file/workspace
              resourceRef:
                name: skaffold-git-output-pipelinerun
          serviceAccountName: default
          taskRef:
            kind: Task
            name: create-file
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:03:54Z"
            message: 'pod status "Ready":"False"; message: "containers with unready status:
              [step-create-dir-workspace-b6ztt step-git-source-workspace-zhxpr step-read-docs-old
              step-write-new-stuff step-source-mkdir-workspace-7kvhc step-source-copy-workspace-drmwx]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: output-pipeline-run-first-create-file-vdgkp-pod-v22nq
          startTime: "2021-09-27T08:02:12Z"
          steps:
          - container: step-create-dir-workspace-b6ztt
            name: create-dir-workspace-b6ztt
            waiting:
              reason: PodInitializing
          - container: step-git-source-workspace-zhxpr
            name: git-source-workspace-zhxpr
            waiting:
              reason: PodInitializing
          - container: step-read-docs-old
            name: read-docs-old
            waiting:
              reason: PodInitializing
          - container: step-write-new-stuff
            name: write-new-stuff
            waiting:
              reason: PodInitializing
          - container: step-source-mkdir-workspace-7kvhc
            name: source-mkdir-workspace-7kvhc
            waiting:
              reason: PodInitializing
          - container: step-source-copy-workspace-drmwx
            name: source-copy-workspace-drmwx
            waiting:
              reason: PodInitializing
          taskSpec:
            resources:
              inputs:
              - name: workspace
                targetPath: damnworkspace
                type: git
              outputs:
              - name: workspace
                type: git
            steps:
            - args:
              - -c
              - ls -la /workspace/damnworkspace/docs/README.md
              command:
              - /bin/bash
              image: ubuntu
              name: read-docs-old
              resources: {}
            - args:
              - -c
              - ln -s /workspace/damnworkspace /workspace/output/workspace && echo some stuff
                > /workspace/output/workspace/stuff
              command:
              - bash
              image: ubuntu
              name: write-new-stuff
              resources: {}
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: be47cfb2cc1266fcbb8c41513f954549ba4e8f12a90a99509842b87d3358baa1
            cni.projectcalico.org/podIP: 172.20.64.22/32
            cni.projectcalico.org/podIPs: 172.20.64.22/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:13Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: output-pipeline
            tekton.dev/pipelineRun: output-pipeline-run
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-file
            tekton.dev/taskRun: output-pipeline-run-first-create-file-vdgkp
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"981e7e83-57d9-41d0-8f13-6795efaf6e89"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-create-dir-workspace-b6ztt"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-zhxpr"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-read-docs-old"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-copy-workspace-drmwx"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-mkdir-workspace-7kvhc"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-write-new-stuff"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"output-pipeline-run-pvc"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-4"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-5"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:02:13Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:03:47Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.22"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:39Z"
          name: output-pipeline-run-first-create-file-vdgkp-pod-v22nq
          namespace: arendelle-pj4z2
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: output-pipeline-run-first-create-file-vdgkp
            uid: 981e7e83-57d9-41d0-8f13-6795efaf6e89
          resourceVersion: "5508347"
          selfLink: /api/v1/namespaces/arendelle-pj4z2/pods/output-pipeline-run-first-create-file-vdgkp-pod-v22nq
          uid: 53946f0c-13fb-4906-bd60-918d287271a0
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-workspace-b6ztt
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-workspace-b6ztt
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lkpc6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-zhxpr
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/damnworkspace
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-zhxpr
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lkpc6
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-read-docs-old
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /bin/bash
            - --
            - -c
            - ls -la /workspace/damnworkspace/docs/README.md
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-read-docs-old
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lkpc6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write-new-stuff
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - bash
            - --
            - -c
            - ln -s /workspace/damnworkspace /workspace/output/workspace && echo some stuff
              > /workspace/output/workspace/stuff
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write-new-stuff
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lkpc6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/3
            - -post_file
            - /tekton/run/4
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-mkdir-workspace-7kvhc
            - -step_metadata_dir_link
            - /tekton/steps/4
            - -entrypoint
            - mkdir
            - --
            - -p
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-mkdir-workspace-7kvhc
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: output-pipeline-run-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-4
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lkpc6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/4
            - -post_file
            - /tekton/run/5
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-copy-workspace-drmwx
            - -step_metadata_dir_link
            - /tekton/steps/5
            - -entrypoint
            - cp
            - --
            - -r
            - /workspace/output/workspace/.
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-copy-workspace-drmwx
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: output-pipeline-run-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-5
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lkpc6
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-lkpc6
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-4
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-5
          - name: output-pipeline-run-pvc
            persistentVolumeClaim:
              claimName: output-pipeline-run-pvc
          - name: default-token-lkpc6
            secret:
              defaultMode: 420
              secretName: default-token-lkpc6
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:54Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:30Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:30Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://993073b5585ca388a52f815b714526b90eb64524a290869d62b2bf35099313b5
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-workspace-b6ztt
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:03:57Z"
          - containerID: docker://596dcbae0e18e01a95db198447baa4ff0d9281ab1a2964baf2578c926c5f0e25
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-zhxpr
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:00Z"
          - containerID: docker://28f105783a6c2cd2bec5fdd6eb463eafd7679ab16fe7b8f2001d5aea394ad97e
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-read-docs-old
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:08Z"
          - containerID: docker://7a30fce3129626bac2128ce2b5d10ca9cff536c17e22401b7340e38dff4f1c88
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-copy-workspace-drmwx
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:28Z"
          - containerID: docker://653df1e8de8fe679a35d600c32cdcf45416377257923247df3e79076c9fa0caf
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-mkdir-workspace-7kvhc
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:26Z"
          - containerID: docker://494ff81b6e966f08a495da625e96c07232c355644ffc46cace825d3fe645ee0e
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write-new-stuff
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:24Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://878d92045c87cb591cf2e9f68210e1e2bb96f192e2c5131b1c152dfa28989394
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://878d92045c87cb591cf2e9f68210e1e2bb96f192e2c5131b1c152dfa28989394
                exitCode: 0
                finishedAt: "2021-09-27T08:03:49Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:49Z"
          phase: Running
          podIP: 172.20.64.22
          podIPs:
          - ip: 172.20.64.22
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-pj4z2 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
    init_test.go:135: Create namespace arendelle-h8rd2 to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:04:28Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:04:28Z"
          name: condition-pipeline
          namespace: arendelle-hwgqd
          resourceVersion: "5508279"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-hwgqd/pipelines/condition-pipeline
          uid: 6e3b633d-7871-4eeb-a82a-400212deab1d
        spec:
          params:
          - name: one
            type: string
          - name: two
            type: string
          tasks:
          - conditions:
            - conditionRef: is-equal
              params:
              - name: left
                value: "1"
              - name: right
                value: $(params.one)
            - conditionRef: is-equal
              params:
              - name: left
                value: "1"
              - name: right
                value: $(params.two)
            name: process
            taskRef:
              kind: Task
              name: run
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:04:28Z"
          generation: 1
          labels:
            tekton.dev/pipeline: condition-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:04:28Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:condition-pipelinerun-process-pmwpb:
                    .: {}
                    f:conditionChecks:
                      .: {}
                      f:condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr:
                        .: {}
                        f:conditionName: {}
                        f:status:
                          .: {}
                          f:check: {}
                          f:conditions: {}
                          f:podName: {}
                          f:startTime: {}
                      f:condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6:
                        .: {}
                        f:conditionName: {}
                        f:status:
                          .: {}
                          f:check: {}
                          f:conditions: {}
                          f:podName: {}
                          f:startTime: {}
                    f:pipelineTaskName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:38Z"
          name: condition-pipelinerun
          namespace: arendelle-hwgqd
          resourceVersion: "5508336"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-hwgqd/pipelineruns/condition-pipelinerun
          uid: d6e78828-4581-4af1-93ef-c1b25c6274fa
        spec:
          params:
          - name: one
            value: "1"
          - name: two
            value: "2"
          pipelineRef:
            name: condition-pipeline
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:28Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - name: one
              type: string
            - name: two
              type: string
            tasks:
            - conditions:
              - conditionRef: is-equal
                params:
                - name: left
                  value: "1"
                - name: right
                  value: $(params.one)
              - conditionRef: is-equal
                params:
                - name: left
                  value: "1"
                - name: right
                  value: $(params.two)
              name: process
              taskRef:
                kind: Task
                name: run
          startTime: "2021-09-27T08:04:28Z"
          taskRuns:
            condition-pipelinerun-process-pmwpb:
              conditionChecks:
                condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr:
                  conditionName: is-equal-0
                  status:
                    check: {}
                    conditions:
                    - lastTransitionTime: "2021-09-27T08:04:28Z"
                      message: Pending
                      reason: Pending
                      status: Unknown
                      type: Succeeded
                    podName: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr-pod-zdkgs
                    startTime: "2021-09-27T08:04:28Z"
                condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6:
                  conditionName: is-equal-1
                  status:
                    check: {}
                    conditions:
                    - lastTransitionTime: "2021-09-27T08:04:28Z"
                      message: Pending
                      reason: Pending
                      status: Unknown
                      type: Succeeded
                    podName: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6-pod-dwsnl
                    startTime: "2021-09-27T08:04:28Z"
              pipelineTaskName: process
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:04:28Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:04:28Z"
          name: run
          namespace: arendelle-hwgqd
          resourceVersion: "5508281"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-hwgqd/tasks/run
          uid: dd78653b-32dc-4202-a761-7a300f2a2511
        spec:
          steps:
          - image: ubuntu
            name: echo
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:04:28Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr
            tekton.dev/conditionName: is-equal
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: condition-pipeline
            tekton.dev/pipelineRun: condition-pipelinerun
            tekton.dev/pipelineTask: process
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"d6e78828-4581-4af1-93ef-c1b25c6274fa"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:28Z"
          name: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr
          namespace: arendelle-hwgqd
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: condition-pipelinerun
            uid: d6e78828-4581-4af1-93ef-c1b25c6274fa
          resourceVersion: "5508309"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-hwgqd/taskruns/condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr
          uid: a9f9368c-eb70-4300-b4e9-9108611bdd08
        spec:
          params:
          - name: left
            value: "1"
          - name: right
            value: "1"
          resources: {}
          serviceAccountName: default
          taskSpec:
            params:
            - name: left
              type: string
            - name: right
              type: string
            steps:
            - image: alpine
              name: condition-check-is-equal
              resources: {}
              script: |
                #!/bin/sh
                if [ $(inputs.params.left) = $(inputs.params.right) ]; then
                  echo "$(inputs.params.left) == $(inputs.params.right)"
                  exit 0
                else
                  echo "$(inputs.params.left) != $(inputs.params.right)"
                  exit 1
                fi
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:28Z"
            message: Pending
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr-pod-zdkgs
          startTime: "2021-09-27T08:04:28Z"
          taskSpec:
            params:
            - name: left
              type: string
            - name: right
              type: string
            steps:
            - image: alpine
              name: condition-check-is-equal
              resources: {}
              script: |
                #!/bin/sh
                if [ $(inputs.params.left) = $(inputs.params.right) ]; then
                  echo "$(inputs.params.left) == $(inputs.params.right)"
                  exit 0
                else
                  echo "$(inputs.params.left) != $(inputs.params.right)"
                  exit 1
                fi
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:04:28Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6
            tekton.dev/conditionName: is-equal
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: condition-pipeline
            tekton.dev/pipelineRun: condition-pipelinerun
            tekton.dev/pipelineTask: process
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"d6e78828-4581-4af1-93ef-c1b25c6274fa"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:28Z"
          name: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6
          namespace: arendelle-hwgqd
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: condition-pipelinerun
            uid: d6e78828-4581-4af1-93ef-c1b25c6274fa
          resourceVersion: "5508310"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-hwgqd/taskruns/condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6
          uid: 74e7a587-1bc2-4e83-aaaa-16cdd7ca4dcf
        spec:
          params:
          - name: left
            value: "1"
          - name: right
            value: "2"
          resources: {}
          serviceAccountName: default
          taskSpec:
            params:
            - name: left
              type: string
            - name: right
              type: string
            steps:
            - image: alpine
              name: condition-check-is-equal
              resources: {}
              script: |
                #!/bin/sh
                if [ $(inputs.params.left) = $(inputs.params.right) ]; then
                  echo "$(inputs.params.left) == $(inputs.params.right)"
                  exit 0
                else
                  echo "$(inputs.params.left) != $(inputs.params.right)"
                  exit 1
                fi
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:28Z"
            message: Pending
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6-pod-dwsnl
          startTime: "2021-09-27T08:04:28Z"
          taskSpec:
            params:
            - name: left
              type: string
            - name: right
              type: string
            steps:
            - image: alpine
              name: condition-check-is-equal
              resources: {}
              script: |
                #!/bin/sh
                if [ $(inputs.params.left) = $(inputs.params.right) ]; then
                  echo "$(inputs.params.left) == $(inputs.params.right)"
                  exit 0
                else
                  echo "$(inputs.params.left) != $(inputs.params.right)"
                  exit 1
                fi
        
        ---
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:04:28Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr
            tekton.dev/conditionName: is-equal
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: condition-pipeline
            tekton.dev/pipelineRun: condition-pipelinerun
            tekton.dev/pipelineTask: process
            tekton.dev/taskRun: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"a9f9368c-eb70-4300-b4e9-9108611bdd08"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-condition-check-is-equal"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:28Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:51Z"
          name: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr-pod-zdkgs
          namespace: arendelle-hwgqd
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr
            uid: a9f9368c-eb70-4300-b4e9-9108611bdd08
          resourceVersion: "5508368"
          selfLink: /api/v1/namespaces/arendelle-hwgqd/pods/condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr-pod-zdkgs
          uid: 40cbf6eb-683c-45e3-b73c-26132e81be99
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-condition-check-is-equal
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-kff4v
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine
            imagePullPolicy: Always
            name: step-condition-check-is-equal
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-d2m6q
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-d2m6q
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-kff4v"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCmlmIFsgMSA9IDEgXTsgdGhlbgogIGVjaG8gIjEgPT0gMSIKICBleGl0IDAKZWxzZQogIGVjaG8gIjEgIT0gMSIKICBleGl0IDEKZmkK
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-d2m6q
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-d2m6q
            secret:
              defaultMode: 420
              secretName: default-token-d2m6q
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:30Z"
            message: 'containers with incomplete status: [place-tools place-scripts]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:30Z"
            message: 'containers with unready status: [step-condition-check-is-equal]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:30Z"
            message: 'containers with unready status: [step-condition-check-is-equal]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:28Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: alpine
            imageID: ""
            lastState: {}
            name: step-condition-check-is-equal
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imageID: ""
            lastState: {}
            name: place-tools
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: place-scripts
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          qosClass: BestEffort
          startTime: "2021-09-27T08:04:30Z"
        
        ---
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:04:28Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6
            tekton.dev/conditionName: is-equal
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: condition-pipeline
            tekton.dev/pipelineRun: condition-pipelinerun
            tekton.dev/pipelineTask: process
            tekton.dev/taskRun: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"74e7a587-1bc2-4e83-aaaa-16cdd7ca4dcf"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-condition-check-is-equal"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:28Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:52Z"
          name: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6-pod-dwsnl
          namespace: arendelle-hwgqd
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6
            uid: 74e7a587-1bc2-4e83-aaaa-16cdd7ca4dcf
          resourceVersion: "5508374"
          selfLink: /api/v1/namespaces/arendelle-hwgqd/pods/condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6-pod-dwsnl
          uid: cba8a63d-32ad-4b0f-9bee-38499e777fb6
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-condition-check-is-equal
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-62q44
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine
            imagePullPolicy: Always
            name: step-condition-check-is-equal
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-d2m6q
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-d2m6q
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-62q44"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCmlmIFsgMSA9IDIgXTsgdGhlbgogIGVjaG8gIjEgPT0gMiIKICBleGl0IDAKZWxzZQogIGVjaG8gIjEgIT0gMiIKICBleGl0IDEKZmkK
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-d2m6q
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-d2m6q
            secret:
              defaultMode: 420
              secretName: default-token-d2m6q
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:39Z"
            message: 'containers with incomplete status: [place-tools place-scripts]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:39Z"
            message: 'containers with unready status: [step-condition-check-is-equal]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:39Z"
            message: 'containers with unready status: [step-condition-check-is-equal]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:28Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: alpine
            imageID: ""
            lastState: {}
            name: step-condition-check-is-equal
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imageID: ""
            lastState: {}
            name: place-tools
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: place-scripts
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          qosClass: BestEffort
          startTime: "2021-09-27T08:04:39Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-hwgqd ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    build_logs.go:37: build logs 
        >>> Container step-write:
        + echo bar
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-h8rd2"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: conditional-pipeline
          namespace: arendelle-8qdhc
          resourceVersion: "5506239"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-8qdhc/pipelines/conditional-pipeline
          uid: b49ad3d2-b91e-4405-b5e1-cf8010368370
        spec:
          params:
          - default: README.md
            name: path
            type: string
          resources:
          - name: source-repo
            type: git
          tasks:
          - name: first-create-file
            resources:
              outputs:
              - name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: create-readme-file
          - conditions:
            - conditionRef: file-exists
              params:
              - name: path
                value: $(params.path)
              resources:
              - from:
                - first-create-file
                name: workspace
                resource: source-repo
            name: then-check
            taskRef:
              kind: Task
              name: echo-hello
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: pipeline-git
          namespace: arendelle-8qdhc
          resourceVersion: "5506223"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-8qdhc/pipelineresources/pipeline-git
          uid: e01e2a79-3265-4715-accf-71c3ad403e03
        spec:
          params:
          - name: revision
            value: main
          - name: url
            value: https://github.com/tektoncd/pipeline
          type: git
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          labels:
            tekton.dev/pipeline: conditional-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:conditional-pr-first-create-file-8lqc7:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:outputs: {}
                        f:steps: {}
                  f:conditional-pr-then-check-7g6b5:
                    .: {}
                    f:conditionChecks:
                      .: {}
                      f:conditional-pr-then-check-7g6b5-file-exists-0-nxkrt:
                        .: {}
                        f:conditionName: {}
                    f:pipelineTaskName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:26Z"
          name: conditional-pr
          namespace: arendelle-8qdhc
          resourceVersion: "5508256"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-8qdhc/pipelineruns/conditional-pr
          uid: 1a5dadcf-efd7-446c-bf3b-810e4296f9cd
        spec:
          pipelineRef:
            name: conditional-pipeline
          resources:
          - name: source-repo
            resourceRef:
              name: pipeline-git
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:02:11Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 2, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: README.md
              name: path
              type: string
            resources:
            - name: source-repo
              type: git
            tasks:
            - name: first-create-file
              resources:
                outputs:
                - name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: create-readme-file
            - conditions:
              - conditionRef: file-exists
                params:
                - name: path
                  value: $(params.path)
                resources:
                - from:
                  - first-create-file
                  name: workspace
                  resource: source-repo
              name: then-check
              taskRef:
                kind: Task
                name: echo-hello
          startTime: "2021-09-27T08:02:11Z"
          taskRuns:
            conditional-pr-first-create-file-8lqc7:
              pipelineTaskName: first-create-file
              status:
                conditions:
                - lastTransitionTime: "2021-09-27T08:04:26Z"
                  message: Not all Steps in the Task have finished executing
                  reason: Running
                  status: Unknown
                  type: Succeeded
                podName: conditional-pr-first-create-file-8lqc7-pod-m5v5v
                startTime: "2021-09-27T08:02:14Z"
                steps:
                - container: step-create-dir-workspace-clt8s
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-workspace-clt8s
                  running:
                    startedAt: "2021-09-27T08:04:07Z"
                - container: step-write-new-stuff
                  imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
                  name: write-new-stuff
                  running:
                    startedAt: "2021-09-27T08:04:21Z"
                - container: step-source-mkdir-workspace-fts5q
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-mkdir-workspace-fts5q
                  running:
                    startedAt: "2021-09-27T08:04:23Z"
                - container: step-source-copy-workspace-hpz5l
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-copy-workspace-hpz5l
                  running:
                    startedAt: "2021-09-27T08:04:24Z"
                taskSpec:
                  resources:
                    outputs:
                    - name: workspace
                      type: git
                  steps:
                  - image: ubuntu
                    name: write-new-stuff
                    resources: {}
                    script: touch $(resources.outputs.workspace.path)/README.md
            conditional-pr-then-check-7g6b5:
              conditionChecks:
                conditional-pr-then-check-7g6b5-file-exists-0-nxkrt:
                  conditionName: file-exists-0
              pipelineTaskName: then-check
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:outputs: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: create-readme-file
          namespace: arendelle-8qdhc
          resourceVersion: "5506228"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-8qdhc/tasks/create-readme-file
          uid: 37fed79e-9c83-40a0-bd8e-a5abbde9b5ad
        spec:
          resources:
            outputs:
            - name: workspace
              type: git
          steps:
          - image: ubuntu
            name: write-new-stuff
            resources: {}
            script: touch $(resources.outputs.workspace.path)/README.md
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:02:09Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          name: echo-hello
          namespace: arendelle-8qdhc
          resourceVersion: "5506232"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-8qdhc/tasks/echo-hello
          uid: 63bd8e02-32d9-446d-b6cb-7af693007842
        spec:
          steps:
          - image: ubuntu
            name: echo
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:11Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-readme-file
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"1a5dadcf-efd7-446c-bf3b-810e4296f9cd"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:26Z"
          name: conditional-pr-first-create-file-8lqc7
          namespace: arendelle-8qdhc
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: conditional-pr
            uid: 1a5dadcf-efd7-446c-bf3b-810e4296f9cd
          resourceVersion: "5508253"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-8qdhc/taskruns/conditional-pr-first-create-file-8lqc7
          uid: eba2a995-84ab-4af1-9539-a6732b68c1c7
        spec:
          resources:
            outputs:
            - name: workspace
              paths:
              - /pvc/first-create-file/workspace
              resourceRef:
                name: pipeline-git
          serviceAccountName: default
          taskRef:
            kind: Task
            name: create-readme-file
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:26Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: conditional-pr-first-create-file-8lqc7-pod-m5v5v
          startTime: "2021-09-27T08:02:14Z"
          steps:
          - container: step-create-dir-workspace-clt8s
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-workspace-clt8s
            running:
              startedAt: "2021-09-27T08:04:07Z"
          - container: step-write-new-stuff
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: write-new-stuff
            running:
              startedAt: "2021-09-27T08:04:21Z"
          - container: step-source-mkdir-workspace-fts5q
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-mkdir-workspace-fts5q
            running:
              startedAt: "2021-09-27T08:04:23Z"
          - container: step-source-copy-workspace-hpz5l
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-copy-workspace-hpz5l
            running:
              startedAt: "2021-09-27T08:04:24Z"
          taskSpec:
            resources:
              outputs:
              - name: workspace
                type: git
            steps:
            - image: ubuntu
              name: write-new-stuff
              resources: {}
              script: touch $(resources.outputs.workspace.path)/README.md
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: f13ff904573be8f4c99f8b19d2b4a0248e16cfdc70f1023491f84d63bfd9fb9d
            cni.projectcalico.org/podIP: 172.20.64.4/32
            cni.projectcalico.org/podIPs: 172.20.64.4/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:15Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-readme-file
            tekton.dev/taskRun: conditional-pr-first-create-file-8lqc7
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:03:42Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"eba2a995-84ab-4af1-9539-a6732b68c1c7"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-create-dir-workspace-clt8s"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-copy-workspace-hpz5l"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-mkdir-workspace-fts5q"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-write-new-stuff"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"conditional-pr-pvc"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:26Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.4"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:26Z"
          name: conditional-pr-first-create-file-8lqc7-pod-m5v5v
          namespace: arendelle-8qdhc
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: conditional-pr-first-create-file-8lqc7
            uid: eba2a995-84ab-4af1-9539-a6732b68c1c7
          resourceVersion: "5508250"
          selfLink: /api/v1/namespaces/arendelle-8qdhc/pods/conditional-pr-first-create-file-8lqc7-pod-m5v5v
          uid: 487efe26-9190-4883-a092-283d86fa558c
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-workspace-clt8s
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-workspace-clt8s
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-drtsg
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write-new-stuff
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-2p6t7
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write-new-stuff
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-drtsg
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-mkdir-workspace-fts5q
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - mkdir
            - --
            - -p
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-mkdir-workspace-fts5q
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: conditional-pr-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-drtsg
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-copy-workspace-hpz5l
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - cp
            - --
            - -r
            - /workspace/output/workspace/.
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-copy-workspace-hpz5l
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: conditional-pr-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-drtsg
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-drtsg
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-2p6t7"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdG91Y2ggL3dvcmtzcGFjZS9vdXRwdXQvd29ya3NwYWNlL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-drtsg
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: conditional-pr-pvc
            persistentVolumeClaim:
              claimName: conditional-pr-pvc
          - name: default-token-drtsg
            secret:
              defaultMode: 420
              secretName: default-token-drtsg
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:05Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:26Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:26Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://27509167cf5597439ed524959a8593350d0b70675c0d5f7f69967f24140c8a8f
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-workspace-clt8s
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:07Z"
          - containerID: docker://b198431e3d9996ad1d890b4c4c5c6ec9b6f828a2e4cad390fcccaf730365cd78
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-copy-workspace-hpz5l
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:24Z"
          - containerID: docker://5951810ed1b7f2d5b45d4a31d85b4b968f00082f77baf5ba5dbdbd3a82404939
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-mkdir-workspace-fts5q
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:23Z"
          - containerID: docker://da0d7a41e2d2cd56b9244e5ed1acb8917186698fb31f063f6459a6ad150c0131
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write-new-stuff
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:21Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://e483938b7cacba1278c8c5c6b1359e79b36a869720c78f6cd1fbeb6a1dc06237
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://e483938b7cacba1278c8c5c6b1359e79b36a869720c78f6cd1fbeb6a1dc06237
                exitCode: 0
                finishedAt: "2021-09-27T08:03:48Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:48Z"
          - containerID: docker://464637120d509b3fe011132381df82d750b6971325e129efdc7b09161384fd08
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://464637120d509b3fe011132381df82d750b6971325e129efdc7b09161384fd08
                exitCode: 0
                finishedAt: "2021-09-27T08:04:00Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:59Z"
          phase: Running
          podIP: 172.20.64.4
          podIPs:
          - ip: 172.20.64.4
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-8qdhc ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    init_test.go:135: Create namespace arendelle-kllpl to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    build_logs.go:37: build logs 
        >>> Container step-unnamed-0:
        Was a prelaunch workspace provided?  false 
         Was a launch workspace provided?  true 
        
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    build_logs.go:35: Could not get logs for pod condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr-pod-zdkgs: container "step-condition-check-is-equal" in pod "condition-pipelinerun-process-pmwpb-is-equal-0-6mfcr-pod-zdkgs" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-kllpl"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    build_logs.go:35: Could not get logs for pod condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6-pod-dwsnl: container "step-condition-check-is-equal" in pod "condition-pipelinerun-process-pmwpb-is-equal-1-wf8p6-pod-dwsnl" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1alpha1/taskruns/configmap
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    build_logs.go:37: build logs 
        >>> Container step-unnamed-0:
        Skipping prelaunch.
        Hello, World!
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== CONT  TestExamples/v1alpha1/taskruns/configmap
    init_test.go:135: Create namespace arendelle-g2xwr to deploy to
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:135: Create namespace arendelle-sgtml to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/configmap
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-g2xwr"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-sgtml"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    build_logs.go:37: build logs 
        >>> Container step-create-dir-workspace-clt8s:
        
        >>> Container step-write-new-stuff:
        + touch /workspace/output/workspace/README.md
        
        >>> Container step-source-mkdir-workspace-fts5q:
        
        >>> Container step-source-copy-workspace-hpz5l:
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
=== CONT  TestExamples/v1alpha1/pipelineruns/output-pipelinerun
    build_logs.go:37: build logs 
        >>> Container step-create-dir-workspace-b6ztt:
        
        >>> Container step-git-source-workspace-zhxpr:
        
        >>> Container step-read-docs-old:
        
        >>> Container step-write-new-stuff:
        
        >>> Container step-source-mkdir-workspace-7kvhc:
        
        >>> Container step-source-copy-workspace-drmwx:
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    init_test.go:135: Create namespace arendelle-45j6p to deploy to
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
    init_test.go:135: Create namespace arendelle-n92x8 to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T07:57:32Z"
          generateName: retry-example-
          generation: 1
          labels:
            tekton.dev/pipeline: retry-example-8hhfn
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T07:57:32Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:retry-example-8hhfn-hello-world-hkwh2:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:steps: {}
                  f:retry-example-8hhfn-retry-me-hpsqx:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:retriesStatus: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:25Z"
          name: retry-example-8hhfn
          namespace: arendelle-r922x
          resourceVersion: "5508226"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-r922x/pipelineruns/retry-example-8hhfn
          uid: ae82dd0d-e7fe-4a06-88ae-ff705f040e21
        spec:
          pipelineSpec:
            tasks:
            - name: retry-me
              params:
              - name: pipelineTask-retries
                value: $(context.pipelineTask.retries)
              - name: pipelineTask-retry-count
                value: $(context.task.retry-count)
              retries: 5
              taskSpec:
                metadata: {}
                params:
                - name: pipelineTask-retries
                  type: string
                - name: pipelineTask-retry-count
                  type: string
                spec: null
                steps:
                - image: alpine:3.12.0
                  name: ""
                  resources: {}
                  script: |
                    #!/usr/bin/env sh
                    if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                      echo "This is the last retry."
                      exit 0;
                    fi
                    echo "The PipelineTask has retried $(context.task.retry-count) times."
                    exit 1
            - name: hello-world
              runAfter:
              - retry-me
              taskSpec:
                metadata: {}
                spec: null
                steps:
                - image: busybox
                  name: ""
                  resources: {}
                  script: |
                    echo "hello world"
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:13Z"
            message: 'Tasks Completed: 1 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            tasks:
            - name: retry-me
              params:
              - name: pipelineTask-retries
                value: $(context.pipelineTask.retries)
              - name: pipelineTask-retry-count
                value: $(context.task.retry-count)
              retries: 5
              taskSpec:
                metadata: {}
                params:
                - name: pipelineTask-retries
                  type: string
                - name: pipelineTask-retry-count
                  type: string
                spec: null
                steps:
                - image: alpine:3.12.0
                  name: ""
                  resources: {}
                  script: |
                    #!/usr/bin/env sh
                    if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                      echo "This is the last retry."
                      exit 0;
                    fi
                    echo "The PipelineTask has retried $(context.task.retry-count) times."
                    exit 1
            - name: hello-world
              runAfter:
              - retry-me
              taskSpec:
                metadata: {}
                spec: null
                steps:
                - image: busybox
                  name: ""
                  resources: {}
                  script: |
                    echo "hello world"
          startTime: "2021-09-27T07:57:32Z"
          taskRuns:
            retry-example-8hhfn-hello-world-hkwh2:
              pipelineTaskName: hello-world
              status:
                conditions:
                - lastTransitionTime: "2021-09-27T08:04:25Z"
                  message: 'pod status "Initialized":"False"; message: "containers with incomplete
                    status: [place-scripts]"'
                  reason: Pending
                  status: Unknown
                  type: Succeeded
                podName: retry-example-8hhfn-hello-world-hkwh2-pod-8wsdg
                startTime: "2021-09-27T08:04:13Z"
                steps:
                - container: step-unnamed-0
                  name: unnamed-0
                  waiting:
                    reason: PodInitializing
                taskSpec:
                  steps:
                  - image: busybox
                    name: ""
                    resources: {}
                    script: |
                      echo "hello world"
            retry-example-8hhfn-retry-me-hpsqx:
              pipelineTaskName: retry-me
              status:
                completionTime: "2021-09-27T08:04:13Z"
                conditions:
                - lastTransitionTime: "2021-09-27T08:04:13Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: retry-example-8hhfn-retry-me-hpsqx-pod-67794
                retriesStatus:
                - completionTime: "2021-09-27T07:58:17Z"
                  conditions:
                  - lastTransitionTime: "2021-09-27T07:58:17Z"
                    message: |
                      "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-5vtm8 -c step-unnamed-0
                    reason: Failed
                    status: "False"
                    type: Succeeded
                  podName: retry-example-8hhfn-retry-me-hpsqx-pod-5vtm8
                  startTime: "2021-09-27T07:57:32Z"
                  steps:
                  - container: step-unnamed-0
                    imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                    name: unnamed-0
                    terminated:
                      containerID: docker://7dc4c9e2e41c2d1b87f31a4ecdad26e25d275171fddd0c68d15e5ab4adf851c6
                      exitCode: 1
                      finishedAt: "2021-09-27T07:58:02Z"
                      reason: Error
                      startedAt: "2021-09-27T07:58:01Z"
                  taskSpec:
                    params:
                    - name: pipelineTask-retries
                      type: string
                    - name: pipelineTask-retry-count
                      type: string
                    steps:
                    - image: alpine:3.12.0
                      name: ""
                      resources: {}
                      script: |
                        #!/usr/bin/env sh
                        if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                          echo "This is the last retry."
                          exit 0;
                        fi
                        echo "The PipelineTask has retried $(context.task.retry-count) times."
                        exit 1
                - completionTime: "2021-09-27T07:58:50Z"
                  conditions:
                  - lastTransitionTime: "2021-09-27T07:58:50Z"
                    message: |
                      "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-ljsrs -c step-unnamed-0
                    reason: Failed
                    status: "False"
                    type: Succeeded
                  podName: retry-example-8hhfn-retry-me-hpsqx-pod-ljsrs
                  startTime: "2021-09-27T07:58:17Z"
                  steps:
                  - container: step-unnamed-0
                    imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                    name: unnamed-0
                    terminated:
                      containerID: docker://8b0a996f5d92edfce5b2206bf0c684adf4d5161da83e0fe0f0c50a608cebaa99
                      exitCode: 1
                      finishedAt: "2021-09-27T07:58:46Z"
                      reason: Error
                      startedAt: "2021-09-27T07:58:46Z"
                  taskSpec:
                    params:
                    - name: pipelineTask-retries
                      type: string
                    - name: pipelineTask-retry-count
                      type: string
                    steps:
                    - image: alpine:3.12.0
                      name: ""
                      resources: {}
                      script: |
                        #!/usr/bin/env sh
                        if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                          echo "This is the last retry."
                          exit 0;
                        fi
                        echo "The PipelineTask has retried $(context.task.retry-count) times."
                        exit 1
                - completionTime: "2021-09-27T07:59:20Z"
                  conditions:
                  - lastTransitionTime: "2021-09-27T07:59:20Z"
                    message: |
                      "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-bdccc -c step-unnamed-0
                    reason: Failed
                    status: "False"
                    type: Succeeded
                  podName: retry-example-8hhfn-retry-me-hpsqx-pod-bdccc
                  startTime: "2021-09-27T07:58:50Z"
                  steps:
                  - container: step-unnamed-0
                    imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                    name: unnamed-0
                    terminated:
                      containerID: docker://4fd3c7350b40a94c05c7de80b904fd8ffcdf0e8adc5c6cde6a8d87b19f3e8639
                      exitCode: 1
                      finishedAt: "2021-09-27T07:59:11Z"
                      reason: Error
                      startedAt: "2021-09-27T07:59:10Z"
                  taskSpec:
                    params:
                    - name: pipelineTask-retries
                      type: string
                    - name: pipelineTask-retry-count
                      type: string
                    steps:
                    - image: alpine:3.12.0
                      name: ""
                      resources: {}
                      script: |
                        #!/usr/bin/env sh
                        if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                          echo "This is the last retry."
                          exit 0;
                        fi
                        echo "The PipelineTask has retried $(context.task.retry-count) times."
                        exit 1
                - completionTime: "2021-09-27T08:00:25Z"
                  conditions:
                  - lastTransitionTime: "2021-09-27T08:00:25Z"
                    message: |
                      "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-pf8xj -c step-unnamed-0
                    reason: Failed
                    status: "False"
                    type: Succeeded
                  podName: retry-example-8hhfn-retry-me-hpsqx-pod-pf8xj
                  startTime: "2021-09-27T07:59:20Z"
                  steps:
                  - container: step-unnamed-0
                    imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                    name: unnamed-0
                    terminated:
                      containerID: docker://d690cde42c3070a5ba361275321e70c84bf654d1b6b42378fbd49a131f555136
                      exitCode: 1
                      finishedAt: "2021-09-27T07:59:53Z"
                      reason: Error
                      startedAt: "2021-09-27T07:59:52Z"
                  taskSpec:
                    params:
                    - name: pipelineTask-retries
                      type: string
                    - name: pipelineTask-retry-count
                      type: string
                    steps:
                    - image: alpine:3.12.0
                      name: ""
                      resources: {}
                      script: |
                        #!/usr/bin/env sh
                        if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                          echo "This is the last retry."
                          exit 0;
                        fi
                        echo "The PipelineTask has retried $(context.task.retry-count) times."
                        exit 1
                - completionTime: "2021-09-27T08:01:54Z"
                  conditions:
                  - lastTransitionTime: "2021-09-27T08:01:54Z"
                    message: |
                      "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-f9h7p -c step-unnamed-0
                    reason: Failed
                    status: "False"
                    type: Succeeded
                  podName: retry-example-8hhfn-retry-me-hpsqx-pod-f9h7p
                  startTime: "2021-09-27T08:00:32Z"
                  steps:
                  - container: step-unnamed-0
                    imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                    name: unnamed-0
                    terminated:
                      containerID: docker://730cfc5d4b524443f7f6213ac3ff1dc9f79df150ab61435dba91f7400774f5a4
                      exitCode: 1
                      finishedAt: "2021-09-27T08:01:52Z"
                      reason: Error
                      startedAt: "2021-09-27T08:01:52Z"
                  taskSpec:
                    params:
                    - name: pipelineTask-retries
                      type: string
                    - name: pipelineTask-retry-count
                      type: string
                    steps:
                    - image: alpine:3.12.0
                      name: ""
                      resources: {}
                      script: |
                        #!/usr/bin/env sh
                        if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                          echo "This is the last retry."
                          exit 0;
                        fi
                        echo "The PipelineTask has retried $(context.task.retry-count) times."
                        exit 1
                startTime: "2021-09-27T08:01:54Z"
                steps:
                - container: step-unnamed-0
                  imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
                  name: unnamed-0
                  terminated:
                    containerID: docker://ce9058c82343930f52ed4f54d657bc3a44af50b163f963491922c57da77490ad
                    exitCode: 0
                    finishedAt: "2021-09-27T08:04:09Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:04:08Z"
                taskSpec:
                  params:
                  - name: pipelineTask-retries
                    type: string
                  - name: pipelineTask-retry-count
                    type: string
                  steps:
                  - image: alpine:3.12.0
                    name: ""
                    resources: {}
                    script: |
                      #!/usr/bin/env sh
                      if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                        echo "This is the last retry."
                        exit 0;
                      fi
                      echo "The PipelineTask has retried $(context.task.retry-count) times."
                      exit 1
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:04:13Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: hello-world
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"ae82dd0d-e7fe-4a06-88ae-ff705f040e21"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:39Z"
          name: retry-example-8hhfn-hello-world-hkwh2
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: retry-example-8hhfn
            uid: ae82dd0d-e7fe-4a06-88ae-ff705f040e21
          resourceVersion: "5508345"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-r922x/taskruns/retry-example-8hhfn-hello-world-hkwh2
          uid: bbbff2c3-8ec0-4523-ada8-96739ac170a2
        spec:
          resources: {}
          serviceAccountName: default
          taskSpec:
            steps:
            - image: busybox
              name: ""
              resources: {}
              script: |
                echo "hello world"
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:39Z"
            message: 'pod status "Ready":"False"; message: "containers with unready status:
              [step-unnamed-0]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: retry-example-8hhfn-hello-world-hkwh2-pod-8wsdg
          startTime: "2021-09-27T08:04:13Z"
          steps:
          - container: step-unnamed-0
            name: unnamed-0
            waiting:
              reason: PodInitializing
          taskSpec:
            steps:
            - image: busybox
              name: ""
              resources: {}
              script: |
                echo "hello world"
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T07:57:32Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: retry-me
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"ae82dd0d-e7fe-4a06-88ae-ff705f040e21"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:retriesStatus: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:13Z"
          name: retry-example-8hhfn-retry-me-hpsqx
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: retry-example-8hhfn
            uid: ae82dd0d-e7fe-4a06-88ae-ff705f040e21
          resourceVersion: "5508019"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-r922x/taskruns/retry-example-8hhfn-retry-me-hpsqx
          uid: 0aa083fa-26dd-4c84-8470-5b6246647679
        spec:
          params:
          - name: pipelineTask-retries
            value: "5"
          - name: pipelineTask-retry-count
            value: $(context.task.retry-count)
          resources: {}
          serviceAccountName: default
          taskSpec:
            params:
            - name: pipelineTask-retries
              type: string
            - name: pipelineTask-retry-count
              type: string
            steps:
            - image: alpine:3.12.0
              name: ""
              resources: {}
              script: |
                #!/usr/bin/env sh
                if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                  echo "This is the last retry."
                  exit 0;
                fi
                echo "The PipelineTask has retried $(context.task.retry-count) times."
                exit 1
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:04:13Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:13Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: retry-example-8hhfn-retry-me-hpsqx-pod-67794
          retriesStatus:
          - completionTime: "2021-09-27T07:58:17Z"
            conditions:
            - lastTransitionTime: "2021-09-27T07:58:17Z"
              message: |
                "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-5vtm8 -c step-unnamed-0
              reason: Failed
              status: "False"
              type: Succeeded
            podName: retry-example-8hhfn-retry-me-hpsqx-pod-5vtm8
            startTime: "2021-09-27T07:57:32Z"
            steps:
            - container: step-unnamed-0
              imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
              name: unnamed-0
              terminated:
                containerID: docker://7dc4c9e2e41c2d1b87f31a4ecdad26e25d275171fddd0c68d15e5ab4adf851c6
                exitCode: 1
                finishedAt: "2021-09-27T07:58:02Z"
                reason: Error
                startedAt: "2021-09-27T07:58:01Z"
            taskSpec:
              params:
              - name: pipelineTask-retries
                type: string
              - name: pipelineTask-retry-count
                type: string
              steps:
              - image: alpine:3.12.0
                name: ""
                resources: {}
                script: |
                  #!/usr/bin/env sh
                  if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                    echo "This is the last retry."
                    exit 0;
                  fi
                  echo "The PipelineTask has retried $(context.task.retry-count) times."
                  exit 1
          - completionTime: "2021-09-27T07:58:50Z"
            conditions:
            - lastTransitionTime: "2021-09-27T07:58:50Z"
              message: |
                "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-ljsrs -c step-unnamed-0
              reason: Failed
              status: "False"
              type: Succeeded
            podName: retry-example-8hhfn-retry-me-hpsqx-pod-ljsrs
            startTime: "2021-09-27T07:58:17Z"
            steps:
            - container: step-unnamed-0
              imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
              name: unnamed-0
              terminated:
                containerID: docker://8b0a996f5d92edfce5b2206bf0c684adf4d5161da83e0fe0f0c50a608cebaa99
                exitCode: 1
                finishedAt: "2021-09-27T07:58:46Z"
                reason: Error
                startedAt: "2021-09-27T07:58:46Z"
            taskSpec:
              params:
              - name: pipelineTask-retries
                type: string
              - name: pipelineTask-retry-count
                type: string
              steps:
              - image: alpine:3.12.0
                name: ""
                resources: {}
                script: |
                  #!/usr/bin/env sh
                  if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                    echo "This is the last retry."
                    exit 0;
                  fi
                  echo "The PipelineTask has retried $(context.task.retry-count) times."
                  exit 1
          - completionTime: "2021-09-27T07:59:20Z"
            conditions:
            - lastTransitionTime: "2021-09-27T07:59:20Z"
              message: |
                "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-bdccc -c step-unnamed-0
              reason: Failed
              status: "False"
              type: Succeeded
            podName: retry-example-8hhfn-retry-me-hpsqx-pod-bdccc
            startTime: "2021-09-27T07:58:50Z"
            steps:
            - container: step-unnamed-0
              imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
              name: unnamed-0
              terminated:
                containerID: docker://4fd3c7350b40a94c05c7de80b904fd8ffcdf0e8adc5c6cde6a8d87b19f3e8639
                exitCode: 1
                finishedAt: "2021-09-27T07:59:11Z"
                reason: Error
                startedAt: "2021-09-27T07:59:10Z"
            taskSpec:
              params:
              - name: pipelineTask-retries
                type: string
              - name: pipelineTask-retry-count
                type: string
              steps:
              - image: alpine:3.12.0
                name: ""
                resources: {}
                script: |
                  #!/usr/bin/env sh
                  if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                    echo "This is the last retry."
                    exit 0;
                  fi
                  echo "The PipelineTask has retried $(context.task.retry-count) times."
                  exit 1
          - completionTime: "2021-09-27T08:00:25Z"
            conditions:
            - lastTransitionTime: "2021-09-27T08:00:25Z"
              message: |
                "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-pf8xj -c step-unnamed-0
              reason: Failed
              status: "False"
              type: Succeeded
            podName: retry-example-8hhfn-retry-me-hpsqx-pod-pf8xj
            startTime: "2021-09-27T07:59:20Z"
            steps:
            - container: step-unnamed-0
              imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
              name: unnamed-0
              terminated:
                containerID: docker://d690cde42c3070a5ba361275321e70c84bf654d1b6b42378fbd49a131f555136
                exitCode: 1
                finishedAt: "2021-09-27T07:59:53Z"
                reason: Error
                startedAt: "2021-09-27T07:59:52Z"
            taskSpec:
              params:
              - name: pipelineTask-retries
                type: string
              - name: pipelineTask-retry-count
                type: string
              steps:
              - image: alpine:3.12.0
                name: ""
                resources: {}
                script: |
                  #!/usr/bin/env sh
                  if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                    echo "This is the last retry."
                    exit 0;
                  fi
                  echo "The PipelineTask has retried $(context.task.retry-count) times."
                  exit 1
          - completionTime: "2021-09-27T08:01:54Z"
            conditions:
            - lastTransitionTime: "2021-09-27T08:01:54Z"
              message: |
                "step-unnamed-0" exited with code 1 (image: "docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321"); for logs run: kubectl -n arendelle-r922x logs retry-example-8hhfn-retry-me-hpsqx-pod-f9h7p -c step-unnamed-0
              reason: Failed
              status: "False"
              type: Succeeded
            podName: retry-example-8hhfn-retry-me-hpsqx-pod-f9h7p
            startTime: "2021-09-27T08:00:32Z"
            steps:
            - container: step-unnamed-0
              imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
              name: unnamed-0
              terminated:
                containerID: docker://730cfc5d4b524443f7f6213ac3ff1dc9f79df150ab61435dba91f7400774f5a4
                exitCode: 1
                finishedAt: "2021-09-27T08:01:52Z"
                reason: Error
                startedAt: "2021-09-27T08:01:52Z"
            taskSpec:
              params:
              - name: pipelineTask-retries
                type: string
              - name: pipelineTask-retry-count
                type: string
              steps:
              - image: alpine:3.12.0
                name: ""
                resources: {}
                script: |
                  #!/usr/bin/env sh
                  if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                    echo "This is the last retry."
                    exit 0;
                  fi
                  echo "The PipelineTask has retried $(context.task.retry-count) times."
                  exit 1
          startTime: "2021-09-27T08:01:54Z"
          steps:
          - container: step-unnamed-0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            name: unnamed-0
            terminated:
              containerID: docker://ce9058c82343930f52ed4f54d657bc3a44af50b163f963491922c57da77490ad
              exitCode: 0
              finishedAt: "2021-09-27T08:04:09Z"
              reason: Completed
              startedAt: "2021-09-27T08:04:08Z"
          taskSpec:
            params:
            - name: pipelineTask-retries
              type: string
            - name: pipelineTask-retry-count
              type: string
            steps:
            - image: alpine:3.12.0
              name: ""
              resources: {}
              script: |
                #!/usr/bin/env sh
                if [ "$(params.pipelineTask-retry-count)" == "$(params.pipelineTask-retries)" ]; then
                  echo "This is the last retry."
                  exit 0;
                fi
                echo "The PipelineTask has retried $(context.task.retry-count) times."
                exit 1
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 09d31ef62eb2081b8df1f8214c8a57e986132ec3bfb1f2e1859e047b001efe01
            cni.projectcalico.org/podIP: 172.20.64.38/32
            cni.projectcalico.org/podIPs: 172.20.64.38/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:04:14Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: hello-world
            tekton.dev/taskRun: retry-example-8hhfn-hello-world-hkwh2
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"bbbff2c3-8ec0-4523-ada8-96739ac170a2"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:14Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:04:19Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.38"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:30Z"
          name: retry-example-8hhfn-hello-world-hkwh2-pod-8wsdg
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-8hhfn-hello-world-hkwh2
            uid: bbbff2c3-8ec0-4523-ada8-96739ac170a2
          resourceVersion: "5508329"
          selfLink: /api/v1/namespaces/arendelle-r922x/pods/retry-example-8hhfn-hello-world-hkwh2-pod-8wsdg
          uid: 08c608cf-e6b7-4277-bc33-e40851fa22ec
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-8xq99
            - --
            command:
            - /tekton/bin/entrypoint
            image: busybox
            imagePullPolicy: Always
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-8xq99"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKZWNobyAiaGVsbG8gd29ybGQiCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-85j9b
            secret:
              defaultMode: 420
              secretName: default-token-85j9b
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:29Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:15Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:15Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:14Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: busybox
            imageID: ""
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://8c4bd4cc3d795b10aa35c51a092d938038a80a6676af772a8649a25443c56ace
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://8c4bd4cc3d795b10aa35c51a092d938038a80a6676af772a8649a25443c56ace
                exitCode: 0
                finishedAt: "2021-09-27T08:04:22Z"
                reason: Completed
                startedAt: "2021-09-27T08:04:22Z"
          - containerID: docker://9c87099a7d46a9d592d09f26c44d6c0711e4bfd9a6a4dc12600125602c41c3d6
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://9c87099a7d46a9d592d09f26c44d6c0711e4bfd9a6a4dc12600125602c41c3d6
                exitCode: 0
                finishedAt: "2021-09-27T08:04:27Z"
                reason: Completed
                startedAt: "2021-09-27T08:04:27Z"
          phase: Pending
          podIP: 172.20.64.38
          podIPs:
          - ip: 172.20.64.38
          qosClass: BestEffort
          startTime: "2021-09-27T08:04:15Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: b35b54013ad643c575143493ab3fcb6a364f7ac17b4eb3aab10340ee0d2735dc
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T07:57:33Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-8hhfn-retry-me-hpsqx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0aa083fa-26dd-4c84-8470-5b6246647679"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:57:55Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T07:58:16Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.39"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T07:58:17Z"
          name: retry-example-8hhfn-retry-me-hpsqx-pod-5vtm8
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-8hhfn-retry-me-hpsqx
            uid: 0aa083fa-26dd-4c84-8470-5b6246647679
          resourceVersion: "5503018"
          selfLink: /api/v1/namespaces/arendelle-r922x/pods/retry-example-8hhfn-retry-me-hpsqx-pod-5vtm8
          uid: b82f7115-6129-4df7-8422-6e8c0cf837e1
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-tpsmh
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-tpsmh"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiMCIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgMCB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-85j9b
            secret:
              defaultMode: 420
              secretName: default-token-85j9b
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:57:51Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:58:15Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:58:15Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:57:33Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://7dc4c9e2e41c2d1b87f31a4ecdad26e25d275171fddd0c68d15e5ab4adf851c6
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://7dc4c9e2e41c2d1b87f31a4ecdad26e25d275171fddd0c68d15e5ab4adf851c6
                exitCode: 1
                finishedAt: "2021-09-27T07:58:02Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:58:01.571Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:57:54Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://09508e7fb35d029972cb86065fbca65fb6bb5ffbe34db9c3a43637c15f0dbca5
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://09508e7fb35d029972cb86065fbca65fb6bb5ffbe34db9c3a43637c15f0dbca5
                exitCode: 0
                finishedAt: "2021-09-27T07:57:41Z"
                reason: Completed
                startedAt: "2021-09-27T07:57:41Z"
          - containerID: docker://210040bbd9102486c508fbd09fc5eb9231820e98e857f4ac848a6fd0527f61f2
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://210040bbd9102486c508fbd09fc5eb9231820e98e857f4ac848a6fd0527f61f2
                exitCode: 0
                finishedAt: "2021-09-27T07:57:49Z"
                reason: Completed
                startedAt: "2021-09-27T07:57:48Z"
          phase: Failed
          podIP: 172.20.64.39
          podIPs:
          - ip: 172.20.64.39
          qosClass: BestEffort
          startTime: "2021-09-27T07:57:33Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: f80751588eafe5cb7d2891c92a77d331d66950c538a6db055e4c6f43adffe27b
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:01:54Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-8hhfn-retry-me-hpsqx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0aa083fa-26dd-4c84-8470-5b6246647679"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:06Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.47"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:13Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:04:14Z"
          name: retry-example-8hhfn-retry-me-hpsqx-pod-67794
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-8hhfn-retry-me-hpsqx
            uid: 0aa083fa-26dd-4c84-8470-5b6246647679
          resourceVersion: "5508039"
          selfLink: /api/v1/namespaces/arendelle-r922x/pods/retry-example-8hhfn-retry-me-hpsqx-pod-67794
          uid: efb57d1f-a346-4fe4-8db5-1bd95999b8e1
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-dpzb7
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-dpzb7"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiNSIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgNSB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-85j9b
            secret:
              defaultMode: 420
              secretName: default-token-85j9b
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:01Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:13Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:13Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://ce9058c82343930f52ed4f54d657bc3a44af50b163f963491922c57da77490ad
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://ce9058c82343930f52ed4f54d657bc3a44af50b163f963491922c57da77490ad
                exitCode: 0
                finishedAt: "2021-09-27T08:04:09Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:08.951Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:04:04Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://d8c8c87523f8376dbd0fb5b3052a4c1a856a87642ff7e09712a2b79823f08375
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://d8c8c87523f8376dbd0fb5b3052a4c1a856a87642ff7e09712a2b79823f08375
                exitCode: 0
                finishedAt: "2021-09-27T08:03:42Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:42Z"
          - containerID: docker://e3c1a4dfbaecfce1ecda1ab16fb006998b67518840ab1dfd8213a9e07ac09558
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://e3c1a4dfbaecfce1ecda1ab16fb006998b67518840ab1dfd8213a9e07ac09558
                exitCode: 0
                finishedAt: "2021-09-27T08:03:55Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:55Z"
          phase: Succeeded
          podIP: 172.20.64.47
          podIPs:
          - ip: 172.20.64.47
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 65146a7f5f50d74fbf3849e1cc38859b9412bd67399483f89b5f3388111b56b2
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T07:58:50Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-8hhfn-retry-me-hpsqx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0aa083fa-26dd-4c84-8470-5b6246647679"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:59:08Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.36"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T07:59:19Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T07:59:20Z"
          name: retry-example-8hhfn-retry-me-hpsqx-pod-bdccc
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-8hhfn-retry-me-hpsqx
            uid: 0aa083fa-26dd-4c84-8470-5b6246647679
          resourceVersion: "5504449"
          selfLink: /api/v1/namespaces/arendelle-r922x/pods/retry-example-8hhfn-retry-me-hpsqx-pod-bdccc
          uid: 561fd211-4bb8-4d28-88f6-ee2518e21c26
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-lkbml
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-lkbml"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiMiIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgMiB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-85j9b
            secret:
              defaultMode: 420
              secretName: default-token-85j9b
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:59:05Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:59:19Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:59:19Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:58:50Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://4fd3c7350b40a94c05c7de80b904fd8ffcdf0e8adc5c6cde6a8d87b19f3e8639
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://4fd3c7350b40a94c05c7de80b904fd8ffcdf0e8adc5c6cde6a8d87b19f3e8639
                exitCode: 1
                finishedAt: "2021-09-27T07:59:11Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:59:10.865Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:59:06Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://0df1971b11e75ead258ee2991a4896a1afbab15acc5f5f67ffdd47dcde0c3081
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://0df1971b11e75ead258ee2991a4896a1afbab15acc5f5f67ffdd47dcde0c3081
                exitCode: 0
                finishedAt: "2021-09-27T07:58:58Z"
                reason: Completed
                startedAt: "2021-09-27T07:58:58Z"
          - containerID: docker://0c8b6cee6c9217d4c2e914145043591d8427a89024a1e3a9048cf02e7839c4ea
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://0c8b6cee6c9217d4c2e914145043591d8427a89024a1e3a9048cf02e7839c4ea
                exitCode: 0
                finishedAt: "2021-09-27T07:59:01Z"
                reason: Completed
                startedAt: "2021-09-27T07:59:01Z"
          phase: Failed
          podIP: 172.20.64.36
          podIPs:
          - ip: 172.20.64.36
          qosClass: BestEffort
          startTime: "2021-09-27T07:58:51Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 8f3ce6e8cfa4019124546eab40a7d91209d67473ae6721c3e6843f2dcd021d4b
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:00:29Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-8hhfn-retry-me-hpsqx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0aa083fa-26dd-4c84-8470-5b6246647679"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:01:50Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:01:54Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.59"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:01:54Z"
          name: retry-example-8hhfn-retry-me-hpsqx-pod-f9h7p
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-8hhfn-retry-me-hpsqx
            uid: 0aa083fa-26dd-4c84-8470-5b6246647679
          resourceVersion: "5506059"
          selfLink: /api/v1/namespaces/arendelle-r922x/pods/retry-example-8hhfn-retry-me-hpsqx-pod-f9h7p
          uid: 75a75914-22a6-46c8-b0f4-387adaa4f794
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-2hhnm
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-2hhnm"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiNCIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgNCB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-85j9b
            secret:
              defaultMode: 420
              secretName: default-token-85j9b
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:01:32Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:01:54Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:01:54Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:01:22Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://730cfc5d4b524443f7f6213ac3ff1dc9f79df150ab61435dba91f7400774f5a4
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://730cfc5d4b524443f7f6213ac3ff1dc9f79df150ab61435dba91f7400774f5a4
                exitCode: 1
                finishedAt: "2021-09-27T08:01:52Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:01:52.832Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:01:48Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://6f26c0b97da0450df5a3fad6c485091dc1798cb5e5ee3b3961a13249343894d1
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://6f26c0b97da0450df5a3fad6c485091dc1798cb5e5ee3b3961a13249343894d1
                exitCode: 0
                finishedAt: "2021-09-27T08:01:28Z"
                reason: Completed
                startedAt: "2021-09-27T08:01:28Z"
          - containerID: docker://34d7f65c16ef53ebbf602ab009c1b9102cc686306ebd76c1948babea3f50b2a2
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://34d7f65c16ef53ebbf602ab009c1b9102cc686306ebd76c1948babea3f50b2a2
                exitCode: 0
                finishedAt: "2021-09-27T08:01:30Z"
                reason: Completed
                startedAt: "2021-09-27T08:01:30Z"
          phase: Failed
          podIP: 172.20.64.59
          podIPs:
          - ip: 172.20.64.59
          qosClass: BestEffort
          startTime: "2021-09-27T08:01:24Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: b6c65211420b9ddecace4be9c6cc24683f1bfa9455871ae772a442a8dc04d0d3
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T07:58:17Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-8hhfn-retry-me-hpsqx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0aa083fa-26dd-4c84-8470-5b6246647679"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:58:39Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.40"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T07:58:50Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T07:58:51Z"
          name: retry-example-8hhfn-retry-me-hpsqx-pod-ljsrs
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-8hhfn-retry-me-hpsqx
            uid: 0aa083fa-26dd-4c84-8470-5b6246647679
          resourceVersion: "5503750"
          selfLink: /api/v1/namespaces/arendelle-r922x/pods/retry-example-8hhfn-retry-me-hpsqx-pod-ljsrs
          uid: ecf9e2ae-5cc8-4965-8230-c779cb860379
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-g2c69
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-g2c69"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiMSIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgMSB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-85j9b
            secret:
              defaultMode: 420
              secretName: default-token-85j9b
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:58:34Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:58:50Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:58:50Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:58:17Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://8b0a996f5d92edfce5b2206bf0c684adf4d5161da83e0fe0f0c50a608cebaa99
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://8b0a996f5d92edfce5b2206bf0c684adf4d5161da83e0fe0f0c50a608cebaa99
                exitCode: 1
                finishedAt: "2021-09-27T07:58:46Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:58:46.148Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:58:37Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://898a039a14841c8467776656fa46487bc831deb26afd6738f742f49e8316c3b9
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://898a039a14841c8467776656fa46487bc831deb26afd6738f742f49e8316c3b9
                exitCode: 0
                finishedAt: "2021-09-27T07:58:24Z"
                reason: Completed
                startedAt: "2021-09-27T07:58:24Z"
          - containerID: docker://a6bfb9678bc1a2bf9671d2bc0e9f14e420381ff73a209ca9d4365591527daa1b
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://a6bfb9678bc1a2bf9671d2bc0e9f14e420381ff73a209ca9d4365591527daa1b
                exitCode: 0
                finishedAt: "2021-09-27T07:58:29Z"
                reason: Completed
                startedAt: "2021-09-27T07:58:29Z"
          phase: Failed
          podIP: 172.20.64.40
          podIPs:
          - ip: 172.20.64.40
          qosClass: BestEffort
          startTime: "2021-09-27T07:58:18Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 91a8e14ba30b132770442fca710f2cd65893e7197a64c96a21beed7e5631a2c5
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T07:59:20Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: retry-example-8hhfn
            tekton.dev/pipelineRun: retry-example-8hhfn
            tekton.dev/pipelineTask: retry-me
            tekton.dev/taskRun: retry-example-8hhfn-retry-me-hpsqx
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0aa083fa-26dd-4c84-8470-5b6246647679"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-unnamed-0"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T07:59:47Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:00:11Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.25"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:00:25Z"
          name: retry-example-8hhfn-retry-me-hpsqx-pod-pf8xj
          namespace: arendelle-r922x
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: retry-example-8hhfn-retry-me-hpsqx
            uid: 0aa083fa-26dd-4c84-8470-5b6246647679
          resourceVersion: "5505500"
          selfLink: /api/v1/namespaces/arendelle-r922x/pods/retry-example-8hhfn-retry-me-hpsqx-pod-pf8xj
          uid: bfda8489-05ac-48fc-89a5-dd7becb3d4e2
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-0
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-pbr95
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine:3.12.0
            imagePullPolicy: IfNotPresent
            name: step-unnamed-0
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-pbr95"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgc2gKaWYgWyAiMyIgPT0gIjUiIF07IHRoZW4KICBlY2hvICJUaGlzIGlzIHRoZSBsYXN0IHJldHJ5LiIKICBleGl0IDA7CmZpCmVjaG8gIlRoZSBQaXBlbGluZVRhc2sgaGFzIHJldHJpZWQgMyB0aW1lcy4iCmV4aXQgMQo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-85j9b
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-85j9b
            secret:
              defaultMode: 420
              secretName: default-token-85j9b
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:59:42Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:00:06Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:00:06Z"
            message: 'containers with unready status: [step-unnamed-0]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T07:59:20Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://d690cde42c3070a5ba361275321e70c84bf654d1b6b42378fbd49a131f555136
            image: alpine:3.12.0
            imageID: docker-pullable://alpine@sha256:185518070891758909c9f839cf4ca393ee977ac378609f700f60a771a2dfe321
            lastState: {}
            name: step-unnamed-0
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://d690cde42c3070a5ba361275321e70c84bf654d1b6b42378fbd49a131f555136
                exitCode: 1
                finishedAt: "2021-09-27T07:59:53Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T07:59:52.921Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T07:59:45Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://d60ade962c97a4731c12b77c0570d8fc390df25fbc97d926c6dfd9d318c198f6
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://d60ade962c97a4731c12b77c0570d8fc390df25fbc97d926c6dfd9d318c198f6
                exitCode: 0
                finishedAt: "2021-09-27T07:59:31Z"
                reason: Completed
                startedAt: "2021-09-27T07:59:31Z"
          - containerID: docker://fa69e2719b1497766fa7aea830697999dee0e33dc8359f2193d08487af38df3d
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://fa69e2719b1497766fa7aea830697999dee0e33dc8359f2193d08487af38df3d
                exitCode: 0
                finishedAt: "2021-09-27T07:59:38Z"
                reason: Completed
                startedAt: "2021-09-27T07:59:38Z"
          phase: Failed
          podIP: 172.20.64.25
          podIPs:
          - ip: 172.20.64.25
          qosClass: BestEffort
          startTime: "2021-09-27T07:59:21Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-r922x ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: git-resource-branch-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:taskSpec:
                  .: {}
                  f:inputs:
                    .: {}
                    f:resources: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:20Z"
          name: git-resource-branch-m6n84
          namespace: arendelle-dh8sw
          resourceVersion: "5508146"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dh8sw/taskruns/git-resource-branch-m6n84
          uid: db5a3bce-4629-4838-891b-b414b7f524a4
        spec:
          resources:
            inputs:
            - name: skaffold
              resourceSpec:
                params:
                - name: revision
                  value: master
                - name: url
                  value: https://github.com/GoogleContainerTools/skaffold
                type: git
          serviceAccountName: default
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:04:20Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:20Z"
            message: |
              "step-git-source-skaffold-nmkh7" exited with code 1 (image: "docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f"); for logs run: kubectl -n arendelle-dh8sw logs git-resource-branch-m6n84-pod-jpz85 -c step-git-source-skaffold-nmkh7
            reason: Failed
            status: "False"
            type: Succeeded
          podName: git-resource-branch-m6n84-pod-jpz85
          startTime: "2021-09-27T08:02:10Z"
          steps:
          - container: step-git-source-skaffold-nmkh7
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-skaffold-nmkh7
            terminated:
              containerID: docker://8bbb50772c1f6f55a3abde7a6fee5c8b0cd43a6ff139a19a293281f947336dcf
              exitCode: 1
              finishedAt: "2021-09-27T08:04:17Z"
              reason: Error
              startedAt: "2021-09-27T08:04:16Z"
          - container: step-unnamed-1
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: unnamed-1
            terminated:
              containerID: docker://45d44ce545141bd060d7ce024288d0713f17aa8505c5c1c5b841f98a23cb2498
              exitCode: 1
              finishedAt: "2021-09-27T08:04:18Z"
              reason: Error
              startedAt: "2021-09-27T08:04:18Z"
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: git-resource-no-proxy-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:taskSpec:
                  .: {}
                  f:inputs:
                    .: {}
                    f:resources: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:25Z"
          name: git-resource-no-proxy-cg5l9
          namespace: arendelle-dh8sw
          resourceVersion: "5508214"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dh8sw/taskruns/git-resource-no-proxy-cg5l9
          uid: 7d8089ee-1fc4-43f8-96d1-c1e73f11f472
        spec:
          resources:
            inputs:
            - name: skaffold
              resourceSpec:
                params:
                - name: revision
                  value: master
                - name: url
                  value: https://github.com/GoogleContainerTools/skaffold
                - name: noProxy
                  value: google.com
                type: git
          serviceAccountName: default
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:04:25Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:25Z"
            message: |
              "step-git-source-skaffold-h72sm" exited with code 1 (image: "docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f"); for logs run: kubectl -n arendelle-dh8sw logs git-resource-no-proxy-cg5l9-pod-7dq4m -c step-git-source-skaffold-h72sm
            reason: Failed
            status: "False"
            type: Succeeded
          podName: git-resource-no-proxy-cg5l9-pod-7dq4m
          startTime: "2021-09-27T08:02:12Z"
          steps:
          - container: step-git-source-skaffold-h72sm
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-skaffold-h72sm
            terminated:
              containerID: docker://7c5054f14c58651d4ae14b25f95cb38dcdd1466494ee721828a86cc37dbf054c
              exitCode: 1
              finishedAt: "2021-09-27T08:04:20Z"
              reason: Error
              startedAt: "2021-09-27T08:04:19Z"
          - container: step-unnamed-1
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: unnamed-1
            terminated:
              containerID: docker://88c7eabaad73b793f91f4159e25543b02517b099b3690023e78cbde807a25524
              exitCode: 1
              finishedAt: "2021-09-27T08:04:21Z"
              reason: Error
              startedAt: "2021-09-27T08:04:20Z"
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: git-resource-ref-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:taskSpec:
                  .: {}
                  f:inputs:
                    .: {}
                    f:resources: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:20Z"
          name: git-resource-ref-g7cg4
          namespace: arendelle-dh8sw
          resourceVersion: "5508152"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dh8sw/taskruns/git-resource-ref-g7cg4
          uid: d4505dc3-675a-419e-8996-60c040a4ff5e
        spec:
          resources:
            inputs:
            - name: skaffold
              resourceSpec:
                params:
                - name: revision
                  value: pull/2932/head
                - name: url
                  value: https://github.com/GoogleContainerTools/skaffold
                type: git
          serviceAccountName: default
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:20Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: git-resource-ref-g7cg4-pod-5czhc
          startTime: "2021-09-27T08:02:11Z"
          steps:
          - container: step-git-source-skaffold-jhzjb
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-skaffold-jhzjb
            running:
              startedAt: "2021-09-27T08:04:07Z"
          - container: step-unnamed-1
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: unnamed-1
            running:
              startedAt: "2021-09-27T08:04:19Z"
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: git-resource-sslverify-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:taskSpec:
                  .: {}
                  f:inputs:
                    .: {}
                    f:resources: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:12Z"
          name: git-resource-sslverify-djjd7
          namespace: arendelle-dh8sw
          resourceVersion: "5508008"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dh8sw/taskruns/git-resource-sslverify-djjd7
          uid: eec9dd8a-c33b-40ef-821f-7cbcad16621e
        spec:
          resources:
            inputs:
            - name: skaffold
              resourceSpec:
                params:
                - name: revision
                  value: master
                - name: url
                  value: https://github.com/GoogleContainerTools/skaffold
                - name: sslVerify
                  value: "false"
                type: git
          serviceAccountName: default
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:04:12Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:12Z"
            message: |
              "step-git-source-skaffold-7k4x7" exited with code 1 (image: "docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f"); for logs run: kubectl -n arendelle-dh8sw logs git-resource-sslverify-djjd7-pod-hhkjw -c step-git-source-skaffold-7k4x7
            reason: Failed
            status: "False"
            type: Succeeded
          podName: git-resource-sslverify-djjd7-pod-hhkjw
          startTime: "2021-09-27T08:02:11Z"
          steps:
          - container: step-git-source-skaffold-7k4x7
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-skaffold-7k4x7
            terminated:
              containerID: docker://ba8471240a29361f815375960a43c6f4bb67a476630ace97c74bceb5a9b3c813
              exitCode: 1
              finishedAt: "2021-09-27T08:04:10Z"
              reason: Error
              startedAt: "2021-09-27T08:04:09Z"
          - container: step-unnamed-1
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: unnamed-1
            terminated:
              containerID: docker://230034e46859566d94036cf433c12cf20b9fda20e04590ddb06dee72ecceaf6c
              exitCode: 1
              finishedAt: "2021-09-27T08:04:10Z"
              reason: Error
              startedAt: "2021-09-27T08:04:10Z"
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:02:09Z"
          generateName: git-resource-tag-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:taskSpec:
                  .: {}
                  f:inputs:
                    .: {}
                    f:resources: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:02:09Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:21Z"
          name: git-resource-tag-7hqcw
          namespace: arendelle-dh8sw
          resourceVersion: "5508166"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-dh8sw/taskruns/git-resource-tag-7hqcw
          uid: bc4bcfb7-ea8c-44d0-8b90-6ecca9ee1a2a
        spec:
          resources:
            inputs:
            - name: skaffold
              resourceSpec:
                params:
                - name: revision
                  value: v0.32.0
                - name: url
                  value: https://github.com/GoogleContainerTools/skaffold
                type: git
          serviceAccountName: default
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:04:21Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: git-resource-tag-7hqcw-pod-pdswc
          startTime: "2021-09-27T08:02:10Z"
          steps:
          - container: step-git-source-skaffold-95hfr
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-skaffold-95hfr
            running:
              startedAt: "2021-09-27T08:04:07Z"
          - container: step-unnamed-1
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: unnamed-1
            running:
              startedAt: "2021-09-27T08:04:18Z"
          taskSpec:
            resources:
              inputs:
              - name: skaffold
                type: git
            steps:
            - image: ubuntu
              name: ""
              resources: {}
              script: cat skaffold/README.md
              workingDir: /workspace
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: d05effb396735885d00d5612f0aebc3ef454110d99951642581ffc1132e56fe1
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:11Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: git-resource-branch-m6n84
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"db5a3bce-4629-4838-891b-b414b7f524a4"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-skaffold-nmkh7"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-unnamed-1"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:15Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:04:20Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.21"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:20Z"
          name: git-resource-branch-m6n84-pod-jpz85
          namespace: arendelle-dh8sw
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: git-resource-branch-m6n84
            uid: db5a3bce-4629-4838-891b-b414b7f524a4
          resourceVersion: "5508153"
          selfLink: /api/v1/namespaces/arendelle-dh8sw/pods/git-resource-branch-m6n84-pod-jpz85
          uid: 8115d56e-9853-40d4-81a8-ca980feac142
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-skaffold-nmkh7
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/skaffold
            - -revision
            - master
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: skaffold
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-skaffold-nmkh7
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-1
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-2xw2k
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-1
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-2xw2k"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKY2F0IHNrYWZmb2xkL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-ksnhv
            secret:
              defaultMode: 420
              secretName: default-token-ksnhv
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:00Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:20Z"
            message: 'containers with unready status: [step-git-source-skaffold-nmkh7 step-unnamed-1]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:20Z"
            message: 'containers with unready status: [step-git-source-skaffold-nmkh7 step-unnamed-1]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://8bbb50772c1f6f55a3abde7a6fee5c8b0cd43a6ff139a19a293281f947336dcf
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-skaffold-nmkh7
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://8bbb50772c1f6f55a3abde7a6fee5c8b0cd43a6ff139a19a293281f947336dcf
                exitCode: 1
                finishedAt: "2021-09-27T08:04:17Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:16.678Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:04:03Z"
          - containerID: docker://45d44ce545141bd060d7ce024288d0713f17aa8505c5c1c5b841f98a23cb2498
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-unnamed-1
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://45d44ce545141bd060d7ce024288d0713f17aa8505c5c1c5b841f98a23cb2498
                exitCode: 1
                finishedAt: "2021-09-27T08:04:18Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:18.323Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:04:11Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://f4508d65aca75663820b145d1de206be10a53f1018086631bc544889d0ae682d
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://f4508d65aca75663820b145d1de206be10a53f1018086631bc544889d0ae682d
                exitCode: 0
                finishedAt: "2021-09-27T08:03:51Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:51Z"
          - containerID: docker://878c8d87597cecd359fcf8928c35537ef5f77ca8bfa6feeddaa7580d989896ec
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://878c8d87597cecd359fcf8928c35537ef5f77ca8bfa6feeddaa7580d989896ec
                exitCode: 0
                finishedAt: "2021-09-27T08:03:59Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:59Z"
          phase: Failed
          podIP: 172.20.64.21
          podIPs:
          - ip: 172.20.64.21
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 406c3ed8ddf4f3ee8c4ecc779697c4b4349f46df6947376c153f18a88367ab86
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:12Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: git-resource-no-proxy-cg5l9
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"7d8089ee-1fc4-43f8-96d1-c1e73f11f472"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-skaffold-h72sm"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"NO_PROXY"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-unnamed-1"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:16Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.50"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:24Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:04:25Z"
          name: git-resource-no-proxy-cg5l9-pod-7dq4m
          namespace: arendelle-dh8sw
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: git-resource-no-proxy-cg5l9
            uid: 7d8089ee-1fc4-43f8-96d1-c1e73f11f472
          resourceVersion: "5508224"
          selfLink: /api/v1/namespaces/arendelle-dh8sw/pods/git-resource-no-proxy-cg5l9-pod-7dq4m
          uid: 2a29ebc6-ae50-4345-a89f-65e25681d39c
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-skaffold-h72sm
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/skaffold
            - -revision
            - master
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: skaffold
            - name: HOME
              value: /tekton/home
            - name: NO_PROXY
              value: google.com
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-skaffold-h72sm
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-1
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-p6vgz
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-1
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-p6vgz"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKY2F0IHNrYWZmb2xkL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-ksnhv
            secret:
              defaultMode: 420
              secretName: default-token-ksnhv
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:01Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:24Z"
            message: 'containers with unready status: [step-git-source-skaffold-h72sm step-unnamed-1]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:24Z"
            message: 'containers with unready status: [step-git-source-skaffold-h72sm step-unnamed-1]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://7c5054f14c58651d4ae14b25f95cb38dcdd1466494ee721828a86cc37dbf054c
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-skaffold-h72sm
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://7c5054f14c58651d4ae14b25f95cb38dcdd1466494ee721828a86cc37dbf054c
                exitCode: 1
                finishedAt: "2021-09-27T08:04:20Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:19.862Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:04:04Z"
          - containerID: docker://88c7eabaad73b793f91f4159e25543b02517b099b3690023e78cbde807a25524
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-unnamed-1
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://88c7eabaad73b793f91f4159e25543b02517b099b3690023e78cbde807a25524
                exitCode: 1
                finishedAt: "2021-09-27T08:04:21Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:20.785Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:04:12Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://e012c7a7e491401bc8e6d11342d2eee74de5e331984c5886a9731bee10146ff9
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://e012c7a7e491401bc8e6d11342d2eee74de5e331984c5886a9731bee10146ff9
                exitCode: 0
                finishedAt: "2021-09-27T08:03:42Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:42Z"
          - containerID: docker://dbf41fab2cf0ab34a9c96dda718df3866ce9f8e6edfd61e3639cb14f9e7e91e1
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://dbf41fab2cf0ab34a9c96dda718df3866ce9f8e6edfd61e3639cb14f9e7e91e1
                exitCode: 0
                finishedAt: "2021-09-27T08:03:53Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:53Z"
          phase: Failed
          podIP: 172.20.64.50
          podIPs:
          - ip: 172.20.64.50
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: d508e871bb599d84ec3357007494481d394c68f491f60c84bbf36231bd30e876
            cni.projectcalico.org/podIP: 172.20.64.24/32
            cni.projectcalico.org/podIPs: 172.20.64.24/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:11Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: git-resource-ref-g7cg4
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:03:45Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"d4505dc3-675a-419e-8996-60c040a4ff5e"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-skaffold-jhzjb"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-unnamed-1"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:20Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.24"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:20Z"
          name: git-resource-ref-g7cg4-pod-5czhc
          namespace: arendelle-dh8sw
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: git-resource-ref-g7cg4
            uid: d4505dc3-675a-419e-8996-60c040a4ff5e
          resourceVersion: "5508148"
          selfLink: /api/v1/namespaces/arendelle-dh8sw/pods/git-resource-ref-g7cg4-pod-5czhc
          uid: 45a20fd5-a1e2-4523-9f00-39bfbf6e4f3c
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-skaffold-jhzjb
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/skaffold
            - -revision
            - pull/2932/head
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: skaffold
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-skaffold-jhzjb
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-1
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-2skc5
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-1
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-2skc5"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKY2F0IHNrYWZmb2xkL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-ksnhv
            secret:
              defaultMode: 420
              secretName: default-token-ksnhv
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:04Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:20Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:20Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://50f7e539aec50025d73ac1f92846a15e84daae47dd4ee421d7bd5e4a75b71f07
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-skaffold-jhzjb
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:07Z"
          - containerID: docker://5221b0cb21eaa8954eb5590c03151669822784396bcefc9efb9fca964462b8ca
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-unnamed-1
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:19Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://487da46c2333316eb91833bdc5108ab5e548df88d5ff2bfe3761205c78428568
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://487da46c2333316eb91833bdc5108ab5e548df88d5ff2bfe3761205c78428568
                exitCode: 0
                finishedAt: "2021-09-27T08:03:49Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:49Z"
          - containerID: docker://c1306ae0188a1513d1244897b918da209c94eb62eee9d46a453fe746d09cc1f0
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://c1306ae0188a1513d1244897b918da209c94eb62eee9d46a453fe746d09cc1f0
                exitCode: 0
                finishedAt: "2021-09-27T08:03:59Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:59Z"
          phase: Running
          podIP: 172.20.64.24
          podIPs:
          - ip: 172.20.64.24
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 766a3b90c4ecdc3f667c2b91976ba35d7801d8d07722becaf6af4550febaf84a
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:11Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: git-resource-sslverify-djjd7
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"eec9dd8a-c33b-40ef-821f-7cbcad16621e"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-skaffold-7k4x7"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-unnamed-1"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:08Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.42"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:12Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:04:13Z"
          name: git-resource-sslverify-djjd7-pod-hhkjw
          namespace: arendelle-dh8sw
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: git-resource-sslverify-djjd7
            uid: eec9dd8a-c33b-40ef-821f-7cbcad16621e
          resourceVersion: "5508010"
          selfLink: /api/v1/namespaces/arendelle-dh8sw/pods/git-resource-sslverify-djjd7-pod-hhkjw
          uid: e979d9c9-524a-4c9f-9b85-7a80045f1953
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-skaffold-7k4x7
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/skaffold
            - -revision
            - master
            - -sslVerify=false
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: skaffold
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-skaffold-7k4x7
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-1
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-5c4xm
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-1
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-5c4xm"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKY2F0IHNrYWZmb2xkL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-ksnhv
            secret:
              defaultMode: 420
              secretName: default-token-ksnhv
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:54Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:12Z"
            message: 'containers with unready status: [step-git-source-skaffold-7k4x7 step-unnamed-1]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:12Z"
            message: 'containers with unready status: [step-git-source-skaffold-7k4x7 step-unnamed-1]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://ba8471240a29361f815375960a43c6f4bb67a476630ace97c74bceb5a9b3c813
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-skaffold-7k4x7
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://ba8471240a29361f815375960a43c6f4bb67a476630ace97c74bceb5a9b3c813
                exitCode: 1
                finishedAt: "2021-09-27T08:04:10Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:09.620Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:03:59Z"
          - containerID: docker://230034e46859566d94036cf433c12cf20b9fda20e04590ddb06dee72ecceaf6c
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-unnamed-1
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://230034e46859566d94036cf433c12cf20b9fda20e04590ddb06dee72ecceaf6c
                exitCode: 1
                finishedAt: "2021-09-27T08:04:10Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:04:10.356Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:04:06Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://259f1450af71dca261e39424016e042b6aadf53476cef201296cad7d1c612461
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://259f1450af71dca261e39424016e042b6aadf53476cef201296cad7d1c612461
                exitCode: 0
                finishedAt: "2021-09-27T08:03:40Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:40Z"
          - containerID: docker://96457113a35493c5588d6070c016c573784b623bd3e5d0320597634b781e21cd
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://96457113a35493c5588d6070c016c573784b623bd3e5d0320597634b781e21cd
                exitCode: 0
                finishedAt: "2021-09-27T08:03:53Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:52Z"
          phase: Failed
          podIP: 172.20.64.42
          podIPs:
          - ip: 172.20.64.42
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 33700d252c3bc1ce0e1537397f83347f1e3d52b443890223852dae585eaf63f2
            cni.projectcalico.org/podIP: 172.20.64.44/32
            cni.projectcalico.org/podIPs: 172.20.64.44/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:02:10Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: git-resource-tag-7hqcw
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:03:41Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"bc4bcfb7-ea8c-44d0-8b90-6ecca9ee1a2a"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-skaffold-95hfr"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-unnamed-1"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:04:21Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.44"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:04:21Z"
          name: git-resource-tag-7hqcw-pod-pdswc
          namespace: arendelle-dh8sw
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: git-resource-tag-7hqcw
            uid: bc4bcfb7-ea8c-44d0-8b90-6ecca9ee1a2a
          resourceVersion: "5508164"
          selfLink: /api/v1/namespaces/arendelle-dh8sw/pods/git-resource-tag-7hqcw-pod-pdswc
          uid: 2e507c4d-64b9-4f99-a4e7-d5110f49f2d3
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-skaffold-95hfr
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/skaffold
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: skaffold
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-skaffold-95hfr
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-unnamed-1
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-7zrxn
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-unnamed-1
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /workspace
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-7zrxn"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKY2F0IHNrYWZmb2xkL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-ksnhv
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-ksnhv
            secret:
              defaultMode: 420
              secretName: default-token-ksnhv
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:05Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:21Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:04:21Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:03:31Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://29cec4f9363e93ad216a87bd41ca244a9d81a0435337a78203881d31dfbbebf5
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-skaffold-95hfr
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:07Z"
          - containerID: docker://7fcf3962665537622d80c1bad07c8a4dee289cd466fe51fd158f26faaef24ba5
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-unnamed-1
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:04:18Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://7e045b0ed231a148c46559972ee0114488cf921548dee95e38593d89d3cdd3ab
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://7e045b0ed231a148c46559972ee0114488cf921548dee95e38593d89d3cdd3ab
                exitCode: 0
                finishedAt: "2021-09-27T08:03:47Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:47Z"
          - containerID: docker://a0a2c1130445e6a6a45213d71b749c0fa326a3ca4e33473eb489c6a420088d0e
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://a0a2c1130445e6a6a45213d71b749c0fa326a3ca4e33473eb489c6a420088d0e
                exitCode: 0
                finishedAt: "2021-09-27T08:03:59Z"
                reason: Completed
                startedAt: "2021-09-27T08:03:59Z"
          phase: Running
          podIP: 172.20.64.44
          podIPs:
          - ip: 172.20.64.44
          qosClass: BestEffort
          startTime: "2021-09-27T08:03:31Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-dh8sw ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-45j6p"
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-n92x8"
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    build_logs.go:35: Could not get logs for pod retry-example-8hhfn-hello-world-hkwh2-pod-8wsdg: container "step-unnamed-0" in pod "retry-example-8hhfn-hello-world-hkwh2-pod-8wsdg" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    build_logs.go:37: build logs 
        >>> Container step-git-source-skaffold-nmkh7:
        {"level":"error","ts":1632729857.719026,"caller":"git/git.go:54","msg":"Error running git [fetch --recurse-submodules=yes --depth=1 origin --update-head-ok --force master]: exit status 128\nfatal: couldn't find remote ref master\n","stacktrace":"github.com/tektoncd/pipeline/pkg/git.run\n\tgithub.com/tektoncd/pipeline/pkg/git/git.go:54\ngithub.com/tektoncd/pipeline/pkg/git.Fetch\n\tgithub.com/tektoncd/pipeline/pkg/git/git.go:149\nmain.main\n\tgithub.com/tektoncd/pipeline/cmd/git-init/main.go:53\nruntime.main\n\truntime/proc.go:204"}
        {"level":"fatal","ts":1632729857.7191958,"caller":"git-init/main.go:54","msg":"Error fetching git repository: failed to fetch [master]: exit status 128","stacktrace":"main.main\n\tgithub.com/tektoncd/pipeline/cmd/git-init/main.go:54\nruntime.main\n\truntime/proc.go:204"}
        
        >>> Container step-unnamed-1:
        2021/09/27 08:04:18 Skipping step because a previous step failed
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    build_logs.go:37: build logs 
        >>> Container step-unnamed-0:
        This is the last retry.
=== CONT  TestExamples/v1alpha1/taskruns/workingdir
    init_test.go:135: Create namespace arendelle-ltvtj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ltvtj"
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    build_logs.go:37: build logs 
        >>> Container step-git-source-skaffold-h72sm:
        {"level":"error","ts":1632729860.4044619,"caller":"git/git.go:54","msg":"Error running git [fetch --recurse-submodules=yes --depth=1 origin --update-head-ok --force master]: exit status 128\nfatal: couldn't find remote ref master\n","stacktrace":"github.com/tektoncd/pipeline/pkg/git.run\n\tgithub.com/tektoncd/pipeline/pkg/git/git.go:54\ngithub.com/tektoncd/pipeline/pkg/git.Fetch\n\tgithub.com/tektoncd/pipeline/pkg/git/git.go:149\nmain.main\n\tgithub.com/tektoncd/pipeline/cmd/git-init/main.go:53\nruntime.main\n\truntime/proc.go:204"}
        {"level":"fatal","ts":1632729860.4045782,"caller":"git-init/main.go:54","msg":"Error fetching git repository: failed to fetch [master]: exit status 128","stacktrace":"main.main\n\tgithub.com/tektoncd/pipeline/cmd/git-init/main.go:54\nruntime.main\n\truntime/proc.go:204"}
        
        >>> Container step-unnamed-1:
        2021/09/27 08:04:20 Skipping step because a previous step failed
    build_logs.go:37: build logs 
        >>> Container step-git-source-skaffold-jhzjb:
        {"level":"info","ts":1632729887.7352629,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 045e5ea4f1d42421095d9f4616dbe41c49fa292b (grafted, HEAD) in path /workspace/skaffold"}
        {"level":"info","ts":1632729887.7589445,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/skaffold"}
        
        >>> Container step-unnamed-1:
        + cat skaffold/README.md
        <!-- github does not support `width` with markdown images-->
        <img src="logo/skaffold.png" width="220">
        
        ## Community
        
        **We'd love to hear from you!**
        
        * [skaffold-users mailing list](https://groups.google.com/forum/#!forum/skaffold-users)
        * [#skaffold on Kubernetes Slack](https://kubernetes.slack.com/messages/CABQMSZA6/)
        
        We host community office hours bi-weekly from 9:30am-10am PST, hosted on hangouts as "skaffold". This is an open forum for anyone to ask questions, voice concerns, present ideas, and discuss design and future plans for the project. Anyone is welcome, whether you've been using Skaffold since launch or you're just getting started. There are no dumb questions!
        
        This is also a great place for you to share your user journey with Skaffold - come show off how you're using the tool! Demos are encouraged.
        
        Please feel free to add suggestions to the [agenda](https://docs.google.com/document/d/1mnCC_fAI3pmg3Vb2nMJyPk8Qtjjuapw_BTyqI_dX7sk/edit) and attend.
        
        Join the [skaffold-users mailing list](https://groups.google.com/forum/#!forum/skaffold-users) to get the calendar invite directly on your calendar.
        You can access the hangouts invite directly from this calendar invite.
        
        ---------------------
        
        [![Build Status](https://travis-ci.org/GoogleContainerTools/skaffold.svg?branch=master)](https://travis-ci.org/GoogleContainerTools/skaffold)
        [![Code Coverage](https://codecov.io/gh/GoogleContainerTools/skaffold/branch/master/graph/badge.svg)](https://codecov.io/gh/GoogleContainerTools/skaffold)
        [![Go Report Card](https://goreportcard.com/badge/GoogleContainerTools/skaffold)](https://goreportcard.com/report/GoogleContainerTools/skaffold)
        [![LICENSE](https://img.shields.io/github/license/GoogleContainerTools/skaffold.svg)](https://github.com/GoogleContainerTools/skaffold/blob/master/LICENSE)
        [![Releases](https://img.shields.io/github/release-pre/GoogleContainerTools/skaffold.svg)](https://github.com/GoogleContainerTools/skaffold/releases)
        
        Skaffold is a command line tool that facilitates continuous development for
        Kubernetes applications. You can iterate on your application source code
        locally then deploy to local or remote Kubernetes clusters. Skaffold handles
        the workflow for building, pushing and deploying your application. It also
        provides building blocks and describe customizations for a CI/CD pipeline.
        
        ## Features
        
        * Fast local Kubernetes Development
          * **optimized source-to-k8s** - Skaffold detects changes in your source code and handles the pipeline to
          **build**, **push**, and **deploy** your application automatically with **policy based image tagging** and **highly optimized, fast local workflows**
          * **continuous feedback** - Skaffold automatically manages logging and port-forwarding
        * Skaffold projects work everywhere
          * **share with other developers** - Skaffold is the easiest way to **share your project** with the world: `git clone` and `skaffold run`
          * **context aware** - use Skaffold profiles, user level config, environment variables and flags to describe differences in environments
          * **CI/CD building blocks** - use `skaffold run` end-to-end or just part of skaffold stages from build to deployment in your CI/CD system
        * skaffold.yaml - a single pluggable, declarative configuration for your project
          * **skaffold init** - Skaffold discovers your files and generates its own config file
          * **multi-component apps** - Skaffold supports applications consisting of multiple components
          * **bring your own tools** - Skaffold has a pluggable architecture to allow for different implementations of the stages
        * Lightweight
          * **client-side only** - Skaffold does not require maintaining a cluster-side component, so there is no overhead or maintenance burden to
          your cluster.
          * **minimal pipeline** - Skaffold provides an opinionated, minimal pipeline to keep things simple
        
        ## Install
        
        Installation methods can be found in the [Getting Started Guide](https://skaffold.dev/docs/getting-started/#installing-skaffold).
        
        See [Github Releases](https://github.com/GoogleContainerTools/skaffold/releases) for more information.
        
        ## Demo
        
        ![Demo](docs/static/images/intro.gif)
        
        ## A Glance at Skaffold Workflow and Architecture
        
        Skaffold simplifies your development workflow by organizing common development
        stages into one simple command. Every time you run `skaffold dev`, the system
        
        1. Collects and watches your source code for changes
        1. Syncs files directly to pods if user marks them as syncable
        1. Builds artifacts from the source code
        1. Tests the built artifacts using container-structure-tests
        1. Tags the artifacts
        1. Pushes the artifacts
        1. Deploys the artifacts
        1. Monitors the deployed artifacts
        1. Cleans up deployed artifacts on exit (Ctrl+C)
        
        What's more, the pluggable architecture is central to Skaffold's design, allowing you to use
        the tool you prefer in each stage. Also, Skaffold's `profiles` feature grants
        you the freedom to switch tools as you see fit depending on the context.
        
        For example, if you are coding on a local machine, you can configure Skaffold to build artifacts
        with local Docker daemon and deploy them to minikube
        using `kubectl`, the Kubernetes command-line interface and when you finalize your
        design, you can switch to the production profile and start building with
        Google Cloud Build and deploy with Helm.
        
        Skaffold supports the following tools:
        
        * Build
          * Dockerfile locally
          * Dockerfile in-cluster (kaniko)
          * Dockerfile on cloud (Google Cloud Build)
          * Bazel locally
          * Jib Maven/Gradle locally
        * Test
          * with container-structure-test
        * Tag
          * tag by git commit
          * tag by current date&time
          * tag by environment variables based template
        * Push
          * don't push - keep the image on the local daemon
          * push to registry
        * Deploy
          * Kubernetes Command-Line Interface (`kubectl`)
          * Helm
          * kustomize
        
        ![architecture](docs/static/images/architecture.png)
        
        Besides the above steps, skaffold also automatically manages the following utilities for you:
        
        * forwards container ports to your local machine using `kubectl port-forward`
        * aggregates all the logs from the deployed pods
        
        ## Documentation
        
        Documentation for latest release: <https://skaffold.dev>
        
        Documentation for latest build: <https://skaffold-latest.firebaseapp.com>
        
        ## More examples
        
        Check out our [examples page](./examples)
    build_logs.go:37: build logs 
        >>> Container step-git-source-skaffold-7k4x7:
        {"level":"error","ts":1632729850.2288017,"caller":"git/git.go:54","msg":"Error running git [fetch --recurse-submodules=yes --depth=1 origin --update-head-ok --force master]: exit status 128\nfatal: couldn't find remote ref master\n","stacktrace":"github.com/tektoncd/pipeline/pkg/git.run\n\tgithub.com/tektoncd/pipeline/pkg/git/git.go:54\ngithub.com/tektoncd/pipeline/pkg/git.Fetch\n\tgithub.com/tektoncd/pipeline/pkg/git/git.go:149\nmain.main\n\tgithub.com/tektoncd/pipeline/cmd/git-init/main.go:53\nruntime.main\n\truntime/proc.go:204"}
        {"level":"fatal","ts":1632729850.2289746,"caller":"git-init/main.go:54","msg":"Error fetching git repository: failed to fetch [master]: exit status 128","stacktrace":"main.main\n\tgithub.com/tektoncd/pipeline/cmd/git-init/main.go:54\nruntime.main\n\truntime/proc.go:204"}
        
        >>> Container step-unnamed-1:
        2021/09/27 08:04:10 Skipping step because a previous step failed
    build_logs.go:37: build logs 
        >>> Container step-git-source-skaffold-95hfr:
        {"level":"info","ts":1632729872.8302197,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/skaffold"}
        {"level":"info","ts":1632729872.853113,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/skaffold"}
        
        >>> Container step-unnamed-1:
        + cat skaffold/README.md
        <!-- github does not support `width` with markdown images-->
        <img src="logo/skaffold.png" width="220">
        
        ---------------------
        
        [![Build Status](https://travis-ci.org/GoogleContainerTools/skaffold.svg?branch=master)](https://travis-ci.org/GoogleContainerTools/skaffold)
        [![Code Coverage](https://codecov.io/gh/GoogleContainerTools/skaffold/branch/master/graph/badge.svg)](https://codecov.io/gh/GoogleContainerTools/skaffold)
        [![Go Report Card](https://goreportcard.com/badge/GoogleContainerTools/skaffold)](https://goreportcard.com/report/GoogleContainerTools/skaffold)
        [![LICENSE](https://img.shields.io/github/license/GoogleContainerTools/skaffold.svg)](https://github.com/GoogleContainerTools/skaffold/blob/master/LICENSE)
        [![Releases](https://img.shields.io/github/release-pre/GoogleContainerTools/skaffold.svg)](https://github.com/GoogleContainerTools/skaffold/releases)
        
        Skaffold is a command line tool that facilitates continuous development for
        Kubernetes applications. You can iterate on your application source code
        locally then deploy to local or remote Kubernetes clusters. Skaffold handles
        the workflow for building, pushing and deploying your application. It also
        provides building blocks and describe customizations for a CI/CD pipeline.
        
        ## Features
        
        * Fast local Kubernetes Development
          * **optimized source-to-k8s** - Skaffold detects changes in your source code and handles the pipeline to
          **build**, **push**, and **deploy** your application automatically with **policy based image tagging** and **highly optimized, fast local workflows**
          * **continuous feedback** - Skaffold automatically manages logging and port-forwarding
        * Skaffold projects work everywhere
          * **share with other developers** - Skaffold is the easiest way to **share your project** with the world: `git clone` and `skaffold run`
          * **context aware** - use Skaffold profiles, user level config, environment variables and flags to describe differences in environments
          * **CI/CD building blocks** - use `skaffold run` end-to-end or just part of skaffold stages from build to deployment in your CI/CD system
        * skaffold.yaml - a single pluggable, declarative configuration for your project
          * **skaffold init** - Skaffold discovers your files and generates its own config file
          * **multi-component apps** - Skaffold supports applications consisting of multiple components
          * **bring your own tools** - Skaffold has a pluggable architecture to allow for different implementations of the stages
        * Lightweight
          * **client-side only** - Skaffold does not require maintaining a cluster-side component, so there is no overhead or maintenance burden to
          your cluster.
          * **minimal pipeline** - Skaffold provides an opinionated, minimal pipeline to keep things simple
        
        ## Install
        
        Installation methods can be found in the [Getting Started Guide](https://skaffold.dev/docs/getting-started/#installing-skaffold).
        
        See [Github Releases](https://github.com/GoogleContainerTools/skaffold/releases) for more information.
        
        ## Demo
        
        ![Demo](docs/static/images/intro.gif)
        
        ## A Glance at Skaffold Workflow and Architecture
        
        Skaffold simplifies your development workflow by organizing common development
        stages into one simple command. Every time you run `skaffold dev`, the system
        
        1. Collects and watches your source code for changes
        1. Syncs files directly to pods if user marks them as syncable
        1. Builds artifacts from the source code
        1. Tests the built artifacts using container-structure-tests
        1. Tags the artifacts
        1. Pushes the artifacts
        1. Deploys the artifacts
        1. Monitors the deployed artifacts
        1. Cleans up deployed artifacts on exit (Ctrl+C)
        
        What's more, the pluggable architecture is central to Skaffold's design, allowing you to use
        the tool you prefer in each stage. Also, Skaffold's `profiles` feature grants
        you the freedom to switch tools as you see fit depending on the context.
        
        For example, if you are coding on a local machine, you can configure Skaffold to build artifacts
        with local Docker daemon and deploy them to minikube
        using `kubectl`, the Kubernetes command-line interface and when you finalize your
        design, you can switch to the production profile and start building with
        Google Cloud Build and deploy with Helm.
        
        Skaffold supports the following tools:
        
        * Build
          * Dockerfile locally
          * Dockerfile in-cluster (kaniko)
          * Dockerfile on cloud (Google Cloud Build)
          * Bazel locally
          * Jib Maven/Gradle locally
        * Test
          * with container-structure-test
        * Deploy
          * Kubernetes Command-Line Interface (`kubectl`)
          * Helm
          * kustomize
        * Tag
          * tag by git commit
          * tag by current date&time
          * tag by environment variables based template
          * tag by checksum of the source code
        * Push
          * don't push - keep the image on the local daemon
          * push to registry
        
        ![architecture](docs/static/images/architecture.png)
        
        Besides the above steps, skaffold also automatically manages the following utilities for you:
        
        * forwards container ports to your local machine using `kubectl port-forward`
        * aggregates all the logs from the deployed pods
        
        ## Documentation
        
        Documentation for latest release: <https://skaffold.dev>
        
        Documentation for latest build: <https://skaffold-latest.firebaseapp.com>
        
        ## More examples
        
        Check out our [examples page](./examples)
        
        ## Community
        
        * [skaffold-users mailing list](https://groups.google.com/forum/#!forum/skaffold-users)
        * [#skaffold on Kubernetes Slack](https://kubernetes.slack.com/messages/CABQMSZA6/)
        
        There is a bi-weekly Skaffold users meeting at 9:30am-10am PST hosted on hangouts under "skaffold".
        Everyone is welcome to add suggestions to the [agenda](https://docs.google.com/document/d/1mnCC_fAI3pmg3Vb2nMJyPk8Qtjjuapw_BTyqI_dX7sk/edit) and attend.
        Join the [skaffold-users mailing list](https://groups.google.com/forum/#!forum/skaffold-users) to get the calendar invite directly on your calendar.
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    init_test.go:135: Create namespace arendelle-5ttmg to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-5ttmg"
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
    examples_test.go:109: Deleting clustertask clustertask-with-optional-resources-v1beta1
    examples_test.go:169: Deleting namespace arendelle-n92x8
=== CONT  TestExamples/v1alpha1/taskruns/cloud-event
    init_test.go:135: Create namespace arendelle-nthbc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-nthbc"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
    examples_test.go:169: Deleting namespace arendelle-sgtml
=== CONT  TestExamples/v1alpha1/taskruns/build-push-kaniko
    init_test.go:135: Create namespace arendelle-8jq9m to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8jq9m"
=== CONT  TestExamples/v1alpha1/taskruns/configmap
    examples_test.go:169: Deleting namespace arendelle-g2xwr
=== CONT  TestExamples/v1alpha1/taskruns/clustertask
    init_test.go:135: Create namespace arendelle-wnkcv to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wnkcv"
=== CONT  TestExamples/v1alpha1/taskruns/workingdir
    examples_test.go:169: Deleting namespace arendelle-ltvtj
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
    init_test.go:135: Create namespace arendelle-sgx27 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-sgx27"
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    examples_test.go:169: Deleting namespace arendelle-5ttmg
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
    init_test.go:135: Create namespace arendelle-44fmn to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-44fmn"
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    examples_test.go:169: Deleting namespace arendelle-45j6p
=== CONT  TestExamples/v1beta1/taskruns/git-volume
    init_test.go:135: Create namespace arendelle-2jk2r to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-2jk2r"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    examples_test.go:169: Deleting namespace arendelle-kllpl
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
    init_test.go:135: Create namespace arendelle-6dvc5 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6dvc5"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
    examples_test.go:169: Deleting namespace arendelle-h8rd2
=== CONT  TestExamples/v1alpha1/taskruns/task-result
    init_test.go:135: Create namespace arendelle-ctgq8 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ctgq8"
panic: test timed out after 30m0s

goroutine 12600 [running]:
testing.(*M).startAlarm.func1()
	/usr/lib/golang/src/testing/testing.go:1618 +0x100
created by time.goFunc
	/usr/lib/golang/src/time/sleep.go:167 +0x48

goroutine 1 [chan receive, 29 minutes]:
testing.tRunner.func1(0xc000670d80)
	/usr/lib/golang/src/testing/testing.go:1088 +0x250
testing.tRunner(0xc000670d80, 0xc00089fb58)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
testing.runTests(0xc0007cb6c0, 0x13433380, 0x6, 0x6, 0xc04c7d01b35861ae, 0x1a31f2132c1, 0x134cb880, 0x124068d8)
	/usr/lib/golang/src/testing/testing.go:1437 +0x57c
testing.(*M).Run(0xc000409c80, 0x0)
	/usr/lib/golang/src/testing/testing.go:1345 +0x2e4
github.com/tektoncd/pipeline/test.TestMain(0xc000409c80)
	/root/rohan/pipeline/test/init_test.go:180 +0xc4
main.main()
	_testmain.go:55 +0x224

goroutine 19 [chan receive]:
k8s.io/klog/v2.(*loggingT).flushDaemon(0x134cc020)
	/root/go/pkg/mod/k8s.io/klog/v2@v2.8.0/klog.go:1164 +0x90
created by k8s.io/klog/v2.init.0
	/root/go/pkg/mod/k8s.io/klog/v2@v2.8.0/klog.go:418 +0x1a8

goroutine 20 [select]:
go.opencensus.io/stats/view.(*worker).start(0xc000408900)
	/root/go/pkg/mod/go.opencensus.io@v0.23.0/stats/view/worker.go:276 +0x174
created by go.opencensus.io/stats/view.init.0
	/root/go/pkg/mod/go.opencensus.io@v0.23.0/stats/view/worker.go:34 +0xa8

goroutine 21 [chan receive]:
k8s.io/klog.(*loggingT).flushDaemon(0x134cbf40)
	/root/go/pkg/mod/k8s.io/klog@v1.0.0/klog.go:1010 +0x90
created by k8s.io/klog.init.0
	/root/go/pkg/mod/k8s.io/klog@v1.0.0/klog.go:411 +0x18c

goroutine 65 [chan send, 5 minutes]:
testing.tRunner.func1(0xc000382600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000382600)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000382600, 0x1236da16, 0x28, 0xc0016bbb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc0014dcb40, 0xc000382600, 0xc0011efa70, 0xc000edfa80, 0x13)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000382600)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000382600, 0xc0007c07c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 52 [chan receive]:
knative.dev/pkg/metrics.(*metricsWorker).start(0xc000010048)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/metrics/metrics_worker.go:99 +0x54
created by knative.dev/pkg/metrics.init.0
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/metrics/exporter.go:39 +0xe4

goroutine 9 [chan receive, 24 minutes]:
testing.tRunner.func1(0xc00068a600)
	/usr/lib/golang/src/testing/testing.go:1088 +0x250
testing.tRunner(0xc00068a600, 0x12404168)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 39 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000671800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000671800, 0x12404180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 16 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000b38300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b38300, 0xc0001a4240)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 117 [chan send, 1 minutes]:
testing.tRunner.func1(0xc000382c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000382c00, 0xc0007c0c00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 92 [chan receive, 29 minutes]:
testing.runTests.func1.1(0xc000670d80)
	/usr/lib/golang/src/testing/testing.go:1444 +0x4c
created by testing.runTests.func1
	/usr/lib/golang/src/testing/testing.go:1444 +0xcc

goroutine 118 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000382d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000382d80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000382d80, 0x1236da16, 0x28, 0xc000e4bb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000f90f80, 0xc000382d80, 0xc000f8fa70, 0xc000e03060, 0x13)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000382d80)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000382d80, 0xc0007c0d00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 116 [chan send, 2 minutes]:
testing.tRunner.func1(0xc000382a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000382a80, 0xc0007c0b00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 114 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000aa9b40, 0xc000415a98, 0xc0008001e0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000aa9b40, 0xc00149da98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000aa9b40, 0xc00149da98, 0xc000aa9b40, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc00149da98, 0xc00149da48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc00130bb00, 0xc000382780, 0xc000dc1f50, 0xf, 0x126d6e60, 0xc001258f20)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc00130bb00, 0xc000382780, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000382780)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000382780, 0xc0007c08c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 15 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000b38000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b38000, 0xc0001a4100)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 115 [chan send, 1 minutes]:
testing.tRunner.func1(0xc000382900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000382900, 0xc0007c09c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 96 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001805a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000187c80)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000187c80)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000187c80, 0xc0001a4800)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 11835 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000dc6900, 0x3b9aca00, 0x8bb2c97000, 0xc000dc68a0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 64 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000382480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000382480, 0xc0007c0680)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 119 [chan send, 6 minutes]:
testing.tRunner.func1(0xc000382f00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000382f00)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000382f00, 0x1237087d, 0x29, 0xc0015cbe58, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000382f00)
	/root/rohan/pipeline/test/examples_test.go:153 +0x958
testing.tRunner(0xc000382f00, 0xc0007c0e00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 120 [chan send, 8 minutes]:
testing.tRunner.func1(0xc000383080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000383080, 0xc0007c0f40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 97 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000d0c760, 0xc0005d7a98, 0xc001033140, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000d0c760, 0xc0005d7a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000d0c760, 0xc0005d7a98, 0xc000d0c760, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0005d7a98, 0xc0005d7a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc00113c000, 0xc000187e00, 0xc000fa0aa0, 0xf, 0x126d6e60, 0xc00118b340)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc00113c000, 0xc000187e00, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000187e00)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000187e00, 0xc0001a4940)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 121 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000cf6b00, 0xc0017e7a98, 0xc000dc6840, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000cf6b00, 0xc00126ba98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000cf6b00, 0xc00126ba98, 0xc000cf6b00, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc00126ba98, 0xc00126ba48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc00150a280, 0xc000383200, 0xc0007bb6a0, 0xf, 0x126d6e60, 0xc000f34420)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc00150a280, 0xc000383200, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000383200)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000383200, 0xc0007c1640)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 122 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000ddee60, 0xc000037a98, 0xc000d1e300, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000ddee60, 0xc0005d3a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000ddee60, 0xc0005d3a98, 0xc000ddee60, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0005d3a98, 0xc0005d3a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc0013a8fc0, 0xc000383500, 0xc001390d50, 0xf, 0x126d6e60, 0xc000340c60)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc0013a8fc0, 0xc000383500, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000383500)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000383500, 0xc0007c1d40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 123 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0010cd7c0, 0xc00003ba98, 0xc000d1f140, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0010cd7c0, 0xc001267a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0010cd7c0, 0xc001267a98, 0xc0010cd7c0, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc001267a98, 0xc001267a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc00166c480, 0xc000383800, 0xc000724850, 0xf, 0x126d6e60, 0xc000f929a0)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc00166c480, 0xc000383800, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000383800)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000383800, 0xc0007c1e40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 124 [chan send, 2 minutes]:
testing.tRunner.func1(0xc0004dec00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0004dec00, 0xc0007c1f40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 125 [chan send, 2 minutes]:
testing.tRunner.func1(0xc0004df080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0004df080, 0xc0003a8040)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 126 [chan send, 24 minutes]:
testing.tRunner.func1(0xc0004df380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0004df380, 0xc0003a8140)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 127 [chan send, 22 minutes]:
testing.tRunner.func1(0xc0004df680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0004df680, 0xc0003a8240)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 128 [chan send, 26 minutes]:
testing.tRunner.func1(0xc0004df980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc0004df980)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc0004df980, 0x12355c05, 0x18, 0xc000b85ad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc0004df980)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc00102cc00, 0xc0004df980, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004df980)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc0004df980, 0xc0003a8340)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 129 [chan send, 5 minutes]:
testing.tRunner.func1(0xc0004dfc80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc0004dfc80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc0004dfc80, 0x12367481, 0x24, 0xc0016cdb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000e14fc0, 0xc0004dfc80, 0xc00154bef0, 0xc0014a1ac0, 0x16)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004dfc80)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0004dfc80, 0xc0003a8440)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 130 [chan send, 9 minutes]:
testing.tRunner.func1(0xc000001980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000001980, 0xc0003a8540)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 131 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000670a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000670a80, 0xc0003a8640)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 132 [chan send, 13 minutes]:
testing.tRunner.func1(0xc000671200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000671200, 0xc0003a8740)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 133 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000671680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000671680, 0xc0003a8840)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 134 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000671c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000671c80, 0xc0003a8940)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 135 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000702480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000702480, 0xc0003a8a40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 136 [chan send, 13 minutes]:
testing.tRunner.func1(0xc000702780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000702780, 0xc0003a8b40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 137 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000702a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000702a80, 0xc0003a8c80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 138 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000702d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000702d80, 0xc0003a8d80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 139 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000703080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000703080, 0xc0003a8e80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 140 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000703380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000703380, 0xc0003a8f80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 141 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000703680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000703680, 0xc0003a9140)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 142 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000703980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000703980, 0xc0003a9240)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 143 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000703c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000703c80, 0xc0003a9340)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 144 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000bd8000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd8000, 0xc0003a9440)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 145 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000bd8300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd8300, 0xc0003a9540)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 146 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000bd8600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd8600, 0xc0003a9640)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 147 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000bd8900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd8900, 0xc0003a9740)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 148 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000bd8c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd8c00, 0xc0003a9880)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 149 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0012ebba0, 0xc0017e3a98, 0xc000beafc0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0012ebba0, 0xc000037a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0012ebba0, 0xc000037a98, 0xc0012ebba0, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc000037a98, 0xc000037a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc0015af740, 0xc000bd8f00, 0xc001627b70, 0xf, 0x126d6e60, 0xc000fa5b80)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc0015af740, 0xc000bd8f00, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bd8f00)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000bd8f00, 0xc0003a9980)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 150 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000bd9200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd9200, 0xc0003a9b80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 151 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000bd9500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd9500, 0xc0003a9e00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 152 [chan send, 5 minutes]:
testing.tRunner.func1(0xc000bd9800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bd9800)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bd9800, 0x12367481, 0x24, 0xc0016c5b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc0011bb280, 0xc000bd9800, 0xc0013b79e0, 0xc001286b20, 0x13)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bd9800)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bd9800, 0xc0003a9f00)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 153 [chan send, 2 minutes]:
testing.tRunner.func1(0xc000bd9b00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd9b00, 0xc000bea040)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 154 [chan send, 9 minutes]:
testing.tRunner.func1(0xc000bd9e00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bd9e00, 0xc000bea140)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 155 [chan send, 10 minutes]:
testing.tRunner.func1(0xc000bee180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bee180, 0xc000bea240)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 156 [chan send, 9 minutes]:
testing.tRunner.func1(0xc000bee480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bee480, 0xc000bea340)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 157 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000bee780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bee780)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bee780, 0x12345608, 0xd, 0xc000469e68, 0x2, 0x2)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bee780)
	/root/rohan/pipeline/test/examples_test.go:144 +0x4dc
testing.tRunner(0xc000bee780, 0xc000bea440)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 158 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc00122be00, 0xc0017d9a98, 0xc000dc7bc0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc00122be00, 0xc0014a1a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc00122be00, 0xc0014a1a98, 0xc00122be00, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0014a1a98, 0xc0014a1a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000e15400, 0xc000beea80, 0xc000918530, 0xf, 0x126d6e60, 0xc0012d4f20)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000e15400, 0xc000beea80, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000beea80)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000beea80, 0xc000bea540)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 159 [chan send, 5 minutes]:
testing.tRunner.func1(0xc000beed80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000beed80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000beed80, 0x1236da16, 0x28, 0xc00176bb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc0013ab980, 0xc000beed80, 0xc001354bd0, 0xc001547b20, 0x15)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000beed80)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000beed80, 0xc000bea640)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 160 [chan send, 5 minutes]:
testing.tRunner.func1(0xc000bef080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bef080)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bef080, 0x1236da16, 0x28, 0xc0016c1b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000fd5580, 0xc000bef080, 0xc000ee73b0, 0xc00111b360, 0xe)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bef080)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bef080, 0xc000bea740)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 161 [chan send, 6 minutes]:
testing.tRunner.func1(0xc000bef380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bef380, 0xc000bea840)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 99 [chan send, 5 minutes]:
testing.tRunner.func1(0xc00068b800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc00068b800)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc00068b800, 0x1236da16, 0x28, 0xc0016b7b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000d97340, 0xc00068b800, 0xc000dc8630, 0xc000d0c0e0, 0x19)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc00068b800)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc00068b800, 0xc0007390c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 100 [chan send, 25 minutes]:
testing.tRunner.func1(0xc00068bb00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00068bb00, 0xc0007391c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 101 [chan send, 27 minutes]:
testing.tRunner.func1(0xc00068be00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc00068be00, 0xc0007392c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 162 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000b38480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b38480, 0xc0001a4440)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 163 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000b38780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b38780, 0xc0001a48c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 164 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000b38a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b38a80, 0xc0001a4ac0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 165 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000b38d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b38d80, 0xc0001a4c40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 166 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000b39080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b39080, 0xc0001a4d80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 167 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000b39380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b39380, 0xc0001a5000)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 168 [chan send, 15 minutes]:
testing.tRunner.func1(0xc000b39680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b39680, 0xc0001a5300)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 169 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000b39980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b39980, 0xc0001a5540)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 170 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000b39c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b39c80, 0xc0001a5640)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 171 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000c9c180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c9c180, 0xc0001a5740)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 172 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000c9c480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000c9c480)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000c9c480, 0x12355c05, 0x18, 0xc000145ad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc000c9c480)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000e14500, 0xc000c9c480, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000c9c480)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000c9c480, 0xc0001a5840)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 173 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000c9c780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c9c780, 0xc0001a5940)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 174 [chan send, 13 minutes]:
testing.tRunner.func1(0xc000c9ca80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c9ca80, 0xc0001a5a40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 175 [chan send, 5 minutes]:
testing.tRunner.func1(0xc000c9cd80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000c9cd80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000c9cd80, 0x1236da16, 0x28, 0xc0016c9b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000f4a9c0, 0xc000c9cd80, 0xc0011fbb00, 0xc000c63140, 0x13)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000c9cd80)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000c9cd80, 0xc0001a5b40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 176 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000c9d080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c9d080, 0xc0001a5c40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 177 [chan send, 5 minutes]:
testing.tRunner.func1(0xc000c9d380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000c9d380)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000c9d380, 0x1236da16, 0x28, 0xc000415b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000efd600, 0xc000c9d380, 0xc00154b170, 0xc000edf800, 0x17)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000c9d380)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000c9d380, 0xc0001a5d40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 194 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000c9d680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c9d680, 0xc0001a5e40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 195 [chan send, 15 minutes]:
testing.tRunner.func1(0xc000c9d980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c9d980, 0xc0001a5f40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 196 [chan send, 15 minutes]:
testing.tRunner.func1(0xc000c9dc80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c9dc80, 0xc000738240)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 197 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000bef680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bef680, 0xc000738800)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 198 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000bef980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bef980, 0xc000738900)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 199 [chan send, 15 minutes]:
testing.tRunner.func1(0xc000befc80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000befc80, 0xc000738b00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 200 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000187200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000187200, 0xc000738c80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 201 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000187680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000187680, 0xc000738d80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 202 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000382180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000382180, 0xc000738e80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 203 [chan send, 27 minutes]:
testing.tRunner.func1(0xc00068b200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc00068b200)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc00068b200, 0x12355c05, 0x18, 0xc000164ad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc00068b200)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000994d80, 0xc00068b200, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc00068b200)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc00068b200, 0xc000738f80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 204 [chan send, 27 minutes]:
testing.tRunner.func1(0xc0001a6000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0001a6000, 0xc0007393c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 205 [chan send, 9 minutes]:
testing.tRunner.func1(0xc0001a6300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0001a6300, 0xc0007394c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 206 [chan send, 19 minutes]:
testing.tRunner.func1(0xc0001a6600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0001a6600, 0xc0007395c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 181 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000aa8e40, 0xc0017dda98, 0xc00120a180, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000aa8e40, 0xc00003ba98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000aa8e40, 0xc00003ba98, 0xc000aa8e40, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc00003ba98, 0xc00003ba48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc001792c80, 0xc000103080, 0xc00155e0a0, 0xf, 0x126d6e60, 0xc0017d51e0)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc001792c80, 0xc000103080, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000103080)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000103080, 0xc00004ffc0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 182 [chan send, 1 minutes]:
testing.tRunner.func1(0xc000103380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103380, 0xc000836180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 183 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000103680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103680, 0xc000836280)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 184 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000103980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000103980)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000103980, 0x12345608, 0xd, 0xc000037e68, 0x2, 0x2)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000103980)
	/root/rohan/pipeline/test/examples_test.go:144 +0x4dc
testing.tRunner(0xc000103980, 0xc000836380)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 185 [chan send, 2 minutes]:
testing.tRunner.func1(0xc000103c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103c80, 0xc000836480)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 186 [chan send, 10 minutes]:
testing.tRunner.func1(0xc0002bc000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002bc000, 0xc000836580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 187 [chan send, 11 minutes]:
testing.tRunner.func1(0xc0002bc300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002bc300, 0xc000836680)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 102 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000cac000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cac000, 0xc00057b500)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 103 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000cac300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cac300, 0xc00057b700)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 104 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000cac600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cac600, 0xc00057b840)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 105 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000cac900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cac900, 0xc00057b940)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 106 [chan send, 22 minutes]:
testing.tRunner.func1(0xc000cacc00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cacc00, 0xc00057ba80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 107 [chan send, 27 minutes]:
testing.tRunner.func1(0xc000cacf00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cacf00, 0xc00057bc80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 108 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000cad200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cad200, 0xc00057be80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 109 [chan send, 27 minutes]:
testing.tRunner.func1(0xc000cad500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cad500, 0xc00057bfc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 110 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000cad800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cad800, 0xc0007c0180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 111 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000cadb00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cadb00, 0xc0007c0280)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 112 [chan send, 15 minutes]:
testing.tRunner.func1(0xc000cade00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cade00, 0xc0007c0380)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 113 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000cc8180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cc8180, 0xc0007c0480)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 210 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000ad6000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ad6000, 0xc0003a8080)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 211 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000ad6300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ad6300, 0xc0003a8180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 212 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000ad6600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ad6600, 0xc0003a8280)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 213 [chan send, 23 minutes]:
testing.tRunner.func1(0xc000ad6900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ad6900, 0xc0003a8380)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 214 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000ad6c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ad6c00, 0xc0003a8480)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 215 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000ad6f00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ad6f00, 0xc0003a8580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 216 [chan send, 22 minutes]:
testing.tRunner.func1(0xc000ad7200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000ad7200, 0xc0003a8680)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 226 [chan send, 29 minutes]:
testing.tRunner.func1(0xc000cc8480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cc8480, 0xc0007c0580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 227 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000cc8780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cc8780, 0xc0007c06c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 228 [chan send, 29 minutes]:
testing.tRunner.func1(0xc000cc8a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cc8a80, 0xc0007c07c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 229 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000cc8d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cc8d80, 0xc0007c08c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 230 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000cc9080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cc9080, 0xc0007c09c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 231 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000cc9380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000cc9380, 0xc0007c0b00)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 243 [IO wait]:
internal/poll.runtime_pollWait(0x7ffff74ea0b0, 0x72, 0x134435a8)
	/usr/lib/golang/src/runtime/netpoll.go:222 +0x50
internal/poll.(*pollDesc).wait(0xc00080c298, 0x72, 0x1264e200, 0x134435a8, 0x0)
	/usr/lib/golang/src/internal/poll/fd_poll_runtime.go:87 +0xe4
internal/poll.(*pollDesc).waitRead(...)
	/usr/lib/golang/src/internal/poll/fd_poll_runtime.go:92
internal/poll.(*FD).Read(0xc00080c280, 0xc0008aa000, 0xaa1d, 0xaa1d, 0x0, 0x0, 0x0)
	/usr/lib/golang/src/internal/poll/fd_unix.go:159 +0x1bc
net.(*netFD).Read(0xc00080c280, 0xc0008aa000, 0xaa1d, 0xaa1d, 0xaa18, 0xc0003ff0a0, 0xc)
	/usr/lib/golang/src/net/fd_posix.go:55 +0x50
net.(*conn).Read(0xc0003b6238, 0xc0008aa000, 0xaa1d, 0xaa1d, 0x101721bc, 0x7, 0x1049ec68)
	/usr/lib/golang/src/net/net.go:182 +0xac
crypto/tls.(*atLeastReader).Read(0xc001710680, 0xc0008aa000, 0xaa1d, 0xaa1d, 0xeb, 0x12648340, 0xd5)
	/usr/lib/golang/src/crypto/tls/conn.go:779 +0x8c
bytes.(*Buffer).ReadFrom(0xc000248600, 0x12648140, 0xc001710680, 0xeb, 0xc0008aa005, 0xc0008aa005)
	/usr/lib/golang/src/bytes/buffer.go:204 +0x120
crypto/tls.(*Conn).readFromUntil(0xc000248380, 0x1264c200, 0xc0003b6238, 0x5, 0xc0003b6238, 0xd5)
	/usr/lib/golang/src/crypto/tls/conn.go:801 +0x1ac
crypto/tls.(*Conn).readRecordOrCCS(0xc000248380, 0x0, 0x0, 0x100475f0)
	/usr/lib/golang/src/crypto/tls/conn.go:608 +0x348
crypto/tls.(*Conn).readRecord(...)
	/usr/lib/golang/src/crypto/tls/conn.go:576
crypto/tls.(*Conn).Read(0xc000248380, 0xc000c3b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/usr/lib/golang/src/crypto/tls/conn.go:1252 +0x188
bufio.(*Reader).Read(0xc0003aa5a0, 0xc0001a83b8, 0x9, 0x9, 0x0, 0x0, 0x1074f638)
	/usr/lib/golang/src/bufio/bufio.go:227 +0x5d8
io.ReadAtLeast(0x12647f60, 0xc0003aa5a0, 0xc0001a83b8, 0x9, 0x9, 0x9, 0x10774d68, 0xc001585a00, 0x12648340)
	/usr/lib/golang/src/io/io.go:314 +0x88
io.ReadFull(...)
	/usr/lib/golang/src/io/io.go:333
golang.org/x/net/http2.readFrameHeader(0xc0001a83b8, 0x9, 0x9, 0x12647f60, 0xc0003aa5a0, 0x0, 0x0, 0xc0008fc8a0, 0x1007ede0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/frame.go:237 +0x68
golang.org/x/net/http2.(*Framer).ReadFrame(0xc0001a8380, 0xc0008fc8a0, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/frame.go:492 +0xbc
golang.org/x/net/http2.(*clientConnReadLoop).run(0xc001585fa8, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:1828 +0x144
golang.org/x/net/http2.(*ClientConn).readLoop(0xc000c38000)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:1750 +0x78
created by golang.org/x/net/http2.(*Transport).newClientConn
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:704 +0xa08

goroutine 188 [sync.Cond.Wait, 29 minutes]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc0006a0460, 0xc000000001)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc0006a0450)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc0006a0448, 0xc00084a001, 0x3dff, 0x3dff, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc0006a0420, 0xc00084a001, 0x3dff, 0x3dff, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
encoding/json.(*Decoder).refill(0xc0003d7b80, 0xa, 0x9)
	/usr/lib/golang/src/encoding/json/stream.go:165 +0x150
encoding/json.(*Decoder).readValue(0xc0003d7b80, 0x0, 0x0, 0x7ffff76425c0)
	/usr/lib/golang/src/encoding/json/stream.go:140 +0x388
encoding/json.(*Decoder).Decode(0xc0003d7b80, 0x12086fa0, 0xc0001b86e0, 0x1073aeec, 0x0)
	/usr/lib/golang/src/encoding/json/stream.go:63 +0x98
k8s.io/apimachinery/pkg/util/framer.(*jsonFrameReader).Read(0xc000b477d0, 0xc00086c000, 0x4000, 0x4a80, 0x0, 0xc000c16a00, 0x40)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/framer/framer.go:152 +0x2f4
k8s.io/apimachinery/pkg/runtime/serializer/streaming.(*decoder).Decode(0xc000727810, 0x0, 0x1265c720, 0xc000c16a00, 0x0, 0x0, 0x0, 0xc0007c3500, 0xc00007f800)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/runtime/serializer/streaming/streaming.go:77 +0xd0
k8s.io/client-go/rest/watch.(*Decoder).Decode(0xc00070ed80, 0xc0005ebd08, 0x2, 0x1, 0xc00007f800, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/client-go@v0.21.4/rest/watch/decoder.go:49 +0xc4
k8s.io/apimachinery/pkg/watch.(*StreamWatcher).receive(0xc0008367c0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/watch/streamwatcher.go:105 +0x108
created by k8s.io/apimachinery/pkg/watch.NewStreamWatcher
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/watch/streamwatcher.go:76 +0x19c

goroutine 189 [select, 29 minutes]:
knative.dev/pkg/test/logstream/v2.(*namespaceSource).watchPods.func1(0x1265cb60, 0xc0008367c0, 0xc00080c100)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:97 +0x1cc
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).watchPods
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:92 +0x1e0

goroutine 311 [sync.Cond.Wait, 1 minutes]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc000340720, 0xc00000316f)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc000340710)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc000340708, 0xc0009a2bcf, 0x1431, 0x1431, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc0003406e0, 0xc0009a2bcf, 0x1431, 0x1431, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
bufio.(*Scanner).Scan(0xc000d81f00, 0x43c)
	/usr/lib/golang/src/bufio/scan.go:214 +0x134
knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod.func1(0xc000699e20, 0x7, 0xc00080c100, 0xc0006996b0, 0x10, 0xc0005f05a0, 0x29, 0xc000b607f0)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:165 +0x320
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:148 +0x24c

goroutine 11792 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc001033200, 0x3b9aca00, 0x8bb2c97000, 0xc0010331a0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 276 [syscall, 29 minutes]:
os/signal.signal_recv(0x0)
	/usr/lib/golang/src/runtime/sigqueue.go:147 +0xf8
os/signal.loop()
	/usr/lib/golang/src/os/signal/signal_unix.go:23 +0x28
created by os/signal.Notify.func1.1
	/usr/lib/golang/src/os/signal/signal.go:150 +0x7c

goroutine 12133 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000beb080, 0x3b9aca00, 0x8bb2c97000, 0xc000beb020)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 277 [chan receive, 29 minutes]:
knative.dev/pkg/test.waitForInterrupt.func1(0xc0003b8600)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/cleanup.go:38 +0x38
created by knative.dev/pkg/test.waitForInterrupt
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/cleanup.go:37 +0xb4

goroutine 322 [sync.Cond.Wait, 1 minutes]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc0001e2b40, 0xc0000013f8)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc0001e2b30)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc0001e2b28, 0xc00043d79d, 0x863, 0x863, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc0001e2b00, 0xc00043d79d, 0x863, 0x863, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
bufio.(*Scanner).Scan(0xc000d83f00, 0x1e7)
	/usr/lib/golang/src/bufio/scan.go:214 +0x134
knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod.func1(0xc0009c4400, 0x1b, 0xc00080c100, 0xc000919290, 0x10, 0xc0009b4060, 0x2c, 0xc000c7c260)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:165 +0x320
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:148 +0x24c

goroutine 11802 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000d1e3c0, 0x3b9aca00, 0x8bb2c97000, 0xc000d1e360)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11806 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000d1f200, 0x3b9aca00, 0x8bb2c97000, 0xc000d1f1a0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11894 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc0008002a0, 0x3b9aca00, 0x8bb2c97000, 0xc000800240)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11907 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc00120a2a0, 0x3b9aca00, 0x8bb2c97000, 0xc00120a1e0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11858 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000dc7c80, 0x3b9aca00, 0x8bb2c97000, 0xc000dc7c20)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88
FAIL	github.com/tektoncd/pipeline/test	1800.139s
FAIL
