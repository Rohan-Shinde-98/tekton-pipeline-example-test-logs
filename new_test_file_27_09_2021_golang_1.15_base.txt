=== RUN   TestResourceVersionReactor
=== RUN   TestResourceVersionReactor/first_resource
=== RUN   TestResourceVersionReactor/replace_resource_version
--- PASS: TestResourceVersionReactor (0.00s)
    --- PASS: TestResourceVersionReactor/first_resource (0.00s)
    --- PASS: TestResourceVersionReactor/replace_resource_version (0.00s)
=== RUN   TestExamples
    path_filtering.go:62: Allowing only "stable" examples
=== PAUSE TestExamples
=== RUN   TestYamls
    path_filtering.go:62: Allowing only "stable" examples
=== PAUSE TestYamls
=== RUN   TestStablePathFilter
=== RUN   TestStablePathFilter/_test.yaml
=== RUN   TestStablePathFilter/_alpha_test.yaml
=== RUN   TestStablePathFilter/_beta_test.yaml
=== RUN   TestStablePathFilter/_foo_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_taskruns_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_taskruns_alpha_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml
=== RUN   TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml#01
=== RUN   TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml
=== RUN   TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01
--- PASS: TestStablePathFilter (0.00s)
    --- PASS: TestStablePathFilter/_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_beta_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_foo_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_taskruns_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1beta1_taskruns_alpha_test.yaml#01 (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml (0.00s)
    --- PASS: TestStablePathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01 (0.00s)
=== RUN   TestAlphaPathFilter
=== RUN   TestAlphaPathFilter/_test.yaml
=== RUN   TestAlphaPathFilter/_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_foo_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_taskruns_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_taskruns_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml
=== RUN   TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml#01
=== RUN   TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml
=== RUN   TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01
--- PASS: TestAlphaPathFilter (0.00s)
    --- PASS: TestAlphaPathFilter/_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_foo_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_taskruns_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1beta1_taskruns_alpha_test.yaml#01 (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml (0.00s)
    --- PASS: TestAlphaPathFilter/_v1alpha1_pipelineruns_beta_test.yaml#01 (0.00s)
=== RUN   TestCreateImage
2021/09/27 04:45:53 GET /v2/
2021/09/27 04:45:53 HEAD /v2/task/test-create-image/blobs/sha256:dde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6 404 BLOB_UNKNOWN Unknown blob
2021/09/27 04:45:53 HEAD /v2/task/test-create-image/blobs/sha256:9ab10150462e0b713850897e4d47ddc1e0e82a392683c177b430652929c36cc4 404 BLOB_UNKNOWN Unknown blob
2021/09/27 04:45:53 POST /v2/task/test-create-image/blobs/uploads/
2021/09/27 04:45:53 POST /v2/task/test-create-image/blobs/uploads/
2021/09/27 04:45:53 PATCH /v2/task/test-create-image/blobs/uploads/6795327568941662414
2021/09/27 04:45:53 PATCH /v2/task/test-create-image/blobs/uploads/82232638798500089
2021/09/27 04:45:53 PUT /v2/task/test-create-image/blobs/uploads/82232638798500089?digest=sha256%3A9ab10150462e0b713850897e4d47ddc1e0e82a392683c177b430652929c36cc4
2021/09/27 04:45:53 PUT /v2/task/test-create-image/blobs/uploads/6795327568941662414?digest=sha256%3Adde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6
2021/09/27 04:45:53 PUT /v2/task/test-create-image/manifests/latest
2021/09/27 04:45:53 GET /v2/
2021/09/27 04:45:53 GET /v2/task/test-create-image/manifests/sha256:78e6c563134c9d91efdcb2ee897ac03f12945318efe148dd84ff298c855d1416
2021/09/27 04:45:53 GET /v2/task/test-create-image/blobs/sha256:dde0f71137f2e7b5f46b439840ccf4d11c72a8853201b04f6a118365853aa8a6
--- PASS: TestCreateImage (0.05s)
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/clustertask-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/conditional-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/demo-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/output-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/task_results_example.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/pipelineruns/workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/build-push-kaniko.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/cloud-event.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/configmap.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/custom-env.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/custom-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/dind-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/gcs-resource.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-resource.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-ssh-creds.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/git-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/home-is-set.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/home-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/optional-resources-with-clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/pullrequest.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-env.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-volume-params.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/secret-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-interp.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-ready-script.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/sidecar-ready.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/step-by-digest.yaml
=== CONT  TestYamls
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/step-script.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/steps-run-in-order.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/steptemplate-env-merge.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-multiple-output-image.yaml
=== CONT  TestYamls
    examples_test.go:201: Adding test yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-result.yaml
=== CONT  TestYamls
    examples_test.go:201: Adding test yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/task-volume-args.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/template-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/unnamed-steps.yaml
=== RUN   TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workingdir.yaml
=== PAUSE TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace-readonly.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace-volume.yaml
    examples_test.go:201: Adding test ../examples/v1alpha1/taskruns/workspace.yaml
=== RUN   TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== PAUSE TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/clustertask-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/conditional-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/demo-optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/optional-workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/output-pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipeline-result-conditions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-results-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-results.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-task-execution-status.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-extra-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-resourcespec.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun-with-when-expressions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/pipelinerun.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/task_results_example.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using-retries-and-retry-count-variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/using_context_variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/pipelineruns/workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/authenticating-git-commands.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/cloud-event.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/configmap.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/custom-env.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/custom-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/dind-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/gcs-resource.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-resource.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-ssh-creds-without-known_hosts.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-ssh-creds.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/git-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/home-is-set.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/home-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/image-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-resources-with-clustertask.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-resources.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/optional-workspaces.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/pullrequest.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/pullrequest_input_copystep_output.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/run-steps-as-non-root.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-env.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-volume-params.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/secret-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-interp.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-ready-script.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/sidecar-ready.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/step-by-digest.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/step-script.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/steps-run-in-order.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/steptemplate-env-merge.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-multiple-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-output-image.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-result.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/task-volume-args.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/template-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/unnamed-steps.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/using_context_variables.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workingdir.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-in-sidecar.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-readonly.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace-volume.yaml
    examples_test.go:201: Adding test ../examples/v1beta1/taskruns/workspace.yaml
=== RUN   TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== RUN   TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/demo-optional-resources
=== PAUSE TestExamples/v1alpha1/pipelineruns/demo-optional-resources
=== RUN   TestExamples/v1alpha1/pipelineruns/output-pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/output-pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
=== RUN   TestExamples/v1alpha1/pipelineruns/pipelinerun
=== PAUSE TestExamples/v1alpha1/pipelineruns/pipelinerun
=== RUN   TestExamples/v1alpha1/pipelineruns/task_results_example
=== PAUSE TestExamples/v1alpha1/pipelineruns/task_results_example
=== RUN   TestExamples/v1alpha1/pipelineruns/workspaces
=== PAUSE TestExamples/v1alpha1/pipelineruns/workspaces
=== RUN   TestExamples/v1alpha1/taskruns/build-push-kaniko
=== PAUSE TestExamples/v1alpha1/taskruns/build-push-kaniko
=== RUN   TestExamples/v1alpha1/taskruns/cloud-event
=== PAUSE TestExamples/v1alpha1/taskruns/cloud-event
=== RUN   TestExamples/v1alpha1/taskruns/clustertask
=== PAUSE TestExamples/v1alpha1/taskruns/clustertask
=== RUN   TestExamples/v1alpha1/taskruns/configmap
=== PAUSE TestExamples/v1alpha1/taskruns/configmap
=== RUN   TestExamples/v1alpha1/taskruns/custom-env
=== PAUSE TestExamples/v1alpha1/taskruns/custom-env
=== RUN   TestExamples/v1alpha1/taskruns/custom-volume
=== PAUSE TestExamples/v1alpha1/taskruns/custom-volume
=== RUN   TestExamples/v1alpha1/taskruns/dind-sidecar
=== PAUSE TestExamples/v1alpha1/taskruns/dind-sidecar
=== RUN   TestExamples/v1alpha1/taskruns/gcs-resource
=== PAUSE TestExamples/v1alpha1/taskruns/gcs-resource
=== RUN   TestExamples/v1alpha1/taskruns/git-resource
=== PAUSE TestExamples/v1alpha1/taskruns/git-resource
=== RUN   TestExamples/v1alpha1/taskruns/git-ssh-creds
=== PAUSE TestExamples/v1alpha1/taskruns/git-ssh-creds
=== RUN   TestExamples/v1alpha1/taskruns/git-volume
=== PAUSE TestExamples/v1alpha1/taskruns/git-volume
=== RUN   TestExamples/v1alpha1/taskruns/home-is-set
=== PAUSE TestExamples/v1alpha1/taskruns/home-is-set
=== RUN   TestExamples/v1alpha1/taskruns/home-volume
=== PAUSE TestExamples/v1alpha1/taskruns/home-volume
=== RUN   TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
=== PAUSE TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
=== RUN   TestExamples/v1alpha1/taskruns/optional-resources
=== PAUSE TestExamples/v1alpha1/taskruns/optional-resources
=== RUN   TestExamples/v1alpha1/taskruns/pullrequest
=== PAUSE TestExamples/v1alpha1/taskruns/pullrequest
=== RUN   TestExamples/v1alpha1/taskruns/secret-env
=== PAUSE TestExamples/v1alpha1/taskruns/secret-env
=== RUN   TestExamples/v1alpha1/taskruns/secret-volume-params
=== PAUSE TestExamples/v1alpha1/taskruns/secret-volume-params
=== RUN   TestExamples/v1alpha1/taskruns/secret-volume
=== PAUSE TestExamples/v1alpha1/taskruns/secret-volume
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-interp
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-interp
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-ready-script
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-ready-script
=== RUN   TestExamples/v1alpha1/taskruns/sidecar-ready
=== PAUSE TestExamples/v1alpha1/taskruns/sidecar-ready
=== RUN   TestExamples/v1alpha1/taskruns/step-by-digest
=== PAUSE TestExamples/v1alpha1/taskruns/step-by-digest
=== RUN   TestExamples/v1alpha1/taskruns/step-script
=== PAUSE TestExamples/v1alpha1/taskruns/step-script
=== RUN   TestExamples/v1alpha1/taskruns/steps-run-in-order
=== PAUSE TestExamples/v1alpha1/taskruns/steps-run-in-order
=== RUN   TestExamples/v1alpha1/taskruns/steptemplate-env-merge
=== PAUSE TestExamples/v1alpha1/taskruns/steptemplate-env-merge
=== RUN   TestExamples/v1alpha1/taskruns/task-multiple-output-image
=== PAUSE TestExamples/v1alpha1/taskruns/task-multiple-output-image
=== RUN   TestExamples/v1alpha1/taskruns/task-output-image
=== PAUSE TestExamples/v1alpha1/taskruns/task-output-image
=== RUN   TestExamples/v1alpha1/taskruns/task-result
=== PAUSE TestExamples/v1alpha1/taskruns/task-result
=== RUN   TestExamples/v1alpha1/taskruns/task-volume-args
=== PAUSE TestExamples/v1alpha1/taskruns/task-volume-args
=== RUN   TestExamples/v1alpha1/taskruns/template-volume
=== PAUSE TestExamples/v1alpha1/taskruns/template-volume
=== RUN   TestExamples/v1alpha1/taskruns/unnamed-steps
=== PAUSE TestExamples/v1alpha1/taskruns/unnamed-steps
=== RUN   TestExamples/v1alpha1/taskruns/workingdir
=== PAUSE TestExamples/v1alpha1/taskruns/workingdir
=== RUN   TestExamples/v1alpha1/taskruns/workspace-readonly
=== PAUSE TestExamples/v1alpha1/taskruns/workspace-readonly
=== RUN   TestExamples/v1alpha1/taskruns/workspace-volume
=== PAUSE TestExamples/v1alpha1/taskruns/workspace-volume
=== RUN   TestExamples/v1alpha1/taskruns/workspace
=== PAUSE TestExamples/v1alpha1/taskruns/workspace
=== RUN   TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
=== RUN   TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/demo-optional-resources
=== PAUSE TestExamples/v1beta1/pipelineruns/demo-optional-resources
=== RUN   TestExamples/v1beta1/pipelineruns/optional-workspaces
=== PAUSE TestExamples/v1beta1/pipelineruns/optional-workspaces
=== RUN   TestExamples/v1beta1/pipelineruns/output-pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/output-pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
=== PAUSE TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-results
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-results
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-parallel-tasks-using-pvc
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-params
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun-with-when-expressions
=== RUN   TestExamples/v1beta1/pipelineruns/pipelinerun
=== PAUSE TestExamples/v1beta1/pipelineruns/pipelinerun
=== RUN   TestExamples/v1beta1/pipelineruns/task_results_example
=== PAUSE TestExamples/v1beta1/pipelineruns/task_results_example
=== RUN   TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== PAUSE TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== RUN   TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
=== PAUSE TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
=== RUN   TestExamples/v1beta1/pipelineruns/using_context_variables
=== PAUSE TestExamples/v1beta1/pipelineruns/using_context_variables
=== RUN   TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
=== PAUSE TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
=== RUN   TestExamples/v1beta1/pipelineruns/workspaces
=== PAUSE TestExamples/v1beta1/pipelineruns/workspaces
=== RUN   TestExamples/v1beta1/taskruns/authenticating-git-commands
=== PAUSE TestExamples/v1beta1/taskruns/authenticating-git-commands
=== RUN   TestExamples/v1beta1/taskruns/cloud-event
=== PAUSE TestExamples/v1beta1/taskruns/cloud-event
=== RUN   TestExamples/v1beta1/taskruns/clustertask
=== PAUSE TestExamples/v1beta1/taskruns/clustertask
=== RUN   TestExamples/v1beta1/taskruns/configmap
=== PAUSE TestExamples/v1beta1/taskruns/configmap
=== RUN   TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
=== PAUSE TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
=== RUN   TestExamples/v1beta1/taskruns/custom-env
=== PAUSE TestExamples/v1beta1/taskruns/custom-env
=== RUN   TestExamples/v1beta1/taskruns/custom-volume
=== PAUSE TestExamples/v1beta1/taskruns/custom-volume
=== RUN   TestExamples/v1beta1/taskruns/dind-sidecar
=== PAUSE TestExamples/v1beta1/taskruns/dind-sidecar
=== RUN   TestExamples/v1beta1/taskruns/gcs-resource
=== PAUSE TestExamples/v1beta1/taskruns/gcs-resource
=== RUN   TestExamples/v1beta1/taskruns/git-resource
=== PAUSE TestExamples/v1beta1/taskruns/git-resource
=== RUN   TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
=== PAUSE TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
=== RUN   TestExamples/v1beta1/taskruns/git-ssh-creds
=== PAUSE TestExamples/v1beta1/taskruns/git-ssh-creds
=== RUN   TestExamples/v1beta1/taskruns/git-volume
=== PAUSE TestExamples/v1beta1/taskruns/git-volume
=== RUN   TestExamples/v1beta1/taskruns/home-is-set
=== PAUSE TestExamples/v1beta1/taskruns/home-is-set
=== RUN   TestExamples/v1beta1/taskruns/home-volume
=== PAUSE TestExamples/v1beta1/taskruns/home-volume
=== RUN   TestExamples/v1beta1/taskruns/image-params
=== PAUSE TestExamples/v1beta1/taskruns/image-params
=== RUN   TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
=== PAUSE TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
=== RUN   TestExamples/v1beta1/taskruns/optional-resources
=== PAUSE TestExamples/v1beta1/taskruns/optional-resources
=== RUN   TestExamples/v1beta1/taskruns/optional-workspaces
=== PAUSE TestExamples/v1beta1/taskruns/optional-workspaces
=== RUN   TestExamples/v1beta1/taskruns/pullrequest
=== PAUSE TestExamples/v1beta1/taskruns/pullrequest
=== RUN   TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
=== PAUSE TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
=== RUN   TestExamples/v1beta1/taskruns/run-steps-as-non-root
=== PAUSE TestExamples/v1beta1/taskruns/run-steps-as-non-root
=== RUN   TestExamples/v1beta1/taskruns/secret-env
=== PAUSE TestExamples/v1beta1/taskruns/secret-env
=== RUN   TestExamples/v1beta1/taskruns/secret-volume-params
=== PAUSE TestExamples/v1beta1/taskruns/secret-volume-params
=== RUN   TestExamples/v1beta1/taskruns/secret-volume
=== PAUSE TestExamples/v1beta1/taskruns/secret-volume
=== RUN   TestExamples/v1beta1/taskruns/sidecar-interp
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-interp
=== RUN   TestExamples/v1beta1/taskruns/sidecar-ready-script
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-ready-script
=== RUN   TestExamples/v1beta1/taskruns/sidecar-ready
=== PAUSE TestExamples/v1beta1/taskruns/sidecar-ready
=== RUN   TestExamples/v1beta1/taskruns/step-by-digest
=== PAUSE TestExamples/v1beta1/taskruns/step-by-digest
=== RUN   TestExamples/v1beta1/taskruns/step-script
=== PAUSE TestExamples/v1beta1/taskruns/step-script
=== RUN   TestExamples/v1beta1/taskruns/steps-run-in-order
=== PAUSE TestExamples/v1beta1/taskruns/steps-run-in-order
=== RUN   TestExamples/v1beta1/taskruns/steptemplate-env-merge
=== PAUSE TestExamples/v1beta1/taskruns/steptemplate-env-merge
=== RUN   TestExamples/v1beta1/taskruns/task-multiple-output-image
=== PAUSE TestExamples/v1beta1/taskruns/task-multiple-output-image
=== RUN   TestExamples/v1beta1/taskruns/task-output-image
=== PAUSE TestExamples/v1beta1/taskruns/task-output-image
=== RUN   TestExamples/v1beta1/taskruns/task-result
=== PAUSE TestExamples/v1beta1/taskruns/task-result
=== RUN   TestExamples/v1beta1/taskruns/task-volume-args
=== PAUSE TestExamples/v1beta1/taskruns/task-volume-args
=== RUN   TestExamples/v1beta1/taskruns/template-volume
=== PAUSE TestExamples/v1beta1/taskruns/template-volume
=== RUN   TestExamples/v1beta1/taskruns/unnamed-steps
=== PAUSE TestExamples/v1beta1/taskruns/unnamed-steps
=== RUN   TestExamples/v1beta1/taskruns/using_context_variables
=== PAUSE TestExamples/v1beta1/taskruns/using_context_variables
=== RUN   TestExamples/v1beta1/taskruns/workingdir
=== PAUSE TestExamples/v1beta1/taskruns/workingdir
=== RUN   TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== PAUSE TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== RUN   TestExamples/v1beta1/taskruns/workspace-readonly
=== PAUSE TestExamples/v1beta1/taskruns/workspace-readonly
=== RUN   TestExamples/v1beta1/taskruns/workspace-volume
=== PAUSE TestExamples/v1beta1/taskruns/workspace-volume
=== RUN   TestExamples/v1beta1/taskruns/workspace
=== PAUSE TestExamples/v1beta1/taskruns/workspace
=== CONT  TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
=== CONT  TestExamples/v1beta1/taskruns/workspace
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
=== CONT  TestExamples/v1beta1/taskruns/workingdir
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    init_test.go:135: Create namespace arendelle-tmw29 to deploy to
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    init_test.go:135: Create namespace arendelle-hvnv5 to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    init_test.go:135: Create namespace arendelle-wzftk to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace
    init_test.go:135: Create namespace arendelle-b5tr2 to deploy to
=== CONT  TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
    init_test.go:135: Create namespace arendelle-fvhpt to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
    init_test.go:135: Create namespace arendelle-gzlk5 to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    init_test.go:135: Create namespace arendelle-mvnm9 to deploy to
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    init_test.go:135: Create namespace arendelle-hh67x to deploy to
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-hvnv5"
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tmw29"
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wzftk"
=== CONT  TestExamples/v1beta1/taskruns/workspace
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-b5tr2"
=== CONT  TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fvhpt"
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gzlk5"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mvnm9"
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-hh67x"
=== CONT  TestExamples/v1alpha1/pipelineruns/clustertask-pipelinerun
    examples_test.go:109: Deleting clustertask cluster-task-pipeline-4-v1alpha1
    examples_test.go:169: Deleting namespace arendelle-fvhpt
=== CONT  TestExamples/v1alpha1/taskruns/pullrequest
    init_test.go:135: Create namespace arendelle-7wcn9 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7wcn9"
=== CONT  TestExamples/v1beta1/taskruns/workspace-in-sidecar
    examples_test.go:169: Deleting namespace arendelle-wzftk
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources
    init_test.go:135: Create namespace arendelle-tqjcc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tqjcc"
=== CONT  TestExamples/v1beta1/taskruns/workingdir
    examples_test.go:169: Deleting namespace arendelle-hh67x
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    init_test.go:135: Create namespace arendelle-fnwh6 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fnwh6"
=== CONT  TestExamples/v1beta1/taskruns/workspace-volume
    examples_test.go:169: Deleting namespace arendelle-gzlk5
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
    init_test.go:135: Create namespace arendelle-rcvpj to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rcvpj"
=== CONT  TestExamples/v1beta1/taskruns/workspace-readonly
    examples_test.go:169: Deleting namespace arendelle-tmw29
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
    init_test.go:135: Create namespace arendelle-hwsqv to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-hwsqv"
=== CONT  TestExamples/v1alpha1/taskruns/pullrequest
    examples_test.go:169: Deleting namespace arendelle-7wcn9
=== CONT  TestExamples/v1alpha1/pipelineruns/workspaces
    init_test.go:135: Create namespace arendelle-88gn7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-88gn7"
=== CONT  TestExamples/v1alpha1/taskruns/step-by-digest
    examples_test.go:169: Deleting namespace arendelle-rcvpj
=== CONT  TestExamples/v1alpha1/taskruns/git-volume
    init_test.go:135: Create namespace arendelle-vjn5n to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vjn5n"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results-with-params
    examples_test.go:169: Deleting namespace arendelle-mvnm9
=== CONT  TestExamples/v1beta1/taskruns/workspace
    examples_test.go:169: Deleting namespace arendelle-b5tr2
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
=== CONT  TestExamples/v1beta1/taskruns/dind-sidecar
    init_test.go:135: Create namespace arendelle-zpdsg to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
    init_test.go:135: Create namespace arendelle-ds8w4 to deploy to
=== CONT  TestExamples/v1beta1/taskruns/dind-sidecar
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-zpdsg"
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ds8w4"
=== CONT  TestExamples/v1alpha1/taskruns/git-volume
    examples_test.go:169: Deleting namespace arendelle-vjn5n
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
    init_test.go:135: Create namespace arendelle-25kgv to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-25kgv"
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources
    examples_test.go:169: Deleting namespace arendelle-tqjcc
=== CONT  TestExamples/v1beta1/taskruns/custom-env
    init_test.go:135: Create namespace arendelle-llgmb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-llgmb"
=== CONT  TestExamples/v1beta1/taskruns/dind-sidecar
    examples_test.go:169: Deleting namespace arendelle-zpdsg
=== CONT  TestExamples/v1beta1/taskruns/task-output-image
    init_test.go:135: Create namespace arendelle-64qw6 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-64qw6"
=== CONT  TestExamples/v1alpha1/pipelineruns/workspaces
    examples_test.go:169: Deleting namespace arendelle-88gn7
=== CONT  TestExamples/v1beta1/taskruns/custom-env
    examples_test.go:169: Deleting namespace arendelle-llgmb
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    init_test.go:135: Create namespace arendelle-wqrvq to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wqrvq"
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    init_test.go:135: Create namespace arendelle-fqb6q to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fqb6q"
=== CONT  TestExamples/v1alpha1/taskruns/template-volume
    examples_test.go:169: Deleting namespace arendelle-25kgv
=== CONT  TestExamples/v1alpha1/taskruns/gcs-resource
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1beta1/taskruns/authenticating-git-commands
    init_test.go:135: Create namespace arendelle-nwvhh to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-nwvhh"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    examples_test.go:169: Deleting namespace arendelle-wqrvq
=== CONT  TestExamples/v1alpha1/taskruns/clustertask
    init_test.go:135: Create namespace arendelle-8nrg2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-8nrg2"
=== CONT  TestExamples/v1beta1/pipelineruns/pipeline-result-conditions
    examples_test.go:169: Deleting namespace arendelle-ds8w4
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:135: Create namespace arendelle-tqnfv to deploy to
=== CONT  TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml
    examples_test.go:169: Deleting namespace arendelle-hvnv5
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tqnfv"
--- PASS: TestYamls (0.00s)
    --- SKIP: TestYamls/yamls/v1beta1/pipelineruns/pipelinerun.yaml (0.00s)
    --- PASS: TestYamls/yamls/v1beta1/pipelineruns/pipelinerun-with-final-tasks.yaml (334.30s)
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    init_test.go:135: Create namespace arendelle-fcs8f to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fcs8f"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun
    examples_test.go:55: Failed waiting for pipeline run done: "demo-pipeline-run-1" failed
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-fnwh6 ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:46:47Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:47Z"
          name: demo-pipeline
          namespace: arendelle-fnwh6
          resourceVersion: "5524941"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/pipelines/demo-pipeline
          uid: 300ddd4d-90e9-40e8-8a5b-eaddac86d698
        spec:
          resources:
          - name: source-repo
            type: git
          - name: web-image
            type: image
          - name: app-image
            type: image
          tasks:
          - name: skaffold-unit-tests
            resources:
              inputs:
              - name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: unit-tests
          - name: build-skaffold-web
            params:
            - name: pathToDockerFile
              value: Dockerfile
            - name: pathToContext
              value: /workspace/workspace/examples/microservices/leeroy-web
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              outputs:
              - name: builtImage
                resource: web-image
            runAfter:
            - skaffold-unit-tests
            taskRef:
              kind: Task
              name: build-push
          - name: build-skaffold-app
            params:
            - name: pathToDockerFile
              value: Dockerfile
            - name: pathToContext
              value: /workspace/workspace/examples/microservices/leeroy-app
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              outputs:
              - name: builtImage
                resource: app-image
            runAfter:
            - skaffold-unit-tests
            taskRef:
              kind: Task
              name: build-push
          - name: deploy-app
            params:
            - name: path
              value: /workspace/workspace/examples/microservices/leeroy-app/kubernetes/deployment.yaml
            - name: yqArg
              value: -d1
            - name: yamlPathToImage
              value: spec.template.spec.containers[0].image
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              - from:
                - build-skaffold-app
                name: image
                resource: app-image
            taskRef:
              kind: Task
              name: demo-deploy-kubectl
          - name: deploy-web
            params:
            - name: path
              value: /workspace/workspace/examples/microservices/leeroy-web/kubernetes/deployment.yaml
            - name: yqArg
              value: -d1
            - name: yamlPathToImage
              value: spec.template.spec.containers[0].image
            resources:
              inputs:
              - name: workspace
                resource: source-repo
              - from:
                - build-skaffold-web
                name: image
                resource: web-image
            taskRef:
              kind: Task
              name: demo-deploy-kubectl
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T08:46:46Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:46Z"
          name: skaffold-git-pipelinerun
          namespace: arendelle-fnwh6
          resourceVersion: "5524929"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-fnwh6/pipelineresources/skaffold-git-pipelinerun
          uid: 004406c7-b1ce-44cd-9eee-b0739096c3ed
        spec:
          params:
          - name: revision
            value: v0.32.0
          - name: url
            value: https://github.com/GoogleContainerTools/skaffold
          type: git
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T08:46:46Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:46Z"
          name: skaffold-image-leeroy-app
          namespace: arendelle-fnwh6
          resourceVersion: "5524922"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-fnwh6/pipelineresources/skaffold-image-leeroy-app
          uid: aa404787-33be-4a5b-8d6d-0bf1a7e4a781
        spec:
          params:
          - name: url
            value: ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app
          type: image
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T08:46:46Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:46Z"
          name: skaffold-image-leeroy-web-pipelinerun
          namespace: arendelle-fnwh6
          resourceVersion: "5524925"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-fnwh6/pipelineresources/skaffold-image-leeroy-web-pipelinerun
          uid: 9312f5e7-de5b-4c76-bf53-fd79661a37a7
        spec:
          params:
          - name: url
            value: ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web
          type: image
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:46:47Z"
          generation: 1
          labels:
            tekton.dev/pipeline: demo-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:47Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                f:completionTime: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:resources: {}
                  f:tasks: {}
                f:skippedTasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:demo-pipeline-run-1-build-skaffold-app-x4nzs:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
                  f:demo-pipeline-run-1-build-skaffold-web-h9jk8:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
                  f:demo-pipeline-run-1-skaffold-unit-tests-jgff4:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:resourcesResult: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:51:41Z"
          name: demo-pipeline-run-1
          namespace: arendelle-fnwh6
          resourceVersion: "5527973"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/pipelineruns/demo-pipeline-run-1
          uid: f23307e8-9c58-41e9-8e6a-32e3ce977315
        spec:
          pipelineRef:
            name: demo-pipeline
          resources:
          - name: source-repo
            resourceRef:
              name: skaffold-git-pipelinerun
          - name: web-image
            resourceRef:
              name: skaffold-image-leeroy-web-pipelinerun
          - name: app-image
            resourceRef:
              name: skaffold-image-leeroy-app
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:51:41Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:51:41Z"
            message: 'Tasks Completed: 3 (Failed: 2, Cancelled 0), Skipped: 2'
            reason: Failed
            status: "False"
            type: Succeeded
          pipelineSpec:
            resources:
            - name: source-repo
              type: git
            - name: web-image
              type: image
            - name: app-image
              type: image
            tasks:
            - name: skaffold-unit-tests
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: unit-tests
            - name: build-skaffold-web
              params:
              - name: pathToDockerFile
                value: Dockerfile
              - name: pathToContext
                value: /workspace/workspace/examples/microservices/leeroy-web
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                outputs:
                - name: builtImage
                  resource: web-image
              runAfter:
              - skaffold-unit-tests
              taskRef:
                kind: Task
                name: build-push
            - name: build-skaffold-app
              params:
              - name: pathToDockerFile
                value: Dockerfile
              - name: pathToContext
                value: /workspace/workspace/examples/microservices/leeroy-app
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                outputs:
                - name: builtImage
                  resource: app-image
              runAfter:
              - skaffold-unit-tests
              taskRef:
                kind: Task
                name: build-push
            - name: deploy-app
              params:
              - name: path
                value: /workspace/workspace/examples/microservices/leeroy-app/kubernetes/deployment.yaml
              - name: yqArg
                value: -d1
              - name: yamlPathToImage
                value: spec.template.spec.containers[0].image
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                - from:
                  - build-skaffold-app
                  name: image
                  resource: app-image
              taskRef:
                kind: Task
                name: demo-deploy-kubectl
            - name: deploy-web
              params:
              - name: path
                value: /workspace/workspace/examples/microservices/leeroy-web/kubernetes/deployment.yaml
              - name: yqArg
                value: -d1
              - name: yamlPathToImage
                value: spec.template.spec.containers[0].image
              resources:
                inputs:
                - name: workspace
                  resource: source-repo
                - from:
                  - build-skaffold-web
                  name: image
                  resource: web-image
              taskRef:
                kind: Task
                name: demo-deploy-kubectl
          skippedTasks:
          - name: deploy-app
          - name: deploy-web
          startTime: "2021-09-27T08:46:48Z"
          taskRuns:
            demo-pipeline-run-1-build-skaffold-app-x4nzs:
              pipelineTaskName: build-skaffold-app
              status:
                completionTime: "2021-09-27T08:51:40Z"
                conditions:
                - lastTransitionTime: "2021-09-27T08:51:40Z"
                  message: |
                    "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-fnwh6 logs demo-pipeline-run-1-build-skaffold-app-x4nzs-pod-5fkb8 -c step-build-and-push
                  reason: Failed
                  status: "False"
                  type: Succeeded
                podName: demo-pipeline-run-1-build-skaffold-app-x4nzs-pod-5fkb8
                startTime: "2021-09-27T08:48:39Z"
                steps:
                - container: step-create-dir-builtimage-6b55d
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-builtimage-6b55d
                  terminated:
                    containerID: docker://4b9b8ec93a2d7029cc91ceaab038791b866f963b0447a64c1b61b6ef008c7ea2
                    exitCode: 0
                    finishedAt: "2021-09-27T08:50:01Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:50:00Z"
                - container: step-git-source-workspace-5747z
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-workspace-5747z
                  terminated:
                    containerID: docker://d3a8660bb78360759de0986cad96ced95740252d53f0431606717868870d73dc
                    exitCode: 0
                    finishedAt: "2021-09-27T08:50:35Z"
                    message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
                    reason: Completed
                    startedAt: "2021-09-27T08:50:01Z"
                - container: step-build-and-push
                  imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
                  name: build-and-push
                  terminated:
                    containerID: docker://49180ffd8439e5bbf5686f17cc96db226f512c58cd88bc5aa87df06d1cff30d8
                    exitCode: 1
                    finishedAt: "2021-09-27T08:51:39Z"
                    reason: Error
                    startedAt: "2021-09-27T08:50:31Z"
                - container: step-image-digest-exporter-ftblm
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
                  name: image-digest-exporter-ftblm
                  terminated:
                    containerID: docker://40a0cf56afed78c5bdc24946864291c7a6dd39f7719b56528a114f3d57024eac
                    exitCode: 1
                    finishedAt: "2021-09-27T08:51:39Z"
                    reason: Error
                    startedAt: "2021-09-27T08:51:35Z"
                taskSpec:
                  params:
                  - default: /workspace/workspace/Dockerfile
                    description: The path to the dockerfile to build
                    name: pathToDockerFile
                    type: string
                  - default: /workspace/workspace
                    description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
                    name: pathToContext
                    type: string
                  resources:
                    inputs:
                    - name: workspace
                      type: git
                    outputs:
                    - name: builtImage
                      type: image
                  steps:
                  - args:
                    - --dockerfile=$(inputs.params.pathToDockerFile)
                    - --destination=$(outputs.resources.builtImage.url)
                    - --context=$(inputs.params.pathToContext)
                    command:
                    - /kaniko/executor
                    env:
                    - name: DOCKER_CONFIG
                      value: /tekton/home/.docker/
                    image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
                    name: build-and-push
                    resources: {}
            demo-pipeline-run-1-build-skaffold-web-h9jk8:
              pipelineTaskName: build-skaffold-web
              status:
                completionTime: "2021-09-27T08:51:41Z"
                conditions:
                - lastTransitionTime: "2021-09-27T08:51:41Z"
                  message: |
                    "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-fnwh6 logs demo-pipeline-run-1-build-skaffold-web-h9jk8-pod-6mgxv -c step-build-and-push
                  reason: Failed
                  status: "False"
                  type: Succeeded
                podName: demo-pipeline-run-1-build-skaffold-web-h9jk8-pod-6mgxv
                startTime: "2021-09-27T08:48:35Z"
                steps:
                - container: step-create-dir-builtimage-jbtkb
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-builtimage-jbtkb
                  terminated:
                    containerID: docker://f45098c63b4fa74d4e3ee67b1ceaa0c469546d51fd233b606313f0352fba1710
                    exitCode: 0
                    finishedAt: "2021-09-27T08:50:00Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:49:59Z"
                - container: step-git-source-workspace-sb7hz
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-workspace-sb7hz
                  terminated:
                    containerID: docker://68e3388bc488a6edf8176470800a71a0a546cbb3fcb48545f88bb941c4786817
                    exitCode: 0
                    finishedAt: "2021-09-27T08:50:27Z"
                    message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
                    reason: Completed
                    startedAt: "2021-09-27T08:49:59Z"
                - container: step-build-and-push
                  imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
                  name: build-and-push
                  terminated:
                    containerID: docker://7fc3b162307522dcb41b0b9145d585d12f644fea02f23974ded1ff111a79568b
                    exitCode: 1
                    finishedAt: "2021-09-27T08:51:39Z"
                    reason: Error
                    startedAt: "2021-09-27T08:50:26Z"
                - container: step-image-digest-exporter-txscz
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
                  name: image-digest-exporter-txscz
                  terminated:
                    containerID: docker://900ac4e31c41e06752f7cfdc359e8b210236715c0df36ab163d1346e18b9f616
                    exitCode: 1
                    finishedAt: "2021-09-27T08:51:40Z"
                    reason: Error
                    startedAt: "2021-09-27T08:51:40Z"
                taskSpec:
                  params:
                  - default: /workspace/workspace/Dockerfile
                    description: The path to the dockerfile to build
                    name: pathToDockerFile
                    type: string
                  - default: /workspace/workspace
                    description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
                    name: pathToContext
                    type: string
                  resources:
                    inputs:
                    - name: workspace
                      type: git
                    outputs:
                    - name: builtImage
                      type: image
                  steps:
                  - args:
                    - --dockerfile=$(inputs.params.pathToDockerFile)
                    - --destination=$(outputs.resources.builtImage.url)
                    - --context=$(inputs.params.pathToContext)
                    command:
                    - /kaniko/executor
                    env:
                    - name: DOCKER_CONFIG
                      value: /tekton/home/.docker/
                    image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
                    name: build-and-push
                    resources: {}
            demo-pipeline-run-1-skaffold-unit-tests-jgff4:
              pipelineTaskName: skaffold-unit-tests
              status:
                completionTime: "2021-09-27T08:48:35Z"
                conditions:
                - lastTransitionTime: "2021-09-27T08:48:35Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: demo-pipeline-run-1-skaffold-unit-tests-jgff4-pod-7x46q
                resourcesResult:
                - key: commit
                  resourceName: workspace
                  resourceRef:
                    name: workspace
                  value: 6ed7aad5e8a36052ee5f6079fc91368e362121f7
                - key: url
                  resourceName: workspace
                  resourceRef:
                    name: workspace
                  value: https://github.com/GoogleContainerTools/skaffold
                startTime: "2021-09-27T08:46:48Z"
                steps:
                - container: step-git-source-workspace-jrlmk
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-workspace-jrlmk
                  terminated:
                    containerID: docker://28c3ba292f3186d8b23b9eeefa2b850cac1dc844703254368b641e1a54df4ba2
                    exitCode: 0
                    finishedAt: "2021-09-27T08:48:14Z"
                    message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
                    reason: Completed
                    startedAt: "2021-09-27T08:47:53Z"
                - container: step-run-tests
                  imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
                  name: run-tests
                  terminated:
                    containerID: docker://07e1e1fc93e1c3a80275c20fa3624c77ec7e93a6f2bcbaa6d1a57687b2f7dd0b
                    exitCode: 0
                    finishedAt: "2021-09-27T08:48:15Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:48:14Z"
                taskSpec:
                  resources:
                    inputs:
                    - name: workspace
                      targetPath: go/src/github.com/GoogleContainerTools/skaffold
                      type: git
                  steps:
                  - args:
                    - pass
                    command:
                    - echo
                    env:
                    - name: GOPATH
                      value: /workspace/go
                    image: golang
                    name: run-tests
                    resources: {}
                    workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:46:46Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:outputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:46Z"
          name: build-push
          namespace: arendelle-fnwh6
          resourceVersion: "5524936"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/tasks/build-push
          uid: f7a3728c-2b3e-480e-ba8f-5a95e7bf961d
        spec:
          params:
          - default: /workspace/workspace/Dockerfile
            description: The path to the dockerfile to build
            name: pathToDockerFile
            type: string
          - default: /workspace/workspace
            description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
            name: pathToContext
            type: string
          resources:
            inputs:
            - name: workspace
              type: git
            outputs:
            - name: builtImage
              type: image
          steps:
          - args:
            - --dockerfile=$(inputs.params.pathToDockerFile)
            - --destination=$(outputs.resources.builtImage.url)
            - --context=$(inputs.params.pathToContext)
            command:
            - /kaniko/executor
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            name: build-and-push
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:46:47Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:params: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:47Z"
          name: demo-deploy-kubectl
          namespace: arendelle-fnwh6
          resourceVersion: "5524938"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/tasks/demo-deploy-kubectl
          uid: 13b48e90-c6bb-4e29-88a1-3b2edac40a8d
        spec:
          params:
          - description: Path to the manifest to apply
            name: path
            type: string
          - description: Okay this is a hack, but I didn't feel right hard-codeing `-d1` down
              below
            name: yqArg
            type: string
          - description: The path to the image to replace in the yaml manifest (arg to yq)
            name: yamlPathToImage
            type: string
          resources:
            inputs:
            - name: workspace
              type: git
            - name: image
              type: image
          steps:
          - args:
            - w
            - -i
            - $(inputs.params.yqArg)
            - $(inputs.params.path)
            - $(inputs.params.yamlPathToImage)
            - $(inputs.resources.image.url)
            command:
            - yq
            image: danielxlee/yq:2.4.0
            name: replace-image
            resources: {}
          - args:
            - apply
            - -f
            - $(inputs.params.path)
            command:
            - kubectl
            image: lachlanevenson/k8s-kubectl
            name: run-kubectl
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:46:46Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:46:46Z"
          name: unit-tests
          namespace: arendelle-fnwh6
          resourceVersion: "5524932"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/tasks/unit-tests
          uid: 98e6fbc1-449d-44ab-807d-e503117abebd
        spec:
          resources:
            inputs:
            - name: workspace
              targetPath: go/src/github.com/GoogleContainerTools/skaffold
              type: git
          steps:
          - args:
            - pass
            command:
            - echo
            env:
            - name: GOPATH
              value: /workspace/go
            image: golang
            name: run-tests
            resources: {}
            workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:48:35Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-app
            tekton.dev/task: build-push
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"f23307e8-9c58-41e9-8e6a-32e3ce977315"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:51:40Z"
          name: demo-pipeline-run-1-build-skaffold-app-x4nzs
          namespace: arendelle-fnwh6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: f23307e8-9c58-41e9-8e6a-32e3ce977315
          resourceVersion: "5527958"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/taskruns/demo-pipeline-run-1-build-skaffold-app-x4nzs
          uid: 5fe56c57-2cc3-439b-9a98-4c6accfb5de0
        spec:
          params:
          - name: pathToDockerFile
            value: Dockerfile
          - name: pathToContext
            value: /workspace/workspace/examples/microservices/leeroy-app
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
            outputs:
            - name: builtImage
              paths:
              - build-skaffold-app/builtImage
              resourceRef:
                name: skaffold-image-leeroy-app
          serviceAccountName: default
          taskRef:
            kind: Task
            name: build-push
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:51:40Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:51:40Z"
            message: |
              "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-fnwh6 logs demo-pipeline-run-1-build-skaffold-app-x4nzs-pod-5fkb8 -c step-build-and-push
            reason: Failed
            status: "False"
            type: Succeeded
          podName: demo-pipeline-run-1-build-skaffold-app-x4nzs-pod-5fkb8
          startTime: "2021-09-27T08:48:39Z"
          steps:
          - container: step-create-dir-builtimage-6b55d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-builtimage-6b55d
            terminated:
              containerID: docker://4b9b8ec93a2d7029cc91ceaab038791b866f963b0447a64c1b61b6ef008c7ea2
              exitCode: 0
              finishedAt: "2021-09-27T08:50:01Z"
              reason: Completed
              startedAt: "2021-09-27T08:50:00Z"
          - container: step-git-source-workspace-5747z
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-5747z
            terminated:
              containerID: docker://d3a8660bb78360759de0986cad96ced95740252d53f0431606717868870d73dc
              exitCode: 0
              finishedAt: "2021-09-27T08:50:35Z"
              message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-27T08:50:01Z"
          - container: step-build-and-push
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            name: build-and-push
            terminated:
              containerID: docker://49180ffd8439e5bbf5686f17cc96db226f512c58cd88bc5aa87df06d1cff30d8
              exitCode: 1
              finishedAt: "2021-09-27T08:51:39Z"
              reason: Error
              startedAt: "2021-09-27T08:50:31Z"
          - container: step-image-digest-exporter-ftblm
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            name: image-digest-exporter-ftblm
            terminated:
              containerID: docker://40a0cf56afed78c5bdc24946864291c7a6dd39f7719b56528a114f3d57024eac
              exitCode: 1
              finishedAt: "2021-09-27T08:51:39Z"
              reason: Error
              startedAt: "2021-09-27T08:51:35Z"
          taskSpec:
            params:
            - default: /workspace/workspace/Dockerfile
              description: The path to the dockerfile to build
              name: pathToDockerFile
              type: string
            - default: /workspace/workspace
              description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
              name: pathToContext
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
              outputs:
              - name: builtImage
                type: image
            steps:
            - args:
              - --dockerfile=$(inputs.params.pathToDockerFile)
              - --destination=$(outputs.resources.builtImage.url)
              - --context=$(inputs.params.pathToContext)
              command:
              - /kaniko/executor
              env:
              - name: DOCKER_CONFIG
                value: /tekton/home/.docker/
              image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
              name: build-and-push
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:48:35Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-web
            tekton.dev/task: build-push
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"f23307e8-9c58-41e9-8e6a-32e3ce977315"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:51:41Z"
          name: demo-pipeline-run-1-build-skaffold-web-h9jk8
          namespace: arendelle-fnwh6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: f23307e8-9c58-41e9-8e6a-32e3ce977315
          resourceVersion: "5527970"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/taskruns/demo-pipeline-run-1-build-skaffold-web-h9jk8
          uid: 0b19875a-d2e8-4816-b6a6-7c46f2b461ac
        spec:
          params:
          - name: pathToDockerFile
            value: Dockerfile
          - name: pathToContext
            value: /workspace/workspace/examples/microservices/leeroy-web
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
            outputs:
            - name: builtImage
              paths:
              - build-skaffold-web/builtImage
              resourceRef:
                name: skaffold-image-leeroy-web-pipelinerun
          serviceAccountName: default
          taskRef:
            kind: Task
            name: build-push
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:51:41Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:51:41Z"
            message: |
              "step-build-and-push" exited with code 1 (image: "docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e"); for logs run: kubectl -n arendelle-fnwh6 logs demo-pipeline-run-1-build-skaffold-web-h9jk8-pod-6mgxv -c step-build-and-push
            reason: Failed
            status: "False"
            type: Succeeded
          podName: demo-pipeline-run-1-build-skaffold-web-h9jk8-pod-6mgxv
          startTime: "2021-09-27T08:48:35Z"
          steps:
          - container: step-create-dir-builtimage-jbtkb
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-builtimage-jbtkb
            terminated:
              containerID: docker://f45098c63b4fa74d4e3ee67b1ceaa0c469546d51fd233b606313f0352fba1710
              exitCode: 0
              finishedAt: "2021-09-27T08:50:00Z"
              reason: Completed
              startedAt: "2021-09-27T08:49:59Z"
          - container: step-git-source-workspace-sb7hz
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-sb7hz
            terminated:
              containerID: docker://68e3388bc488a6edf8176470800a71a0a546cbb3fcb48545f88bb941c4786817
              exitCode: 0
              finishedAt: "2021-09-27T08:50:27Z"
              message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-27T08:49:59Z"
          - container: step-build-and-push
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            name: build-and-push
            terminated:
              containerID: docker://7fc3b162307522dcb41b0b9145d585d12f644fea02f23974ded1ff111a79568b
              exitCode: 1
              finishedAt: "2021-09-27T08:51:39Z"
              reason: Error
              startedAt: "2021-09-27T08:50:26Z"
          - container: step-image-digest-exporter-txscz
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            name: image-digest-exporter-txscz
            terminated:
              containerID: docker://900ac4e31c41e06752f7cfdc359e8b210236715c0df36ab163d1346e18b9f616
              exitCode: 1
              finishedAt: "2021-09-27T08:51:40Z"
              reason: Error
              startedAt: "2021-09-27T08:51:40Z"
          taskSpec:
            params:
            - default: /workspace/workspace/Dockerfile
              description: The path to the dockerfile to build
              name: pathToDockerFile
              type: string
            - default: /workspace/workspace
              description: The build context used by Kaniko (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
              name: pathToContext
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
              outputs:
              - name: builtImage
                type: image
            steps:
            - args:
              - --dockerfile=$(inputs.params.pathToDockerFile)
              - --destination=$(outputs.resources.builtImage.url)
              - --context=$(inputs.params.pathToContext)
              command:
              - /kaniko/executor
              env:
              - name: DOCKER_CONFIG
                value: /tekton/home/.docker/
              image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
              name: build-and-push
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:46:48Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: skaffold-unit-tests
            tekton.dev/task: unit-tests
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"f23307e8-9c58-41e9-8e6a-32e3ce977315"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:resourcesResult: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:48:35Z"
          name: demo-pipeline-run-1-skaffold-unit-tests-jgff4
          namespace: arendelle-fnwh6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipeline-run-1
            uid: f23307e8-9c58-41e9-8e6a-32e3ce977315
          resourceVersion: "5526464"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fnwh6/taskruns/demo-pipeline-run-1-skaffold-unit-tests-jgff4
          uid: ed01ed27-29a7-4b2a-8549-0ba4d4210c86
        spec:
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: skaffold-git-pipelinerun
          serviceAccountName: default
          taskRef:
            kind: Task
            name: unit-tests
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:48:35Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:48:35Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: demo-pipeline-run-1-skaffold-unit-tests-jgff4-pod-7x46q
          resourcesResult:
          - key: commit
            resourceName: workspace
            resourceRef:
              name: workspace
            value: 6ed7aad5e8a36052ee5f6079fc91368e362121f7
          - key: url
            resourceName: workspace
            resourceRef:
              name: workspace
            value: https://github.com/GoogleContainerTools/skaffold
          startTime: "2021-09-27T08:46:48Z"
          steps:
          - container: step-git-source-workspace-jrlmk
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-workspace-jrlmk
            terminated:
              containerID: docker://28c3ba292f3186d8b23b9eeefa2b850cac1dc844703254368b641e1a54df4ba2
              exitCode: 0
              finishedAt: "2021-09-27T08:48:14Z"
              message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}}]'
              reason: Completed
              startedAt: "2021-09-27T08:47:53Z"
          - container: step-run-tests
            imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
            name: run-tests
            terminated:
              containerID: docker://07e1e1fc93e1c3a80275c20fa3624c77ec7e93a6f2bcbaa6d1a57687b2f7dd0b
              exitCode: 0
              finishedAt: "2021-09-27T08:48:15Z"
              reason: Completed
              startedAt: "2021-09-27T08:48:14Z"
          taskSpec:
            resources:
              inputs:
              - name: workspace
                targetPath: go/src/github.com/GoogleContainerTools/skaffold
                type: git
            steps:
            - args:
              - pass
              command:
              - echo
              env:
              - name: GOPATH
                value: /workspace/go
              image: golang
              name: run-tests
              resources: {}
              workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 5b5c5ec85f71bc9e67c54e6e9ef1e37e750463f5857e06412ffa93bc42eccbd3
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:48:44Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-app
            tekton.dev/task: build-push
            tekton.dev/taskRun: demo-pipeline-run-1-build-skaffold-app-x4nzs
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"5fe56c57-2cc3-439b-9a98-4c6accfb5de0"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-build-and-push"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"DOCKER_CONFIG"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-create-dir-builtimage-6b55d"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-5747z"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-image-digest-exporter-ftblm"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:49:55Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.44"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:51:40Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:51:41Z"
          name: demo-pipeline-run-1-build-skaffold-app-x4nzs-pod-5fkb8
          namespace: arendelle-fnwh6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-build-skaffold-app-x4nzs
            uid: 5fe56c57-2cc3-439b-9a98-4c6accfb5de0
          resourceVersion: "5527981"
          selfLink: /api/v1/namespaces/arendelle-fnwh6/pods/demo-pipeline-run-1-build-skaffold-app-x4nzs-pod-5fkb8
          uid: 07bc82ce-69bc-4156-8acb-5372c8ed2f16
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-builtimage-6b55d
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/builtImage
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-builtimage-6b55d
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-5747z
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/workspace
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-5747z
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-build-and-push
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /kaniko/executor
            - --
            - --dockerfile=Dockerfile
            - --destination=ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app
            - --context=/workspace/workspace/examples/microservices/leeroy-app
            command:
            - /tekton/bin/entrypoint
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imagePullPolicy: IfNotPresent
            name: step-build-and-push
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-image-digest-exporter-ftblm
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /ko-app/imagedigestexporter
            - --
            - -images
            - '[{"name":"builtImage","type":"image","url":"ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-app","digest":"","OutputImageDir":"/workspace/output/builtImage"}]'
            command:
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imagePullPolicy: IfNotPresent
            name: step-image-digest-exporter-ftblm
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: default-token-hgln6
            secret:
              defaultMode: 420
              secretName: default-token-hgln6
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:49:36Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:50:05Z"
            message: 'containers with unready status: [step-create-dir-builtimage-6b55d step-git-source-workspace-5747z
              step-build-and-push step-image-digest-exporter-ftblm]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:50:05Z"
            message: 'containers with unready status: [step-create-dir-builtimage-6b55d step-git-source-workspace-5747z
              step-build-and-push step-image-digest-exporter-ftblm]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:49:03Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://49180ffd8439e5bbf5686f17cc96db226f512c58cd88bc5aa87df06d1cff30d8
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            lastState: {}
            name: step-build-and-push
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://49180ffd8439e5bbf5686f17cc96db226f512c58cd88bc5aa87df06d1cff30d8
                exitCode: 1
                finishedAt: "2021-09-27T08:51:39Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:50:31.702Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:49:50Z"
          - containerID: docker://4b9b8ec93a2d7029cc91ceaab038791b866f963b0447a64c1b61b6ef008c7ea2
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-builtimage-6b55d
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://4b9b8ec93a2d7029cc91ceaab038791b866f963b0447a64c1b61b6ef008c7ea2
                exitCode: 0
                finishedAt: "2021-09-27T08:50:01Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:50:00.893Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:49:42Z"
          - containerID: docker://d3a8660bb78360759de0986cad96ced95740252d53f0431606717868870d73dc
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-5747z
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://d3a8660bb78360759de0986cad96ced95740252d53f0431606717868870d73dc
                exitCode: 0
                finishedAt: "2021-09-27T08:50:35Z"
                message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-27T08:50:01.006Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:49:47Z"
          - containerID: docker://40a0cf56afed78c5bdc24946864291c7a6dd39f7719b56528a114f3d57024eac
            image: sha256:6f40bd0d4755ea63b7c947c27d7693efd3c474110f5adf8da91beffc7582df41
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            lastState: {}
            name: step-image-digest-exporter-ftblm
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://40a0cf56afed78c5bdc24946864291c7a6dd39f7719b56528a114f3d57024eac
                exitCode: 1
                finishedAt: "2021-09-27T08:51:39Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:51:35.961Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:49:53Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://67e489fddc9e31505b8c2b2125ce14ec2d67056aaddefb1aced7dcd7670e1b98
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://67e489fddc9e31505b8c2b2125ce14ec2d67056aaddefb1aced7dcd7670e1b98
                exitCode: 0
                finishedAt: "2021-09-27T08:49:31Z"
                reason: Completed
                startedAt: "2021-09-27T08:49:30Z"
          phase: Failed
          podIP: 172.20.64.44
          podIPs:
          - ip: 172.20.64.44
          qosClass: BestEffort
          startTime: "2021-09-27T08:49:03Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: da54ddc9255033e2395e4ba0ebb943ab2213f9c5094872e090dc7b9cd0cad3eb
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:48:35Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: build-skaffold-web
            tekton.dev/task: build-push
            tekton.dev/taskRun: demo-pipeline-run-1-build-skaffold-web-h9jk8
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0b19875a-d2e8-4816-b6a6-7c46f2b461ac"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-build-and-push"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"DOCKER_CONFIG"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-create-dir-builtimage-jbtkb"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-sb7hz"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-image-digest-exporter-txscz"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:49:56Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:51:41Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.4"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:51:41Z"
          name: demo-pipeline-run-1-build-skaffold-web-h9jk8-pod-6mgxv
          namespace: arendelle-fnwh6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-build-skaffold-web-h9jk8
            uid: 0b19875a-d2e8-4816-b6a6-7c46f2b461ac
          resourceVersion: "5527985"
          selfLink: /api/v1/namespaces/arendelle-fnwh6/pods/demo-pipeline-run-1-build-skaffold-web-h9jk8-pod-6mgxv
          uid: e5628adb-9b3b-4f2c-ba66-e2918cb2bbd7
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-builtimage-jbtkb
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/builtImage
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-builtimage-jbtkb
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-sb7hz
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/workspace
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-sb7hz
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-build-and-push
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - /kaniko/executor
            - --
            - --dockerfile=Dockerfile
            - --destination=ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web
            - --context=/workspace/workspace/examples/microservices/leeroy-web
            command:
            - /tekton/bin/entrypoint
            env:
            - name: DOCKER_CONFIG
              value: /tekton/home/.docker/
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imagePullPolicy: IfNotPresent
            name: step-build-and-push
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-image-digest-exporter-txscz
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - /ko-app/imagedigestexporter
            - --
            - -images
            - '[{"name":"builtImage","type":"image","url":"ppc64le-cluster.bastion-p.svc.cluster.local:443/leeroy-web","digest":"","OutputImageDir":"/workspace/output/builtImage"}]'
            command:
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            imagePullPolicy: IfNotPresent
            name: step-image-digest-exporter-txscz
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: default-token-hgln6
            secret:
              defaultMode: 420
              secretName: default-token-hgln6
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:49:42Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:50:04Z"
            message: 'containers with unready status: [step-create-dir-builtimage-jbtkb step-git-source-workspace-sb7hz
              step-build-and-push step-image-digest-exporter-txscz]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:50:04Z"
            message: 'containers with unready status: [step-create-dir-builtimage-jbtkb step-git-source-workspace-sb7hz
              step-build-and-push step-image-digest-exporter-txscz]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:49:03Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://7fc3b162307522dcb41b0b9145d585d12f644fea02f23974ded1ff111a79568b
            image: ibmcom/kaniko-project-executor-ppc64le:v0.17.1
            imageID: docker-pullable://ibmcom/kaniko-project-executor-ppc64le@sha256:12b70da4fd0a89d103e12c0d7900ae416995f13229e2aea8919fd15e52dfa76e
            lastState: {}
            name: step-build-and-push
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://7fc3b162307522dcb41b0b9145d585d12f644fea02f23974ded1ff111a79568b
                exitCode: 1
                finishedAt: "2021-09-27T08:51:39Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:50:26.448Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:49:51Z"
          - containerID: docker://f45098c63b4fa74d4e3ee67b1ceaa0c469546d51fd233b606313f0352fba1710
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-builtimage-jbtkb
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://f45098c63b4fa74d4e3ee67b1ceaa0c469546d51fd233b606313f0352fba1710
                exitCode: 0
                finishedAt: "2021-09-27T08:50:00Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:49:59.459Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:49:46Z"
          - containerID: docker://68e3388bc488a6edf8176470800a71a0a546cbb3fcb48545f88bb941c4786817
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-sb7hz
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://68e3388bc488a6edf8176470800a71a0a546cbb3fcb48545f88bb941c4786817
                exitCode: 0
                finishedAt: "2021-09-27T08:50:27Z"
                message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-27T08:49:59.816Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:49:49Z"
          - containerID: docker://900ac4e31c41e06752f7cfdc359e8b210236715c0df36ab163d1346e18b9f616
            image: sha256:6f40bd0d4755ea63b7c947c27d7693efd3c474110f5adf8da91beffc7582df41
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/imagedigestexporter-6e7c518e6125f31761ebe0b96cc63971@sha256:4b49cd61de200fabf6c6446ceb9b4391ca99298d900a905b3e069dd429421b29
            lastState: {}
            name: step-image-digest-exporter-txscz
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://900ac4e31c41e06752f7cfdc359e8b210236715c0df36ab163d1346e18b9f616
                exitCode: 1
                finishedAt: "2021-09-27T08:51:40Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:51:40.146Z","type":3}]'
                reason: Error
                startedAt: "2021-09-27T08:49:54Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://9d2bfeed64a8ca66df674b2e2a697c52ffbde7af082929481f2c649eb8db8903
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://9d2bfeed64a8ca66df674b2e2a697c52ffbde7af082929481f2c649eb8db8903
                exitCode: 0
                finishedAt: "2021-09-27T08:49:24Z"
                reason: Completed
                startedAt: "2021-09-27T08:49:24Z"
          phase: Failed
          podIP: 172.20.64.4
          podIPs:
          - ip: 172.20.64.4
          qosClass: BestEffort
          startTime: "2021-09-27T08:49:03Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: da9ec75a864f1eb13679b084059a70cb84fbfafe2d0cdc95961d78d0e4c14aba
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:46:49Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: demo-pipeline
            tekton.dev/pipelineRun: demo-pipeline-run-1
            tekton.dev/pipelineTask: skaffold-unit-tests
            tekton.dev/task: unit-tests
            tekton.dev/taskRun: demo-pipeline-run-1-skaffold-unit-tests-jgff4
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"ed01ed27-29a7-4b2a-8549-0ba4d4210c86"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-workspace-jrlmk"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-run-tests"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"GOPATH"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"working-dir-initializer"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:47:48Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.30"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:48:35Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:48:41Z"
          name: demo-pipeline-run-1-skaffold-unit-tests-jgff4-pod-7x46q
          namespace: arendelle-fnwh6
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipeline-run-1-skaffold-unit-tests-jgff4
            uid: ed01ed27-29a7-4b2a-8549-0ba4d4210c86
          resourceVersion: "5526509"
          selfLink: /api/v1/namespaces/arendelle-fnwh6/pods/demo-pipeline-run-1-skaffold-unit-tests-jgff4-pod-7x46q
          uid: 2c318df6-d6f2-4287-8470-56eb2a380ecb
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-jrlmk
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/GoogleContainerTools/skaffold
            - -path
            - /workspace/go/src/github.com/GoogleContainerTools/skaffold
            - -revision
            - v0.32.0
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-jrlmk
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-run-tests
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - echo
            - --
            - pass
            command:
            - /tekton/bin/entrypoint
            env:
            - name: GOPATH
              value: /workspace/go
            image: golang
            imagePullPolicy: Always
            name: step-run-tests
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /workspace/go/src/github.com/GoogleContainerTools/skaffold
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /
          - args:
            - -c
            - mkdir -p /workspace/go/src/github.com/GoogleContainerTools/skaffold
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: working-dir-initializer
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-hgln6
              readOnly: true
            workingDir: /workspace
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-hgln6
            secret:
              defaultMode: 420
              secretName: default-token-hgln6
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:47:19Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:48:35Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:48:35Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:46:49Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://28c3ba292f3186d8b23b9eeefa2b850cac1dc844703254368b641e1a54df4ba2
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-workspace-jrlmk
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://28c3ba292f3186d8b23b9eeefa2b850cac1dc844703254368b641e1a54df4ba2
                exitCode: 0
                finishedAt: "2021-09-27T08:48:14Z"
                message: '[{"key":"commit","value":"6ed7aad5e8a36052ee5f6079fc91368e362121f7","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"url","value":"https://github.com/GoogleContainerTools/skaffold","resourceName":"workspace","resourceRef":{"name":"workspace"}},{"key":"StartedAt","value":"2021-09-27T08:47:53.830Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:47:22Z"
          - containerID: docker://07e1e1fc93e1c3a80275c20fa3624c77ec7e93a6f2bcbaa6d1a57687b2f7dd0b
            image: golang:latest
            imageID: docker-pullable://golang@sha256:285cf0cb73ab995caee61b900b2be123cd198f3541ce318c549ea5ff9832bdf0
            lastState: {}
            name: step-run-tests
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://07e1e1fc93e1c3a80275c20fa3624c77ec7e93a6f2bcbaa6d1a57687b2f7dd0b
                exitCode: 0
                finishedAt: "2021-09-27T08:48:15Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:48:14.982Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:47:37Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://0f6073a2eb51d5ad7747ab2946c2d00596ae0dea50827d3b8740a3fbccdba3d4
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://0f6073a2eb51d5ad7747ab2946c2d00596ae0dea50827d3b8740a3fbccdba3d4
                exitCode: 0
                finishedAt: "2021-09-27T08:47:05Z"
                reason: Completed
                startedAt: "2021-09-27T08:47:05Z"
          - containerID: docker://07cbff1a59105436457d911c2b7c95408ad9c8cb25f86a657e42aefe7eff57da
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: working-dir-initializer
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://07cbff1a59105436457d911c2b7c95408ad9c8cb25f86a657e42aefe7eff57da
                exitCode: 0
                finishedAt: "2021-09-27T08:47:15Z"
                reason: Completed
                startedAt: "2021-09-27T08:47:15Z"
          phase: Succeeded
          podIP: 172.20.64.30
          podIPs:
          - ip: 172.20.64.30
          qosClass: BestEffort
          startTime: "2021-09-27T08:46:50Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-fnwh6 ###
    panic.go:636: #####################################################
    build_logs.go:37: build logs 
        >>> Container step-create-dir-builtimage-6b55d:
        
        >>> Container step-git-source-workspace-5747z:
        {"level":"info","ts":1632732627.6072648,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/workspace"}
        {"level":"info","ts":1632732627.6529377,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/workspace"}
        
        >>> Container step-build-and-push:
        [36mINFO[0m[0006] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0006] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0006] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0006] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0006] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0006] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0007] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0007] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0007] Built cross stage deps: map[0:[/app]]        
        [36mINFO[0m[0007] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0008] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0008] Unpacking rootfs as cmd COPY app.go . requires it. 
        [36mINFO[0m[0024] Taking snapshot of full filesystem...        
        [36mINFO[0m[0061] COPY app.go .                                
        [36mINFO[0m[0061] Taking snapshot of files...                  
        [36mINFO[0m[0061] RUN go build -o /app .                       
        [36mINFO[0m[0061] cmd: /bin/sh                                 
        [36mINFO[0m[0061] args: [-c go build -o /app .]                
        # _/go
        /usr/local/go/pkg/tool/linux_ppc64le/link: running gcc failed: exec: "gcc": executable file not found in $PATH
        
        error building image: error building stage: failed to execute command: waiting for process to exit: exit status 2
        
        >>> Container step-image-digest-exporter-ftblm:
        2021/09/27 08:51:36 Skipping step because a previous step failed
    build_logs.go:37: build logs 
        >>> Container step-create-dir-builtimage-jbtkb:
        
        >>> Container step-git-source-workspace-sb7hz:
        {"level":"info","ts":1632732625.2821176,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/workspace"}
        {"level":"info","ts":1632732625.3235817,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/workspace"}
        
        >>> Container step-build-and-push:
        [36mINFO[0m[0004] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0004] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0004] Resolved base name golang:1.12.5-alpine3.9 to golang:1.12.5-alpine3.9 
        [36mINFO[0m[0004] Resolved base name alpine:3.9 to alpine:3.9  
        [36mINFO[0m[0004] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0004] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0005] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0005] Retrieving image manifest alpine:3.9         
        [36mINFO[0m[0005] Built cross stage deps: map[0:[/web]]        
        [36mINFO[0m[0005] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0005] Retrieving image manifest golang:1.12.5-alpine3.9 
        [36mINFO[0m[0006] Unpacking rootfs as cmd COPY web.go . requires it. 
        [36mINFO[0m[0023] Taking snapshot of full filesystem...        
        [36mINFO[0m[0069] COPY web.go .                                
        [36mINFO[0m[0071] Taking snapshot of files...                  
        [36mINFO[0m[0071] RUN go build -o /web .                       
        [36mINFO[0m[0071] cmd: /bin/sh                                 
        [36mINFO[0m[0071] args: [-c go build -o /web .]                
        # _/go
        /usr/local/go/pkg/tool/linux_ppc64le/link: running gcc failed: exec: "gcc": executable file not found in $PATH
        
        error building image: error building stage: failed to execute command: waiting for process to exit: exit status 2
        
        >>> Container step-image-digest-exporter-txscz:
        2021/09/27 08:51:40 Skipping step because a previous step failed
    build_logs.go:37: build logs 
        >>> Container step-git-source-workspace-jrlmk:
        {"level":"info","ts":1632732491.1687107,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/GoogleContainerTools/skaffold @ 6ed7aad5e8a36052ee5f6079fc91368e362121f7 (grafted, HEAD) in path /workspace/go/src/github.com/GoogleContainerTools/skaffold"}
        {"level":"info","ts":1632732491.2091181,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/go/src/github.com/GoogleContainerTools/skaffold"}
        
        >>> Container step-run-tests:
        pass
=== CONT  TestExamples/v1alpha1/taskruns/configmap
    init_test.go:135: Create namespace arendelle-hjksz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-hjksz"
=== CONT  TestExamples/v1beta1/taskruns/task-output-image
    examples_test.go:169: Deleting namespace arendelle-64qw6
=== CONT  TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
    init_test.go:135: Create namespace arendelle-mjfpg to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-mjfpg"
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun
    examples_test.go:169: Deleting namespace arendelle-hwsqv
=== CONT  TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
    init_test.go:135: Create namespace arendelle-rdhxx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rdhxx"
=== CONT  TestExamples/v1beta1/pipelineruns/clustertask-pipelinerun
    examples_test.go:144: exit status 1 Output: pipeline.tekton.dev/sample-pipeline-cluster-task-4 created
        pipelinerun.tekton.dev/demo-pipeline-run-4 created
        Error from server (AlreadyExists): error when creating "STDIN": clustertasks.tekton.dev "cluster-task-pipeline-4" already exists
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-mjfpg ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:52:06Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:52:06Z"
          name: sample-pipeline-cluster-task-4
          namespace: arendelle-mjfpg
          resourceVersion: "5528195"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-mjfpg/pipelines/sample-pipeline-cluster-task-4
          uid: 19f448ea-9482-4008-9c23-94784880f07f
        spec:
          tasks:
          - name: cluster-task-pipeline-4
            taskRef:
              kind: ClusterTask
              name: cluster-task-pipeline-4
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:52:06Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:52:06Z"
          name: demo-pipeline-run-4
          namespace: arendelle-mjfpg
          resourceVersion: "5528198"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-mjfpg/pipelineruns/demo-pipeline-run-4
          uid: 5b59e95b-f065-4e1e-972f-8b5b34f0ab4b
        spec:
          pipelineRef:
            name: sample-pipeline-cluster-task-4
          serviceAccountName: default
          timeout: 1h0m0s
        status: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-27T08:52:03Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:52:03Z"
          name: clustertask-v1alpha1
          resourceVersion: "5528137"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/clustertask-v1alpha1
          uid: b017629c-09b0-48dc-825b-dfe84f4f9a83
        spec:
          steps:
          - image: ubuntu
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-mjfpg ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    init_test.go:135: Create namespace arendelle-89rt6 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-89rt6"
=== CONT  TestExamples/v1alpha1/taskruns/configmap
    examples_test.go:169: Deleting namespace arendelle-hjksz
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    init_test.go:135: Create namespace arendelle-qpxcx to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-qpxcx"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec
    examples_test.go:169: Deleting namespace arendelle-tqnfv
=== CONT  TestExamples/v1beta1/taskruns/step-by-digest
    init_test.go:135: Create namespace arendelle-fqxlw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fqxlw"
=== CONT  TestExamples/v1alpha1/taskruns/clustertask
    examples_test.go:109: Deleting clustertask clustertask-v1alpha1
    examples_test.go:169: Deleting namespace arendelle-8nrg2
=== CONT  TestExamples/v1beta1/taskruns/sidecar-interp
    init_test.go:135: Create namespace arendelle-6r94x to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6r94x"
=== CONT  TestExamples/v1alpha1/taskruns/git-resource
    examples_test.go:169: Deleting namespace arendelle-fqb6q
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
    init_test.go:135: Create namespace arendelle-d28kd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-d28kd"
=== CONT  TestExamples/v1beta1/taskruns/authenticating-git-commands
    examples_test.go:169: Deleting namespace arendelle-nwvhh
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    init_test.go:135: Create namespace arendelle-7grgc to deploy to
=== CONT  TestExamples/v1beta1/taskruns/step-by-digest
    examples_test.go:169: Deleting namespace arendelle-fqxlw
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7grgc"
=== CONT  TestExamples/v1beta1/taskruns/secret-env
    init_test.go:135: Create namespace arendelle-fk2n6 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fk2n6"
=== CONT  TestExamples/v1beta1/taskruns/pullrequest_input_copystep_output
    examples_test.go:169: Deleting namespace arendelle-rdhxx
=== CONT  TestExamples/v1alpha1/taskruns/workingdir
    init_test.go:135: Create namespace arendelle-dnvfz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dnvfz"
=== CONT  TestExamples/v1beta1/taskruns/sidecar-interp
    examples_test.go:169: Deleting namespace arendelle-6r94x
=== CONT  TestExamples/v1beta1/taskruns/secret-volume-params
    init_test.go:135: Create namespace arendelle-jlsj4 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-jlsj4"
=== CONT  TestExamples/v1alpha1/taskruns/workspace
    examples_test.go:62: Failed waiting for task run done: "custom-volume-2ktfx" failed
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-7grgc ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-27T08:54:13Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:54:13Z"
          name: clustertask-with-optional-resources-v1beta1
          resourceVersion: "5530107"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/clustertask-with-optional-resources-v1beta1
          uid: 45498b89-bcab-4ad8-923f-146d37c8ab06
        spec:
          params:
          - default: README.md
            name: filename
            type: string
          resources:
            inputs:
            - name: git-repo
              optional: true
              type: git
            outputs:
            - name: optionalimage
              optional: true
              type: image
          steps:
          - image: ubuntu
            name: task-echo-success
            resources: {}
            script: |
              #!/usr/bin/env bash
              echo "success"
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:54:39Z"
          generateName: custom-volume-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:workspaces: {}
                f:workspaces: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:54:39Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:completionTime: {}
                f:conditions: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:workspaces: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:50Z"
          name: custom-volume-2ktfx
          namespace: arendelle-7grgc
          resourceVersion: "5530466"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-7grgc/taskruns/custom-volume-2ktfx
          uid: a0fd2183-12bd-4f31-9140-9805d4f35ada
        spec:
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: echo $(workspaces.custom.volume) > $(workspaces.custom.path)/foo
            - image: ubuntu
              name: read
              resources: {}
              script: cat $(workspaces.custom.path)/foo | grep $(workspaces.custom.volume)
            - image: ubuntu
              name: write2
              resources: {}
              script: echo $(workspaces.custom2.path) > $(workspaces.custom2.path)/foo
            - image: ubuntu
              name: read2
              resources: {}
              script: cat $(workspaces.custom2.path)/foo | grep $(workspaces.custom2.path)
            - image: ubuntu
              name: write3
              resources: {}
              script: echo $(workspaces.custom3.path) > $(workspaces.custom3.path)/foo
            - image: ubuntu
              name: read3
              resources: {}
              script: cat $(workspaces.custom3.path)/foo | grep $(workspaces.custom3.path)
            - image: ubuntu
              name: readconfigmap
              resources: {}
              script: cat $(workspaces.custom4.path)/my-message.txt | grep "hello world"
            - image: ubuntu
              name: readsecret
              resources: {}
              script: |
                #!/usr/bin/env bash
                set -xe
                cat $(workspaces.custom5.path)/username | grep "user"
                cat $(workspaces.custom5.path)/message | grep "hello secret"
            workspaces:
            - name: custom
            - mountPath: /foo/bar/baz
              name: custom2
            - name: custom3
            - mountPath: /baz/bar/quux
              name: custom4
            - mountPath: /my/secret/volume
              name: custom5
          timeout: 1h0m0s
          workspaces:
          - name: custom
            persistentVolumeClaim:
              claimName: my-pvc
            subPath: my-subdir
          - name: custom2
            persistentVolumeClaim:
              claimName: my-pvc
          - emptyDir: {}
            name: custom3
            subPath: testing
          - configMap:
              items:
              - key: message
                path: my-message.txt
              name: my-configmap
            name: custom4
          - name: custom5
            secret:
              secretName: my-secret
        status:
          completionTime: "2021-09-27T08:54:50Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:54:50Z"
            message: 'failed to create task run pod "custom-volume-2ktfx": No API token found
              for service account "default", retry after the token is automatically created
              and added to the service account. Maybe invalid TaskSpec'
            reason: CouldntGetTask
            status: "False"
            type: Succeeded
          podName: ""
          startTime: "2021-09-27T08:54:40Z"
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: echo $(workspaces.custom.volume) > $(workspaces.custom.path)/foo
            - image: ubuntu
              name: read
              resources: {}
              script: cat $(workspaces.custom.path)/foo | grep $(workspaces.custom.volume)
            - image: ubuntu
              name: write2
              resources: {}
              script: echo $(workspaces.custom2.path) > $(workspaces.custom2.path)/foo
            - image: ubuntu
              name: read2
              resources: {}
              script: cat $(workspaces.custom2.path)/foo | grep $(workspaces.custom2.path)
            - image: ubuntu
              name: write3
              resources: {}
              script: echo $(workspaces.custom3.path) > $(workspaces.custom3.path)/foo
            - image: ubuntu
              name: read3
              resources: {}
              script: cat $(workspaces.custom3.path)/foo | grep $(workspaces.custom3.path)
            - image: ubuntu
              name: readconfigmap
              resources: {}
              script: cat $(workspaces.custom4.path)/my-message.txt | grep "hello world"
            - image: ubuntu
              name: readsecret
              resources: {}
              script: |
                #!/usr/bin/env bash
                set -xe
                cat $(workspaces.custom5.path)/username | grep "user"
                cat $(workspaces.custom5.path)/message | grep "hello secret"
            workspaces:
            - name: custom
            - mountPath: /foo/bar/baz
              name: custom2
            - name: custom3
            - mountPath: /baz/bar/quux
              name: custom4
            - mountPath: /my/secret/volume
              name: custom5
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-7grgc ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/taskruns/image-params
    init_test.go:135: Create namespace arendelle-dgc6v to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-dgc6v"
=== CONT  TestExamples/v1beta1/pipelineruns/workspace-from-volumeclaimtemplate
    examples_test.go:169: Deleting namespace arendelle-89rt6
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    init_test.go:135: Create namespace arendelle-lcxjd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-lcxjd"
=== CONT  TestExamples/v1beta1/taskruns/optional-resources-with-clustertask
    examples_test.go:109: Deleting clustertask clustertask-with-optional-resources-v1beta1
    examples_test.go:169: Deleting namespace arendelle-d28kd
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
    init_test.go:135: Create namespace arendelle-xkkt2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xkkt2"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-fcs8f ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-qpxcx ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/taskruns/secret-env
    init_test.go:172: Failed to get SA "default" in namespace "arendelle-fk2n6" for tests: etcdserver: request timed out
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
=== CONT  TestExamples/v1alpha1/taskruns/workingdir
    init_test.go:172: Failed to get SA "default" in namespace "arendelle-dnvfz" for tests: etcdserver: request timed out
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
=== CONT  TestExamples/v1beta1/taskruns/git-ssh-creds-without-known_hosts
    init_test.go:172: Failed to get SA "default" in namespace "arendelle-xkkt2" for tests: etcdserver: request timed out
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1alpha1/taskruns/task-result
=== CONT  TestExamples/v1beta1/taskruns/image-params
    init_test.go:172: Failed to get SA "default" in namespace "arendelle-dgc6v" for tests: etcdserver: request timed out
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
=== CONT  TestExamples/v1beta1/pipelineruns/using-retries-and-retry-count-variables
    init_test.go:172: Failed to get SA "default" in namespace "arendelle-lcxjd" for tests: etcdserver: request timed out
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
=== CONT  TestExamples/v1beta1/taskruns/secret-volume-params
    init_test.go:172: Failed to get SA "default" in namespace "arendelle-jlsj4" for tests: etcdserver: request timed out
=== CONT  TestExamples/v1beta1/taskruns/home-volume
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    init_test.go:135: Create namespace arendelle-6tpbs to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
    init_test.go:135: Create namespace arendelle-cbhct to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/task-result
    init_test.go:135: Create namespace arendelle-6lr6h to deploy to
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
    init_test.go:135: Create namespace arendelle-lmn6t to deploy to
=== CONT  TestExamples/v1beta1/taskruns/home-volume
    init_test.go:135: Create namespace arendelle-xnzcl to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
    init_test.go:135: Create namespace arendelle-x9mm9 to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6tpbs"
=== CONT  TestExamples/v1alpha1/taskruns/task-result
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-6lr6h"
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-lmn6t"
=== CONT  TestExamples/v1beta1/taskruns/home-volume
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-xnzcl"
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-x9mm9"
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-cbhct"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:53:01Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:53:01Z"
          name: conditional-pipeline
          namespace: arendelle-qpxcx
          resourceVersion: "5529556"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-qpxcx/pipelines/conditional-pipeline
          uid: 746c179f-fff7-44ce-aa1b-c4b1727f7dc7
        spec:
          params:
          - default: README.md
            name: path
            type: string
          resources:
          - name: source-repo
            type: git
          tasks:
          - name: first-create-file
            resources:
              outputs:
              - name: workspace
                resource: source-repo
            taskRef:
              kind: Task
              name: create-readme-file
          - conditions:
            - conditionRef: file-exists
              params:
              - name: path
                value: $(params.path)
              resources:
              - from:
                - first-create-file
                name: workspace
                resource: source-repo
            name: then-check
            taskRef:
              kind: Task
              name: echo-hello
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T08:53:00Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:53:00Z"
          name: pipeline-git
          namespace: arendelle-qpxcx
          resourceVersion: "5529537"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-qpxcx/pipelineresources/pipeline-git
          uid: cae32c41-48c5-474c-8f65-69265178fa60
        spec:
          params:
          - name: revision
            value: main
          - name: url
            value: https://github.com/tektoncd/pipeline
          type: git
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:53:02Z"
          generation: 1
          labels:
            tekton.dev/pipeline: conditional-pipeline
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:53:02Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:conditional-pr-first-create-file-7jh9c:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:outputs: {}
                        f:steps: {}
                  f:conditional-pr-then-check-msgcp:
                    .: {}
                    f:conditionChecks:
                      .: {}
                      f:conditional-pr-then-check-msgcp-file-exists-0-xqsjt:
                        .: {}
                        f:conditionName: {}
                        f:status:
                          .: {}
                          f:check: {}
                          f:conditions: {}
                          f:podName: {}
                          f:startTime: {}
                    f:pipelineTaskName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:51Z"
          name: conditional-pr
          namespace: arendelle-qpxcx
          resourceVersion: "5530507"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-qpxcx/pipelineruns/conditional-pr
          uid: 06b9403b-aff4-41e1-b1ef-583aaf8aed9e
        spec:
          pipelineRef:
            name: conditional-pipeline
          resources:
          - name: source-repo
            resourceRef:
              name: pipeline-git
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:54:51Z"
            message: 'Tasks Completed: 1 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: README.md
              name: path
              type: string
            resources:
            - name: source-repo
              type: git
            tasks:
            - name: first-create-file
              resources:
                outputs:
                - name: workspace
                  resource: source-repo
              taskRef:
                kind: Task
                name: create-readme-file
            - conditions:
              - conditionRef: file-exists
                params:
                - name: path
                  value: $(params.path)
                resources:
                - from:
                  - first-create-file
                  name: workspace
                  resource: source-repo
              name: then-check
              taskRef:
                kind: Task
                name: echo-hello
          startTime: "2021-09-27T08:53:02Z"
          taskRuns:
            conditional-pr-first-create-file-7jh9c:
              pipelineTaskName: first-create-file
              status:
                completionTime: "2021-09-27T08:54:51Z"
                conditions:
                - lastTransitionTime: "2021-09-27T08:54:51Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: conditional-pr-first-create-file-7jh9c-pod-dpbq7
                startTime: "2021-09-27T08:53:02Z"
                steps:
                - container: step-create-dir-workspace-7l4dd
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-workspace-7l4dd
                  terminated:
                    containerID: docker://45f15157bd23e9b05ff305dd0ff5b12f9524fb45ab6e5b9c0400171301aa684c
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:46Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:46Z"
                - container: step-write-new-stuff
                  imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
                  name: write-new-stuff
                  terminated:
                    containerID: docker://5cbef513b3367a741d5a0b8f9cfccfda23e6e2998d061ab40e1fe33d05ac8cc2
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:47Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:46Z"
                - container: step-source-mkdir-workspace-pkh2n
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-mkdir-workspace-pkh2n
                  terminated:
                    containerID: docker://9c19262545336ccb13041a0bcf83dc4e5786d29b2f23650f9e1876335328843a
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:47Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:47Z"
                - container: step-source-copy-workspace-dcvsp
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-copy-workspace-dcvsp
                  terminated:
                    containerID: docker://a1343a9e9001a8d16c141798e110bd36583bcf05e6bfd458c0db9ea2c84c3d81
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:49Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:48Z"
                taskSpec:
                  resources:
                    outputs:
                    - name: workspace
                      type: git
                  steps:
                  - image: ubuntu
                    name: write-new-stuff
                    resources: {}
                    script: touch $(resources.outputs.workspace.path)/README.md
            conditional-pr-then-check-msgcp:
              conditionChecks:
                conditional-pr-then-check-msgcp-file-exists-0-xqsjt:
                  conditionName: file-exists-0
                  status:
                    check: {}
                    conditions:
                    - lastTransitionTime: "2021-09-27T08:54:51Z"
                      message: Pending
                      reason: Pending
                      status: Unknown
                      type: Succeeded
                    podName: conditional-pr-then-check-msgcp-file-exists-0-xqsjt-pod-n7qfc
                    startTime: "2021-09-27T08:54:51Z"
              pipelineTaskName: then-check
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:53:00Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:outputs: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:53:00Z"
          name: create-readme-file
          namespace: arendelle-qpxcx
          resourceVersion: "5529540"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-qpxcx/tasks/create-readme-file
          uid: 5a2c2828-4dcc-477b-90dd-9348c8e8ca45
        spec:
          resources:
            outputs:
            - name: workspace
              type: git
          steps:
          - image: ubuntu
            name: write-new-stuff
            resources: {}
            script: touch $(resources.outputs.workspace.path)/README.md
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:53:01Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:53:01Z"
          name: echo-hello
          namespace: arendelle-qpxcx
          resourceVersion: "5529549"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-qpxcx/tasks/echo-hello
          uid: bd11936e-b779-4446-9c86-f02113e2511b
        spec:
          steps:
          - image: ubuntu
            name: echo
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:53:02Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-readme-file
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"06b9403b-aff4-41e1-b1ef-583aaf8aed9e"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:51Z"
          name: conditional-pr-first-create-file-7jh9c
          namespace: arendelle-qpxcx
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: conditional-pr
            uid: 06b9403b-aff4-41e1-b1ef-583aaf8aed9e
          resourceVersion: "5530484"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-qpxcx/taskruns/conditional-pr-first-create-file-7jh9c
          uid: 70d24bc6-9bc1-4e04-82f1-4de9ea853658
        spec:
          resources:
            outputs:
            - name: workspace
              paths:
              - /pvc/first-create-file/workspace
              resourceRef:
                name: pipeline-git
          serviceAccountName: default
          taskRef:
            kind: Task
            name: create-readme-file
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:54:51Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:54:51Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: conditional-pr-first-create-file-7jh9c-pod-dpbq7
          startTime: "2021-09-27T08:53:02Z"
          steps:
          - container: step-create-dir-workspace-7l4dd
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-workspace-7l4dd
            terminated:
              containerID: docker://45f15157bd23e9b05ff305dd0ff5b12f9524fb45ab6e5b9c0400171301aa684c
              exitCode: 0
              finishedAt: "2021-09-27T08:54:46Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:46Z"
          - container: step-write-new-stuff
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: write-new-stuff
            terminated:
              containerID: docker://5cbef513b3367a741d5a0b8f9cfccfda23e6e2998d061ab40e1fe33d05ac8cc2
              exitCode: 0
              finishedAt: "2021-09-27T08:54:47Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:46Z"
          - container: step-source-mkdir-workspace-pkh2n
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-mkdir-workspace-pkh2n
            terminated:
              containerID: docker://9c19262545336ccb13041a0bcf83dc4e5786d29b2f23650f9e1876335328843a
              exitCode: 0
              finishedAt: "2021-09-27T08:54:47Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:47Z"
          - container: step-source-copy-workspace-dcvsp
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-copy-workspace-dcvsp
            terminated:
              containerID: docker://a1343a9e9001a8d16c141798e110bd36583bcf05e6bfd458c0db9ea2c84c3d81
              exitCode: 0
              finishedAt: "2021-09-27T08:54:49Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:48Z"
          taskSpec:
            resources:
              outputs:
              - name: workspace
                type: git
            steps:
            - image: ubuntu
              name: write-new-stuff
              resources: {}
              script: touch $(resources.outputs.workspace.path)/README.md
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:54:51Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: conditional-pr-then-check-msgcp-file-exists-0-xqsjt
            tekton.dev/conditionName: file-exists
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: then-check
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"06b9403b-aff4-41e1-b1ef-583aaf8aed9e"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:51Z"
          name: conditional-pr-then-check-msgcp-file-exists-0-xqsjt
          namespace: arendelle-qpxcx
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: conditional-pr
            uid: 06b9403b-aff4-41e1-b1ef-583aaf8aed9e
          resourceVersion: "5530502"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-qpxcx/taskruns/conditional-pr-then-check-msgcp-file-exists-0-xqsjt
          uid: 158844c9-b071-4420-9405-c2da157f0275
        spec:
          params:
          - name: path
            value: README.md
          resources:
            inputs:
            - name: workspace
              resourceRef:
                name: pipeline-git
          serviceAccountName: default
          taskSpec:
            params:
            - name: path
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
            steps:
            - image: alpine
              name: condition-check-file-exists
              resources: {}
              script: test -f /workspace/workspace/$(inputs.params.path)
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:54:51Z"
            message: Pending
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: conditional-pr-then-check-msgcp-file-exists-0-xqsjt-pod-n7qfc
          startTime: "2021-09-27T08:54:51Z"
          taskSpec:
            params:
            - name: path
              type: string
            resources:
              inputs:
              - name: workspace
                type: git
            steps:
            - image: alpine
              name: condition-check-file-exists
              resources: {}
              script: test -f /workspace/workspace/$(inputs.params.path)
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 8751b738ba9e1f9fcb238bf275c0f1078e651ed0b0e1b7ed0984bf9747bb14f5
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:53:10Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: first-create-file
            tekton.dev/task: create-readme-file
            tekton.dev/taskRun: conditional-pr-first-create-file-7jh9c
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"70d24bc6-9bc1-4e04-82f1-4de9ea853658"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-create-dir-workspace-7l4dd"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-copy-workspace-dcvsp"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-mkdir-workspace-pkh2n"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-write-new-stuff"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"conditional-pr-pvc"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:42Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.10"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:54:51Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:54:52Z"
          name: conditional-pr-first-create-file-7jh9c-pod-dpbq7
          namespace: arendelle-qpxcx
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: conditional-pr-first-create-file-7jh9c
            uid: 70d24bc6-9bc1-4e04-82f1-4de9ea853658
          resourceVersion: "5530510"
          selfLink: /api/v1/namespaces/arendelle-qpxcx/pods/conditional-pr-first-create-file-7jh9c-pod-dpbq7
          uid: e889258d-fa69-4260-92dc-e8454b9e501c
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-workspace-7l4dd
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-workspace-7l4dd
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write-new-stuff
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-8rmbp
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write-new-stuff
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-mkdir-workspace-pkh2n
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - mkdir
            - --
            - -p
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-mkdir-workspace-pkh2n
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: conditional-pr-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-copy-workspace-dcvsp
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - cp
            - --
            - -r
            - /workspace/output/workspace/.
            - /pvc/first-create-file/workspace
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-copy-workspace-dcvsp
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: conditional-pr-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-8rmbp"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdG91Y2ggL3dvcmtzcGFjZS9vdXRwdXQvd29ya3NwYWNlL1JFQURNRS5tZA==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - name: conditional-pr-pvc
            persistentVolumeClaim:
              claimName: conditional-pr-pvc
          - name: default-token-t77k8
            secret:
              defaultMode: 420
              secretName: default-token-t77k8
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:13Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:51Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:51Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:53:11Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://45f15157bd23e9b05ff305dd0ff5b12f9524fb45ab6e5b9c0400171301aa684c
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-workspace-7l4dd
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://45f15157bd23e9b05ff305dd0ff5b12f9524fb45ab6e5b9c0400171301aa684c
                exitCode: 0
                finishedAt: "2021-09-27T08:54:46Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:46.623Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:54:14Z"
          - containerID: docker://a1343a9e9001a8d16c141798e110bd36583bcf05e6bfd458c0db9ea2c84c3d81
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-copy-workspace-dcvsp
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://a1343a9e9001a8d16c141798e110bd36583bcf05e6bfd458c0db9ea2c84c3d81
                exitCode: 0
                finishedAt: "2021-09-27T08:54:49Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:48.216Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:54:41Z"
          - containerID: docker://9c19262545336ccb13041a0bcf83dc4e5786d29b2f23650f9e1876335328843a
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-mkdir-workspace-pkh2n
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://9c19262545336ccb13041a0bcf83dc4e5786d29b2f23650f9e1876335328843a
                exitCode: 0
                finishedAt: "2021-09-27T08:54:47Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:47.438Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:54:40Z"
          - containerID: docker://5cbef513b3367a741d5a0b8f9cfccfda23e6e2998d061ab40e1fe33d05ac8cc2
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write-new-stuff
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://5cbef513b3367a741d5a0b8f9cfccfda23e6e2998d061ab40e1fe33d05ac8cc2
                exitCode: 0
                finishedAt: "2021-09-27T08:54:47Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:46.739Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:54:20Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://1965a6725bd08405c56b1cf15fe174a42e551e3b92c4644bb8edc563abfea271
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://1965a6725bd08405c56b1cf15fe174a42e551e3b92c4644bb8edc563abfea271
                exitCode: 0
                finishedAt: "2021-09-27T08:54:00Z"
                reason: Completed
                startedAt: "2021-09-27T08:53:59Z"
          - containerID: docker://0953d0f56e86bb9be4970b1bf0a66d319633a1c7eee85ba1b78834c396f1ddaa
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://0953d0f56e86bb9be4970b1bf0a66d319633a1c7eee85ba1b78834c396f1ddaa
                exitCode: 0
                finishedAt: "2021-09-27T08:54:13Z"
                reason: Completed
                startedAt: "2021-09-27T08:54:12Z"
          phase: Succeeded
          podIP: 172.20.64.10
          podIPs:
          - ip: 172.20.64.10
          qosClass: BestEffort
          startTime: "2021-09-27T08:53:12Z"
        
        ---
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:54:51Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: conditional-pr-then-check-msgcp-file-exists-0-xqsjt
            tekton.dev/conditionName: file-exists
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: conditional-pipeline
            tekton.dev/pipelineRun: conditional-pr
            tekton.dev/pipelineTask: then-check
            tekton.dev/taskRun: conditional-pr-then-check-msgcp-file-exists-0-xqsjt
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"158844c9-b071-4420-9405-c2da157f0275"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-condition-check-file-exists"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-workspace-rrg7m"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:51Z"
          name: conditional-pr-then-check-msgcp-file-exists-0-xqsjt-pod-n7qfc
          namespace: arendelle-qpxcx
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: conditional-pr-then-check-msgcp-file-exists-0-xqsjt
            uid: 158844c9-b071-4420-9405-c2da157f0275
          resourceVersion: "5530494"
          selfLink: /api/v1/namespaces/arendelle-qpxcx/pods/conditional-pr-then-check-msgcp-file-exists-0-xqsjt-pod-n7qfc
          uid: 11330d30-fb0c-44a6-8fe5-e199ad96b746
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-workspace-rrg7m
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/workspace
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-workspace-rrg7m
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-condition-check-file-exists
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-56k9j
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine
            imagePullPolicy: Always
            name: step-condition-check-file-exists
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-56k9j"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdGVzdCAtZiAvd29ya3NwYWNlL3dvcmtzcGFjZS9SRUFETUUubWQ=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-t77k8
              readOnly: true
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-t77k8
            secret:
              defaultMode: 420
              secretName: default-token-t77k8
        status:
          phase: Pending
          qosClass: BestEffort
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-qpxcx ###
    panic.go:636: #####################################################
    build_logs.go:37: build logs 
        >>> Container step-create-dir-workspace-7l4dd:
        
        >>> Container step-write-new-stuff:
        + touch /workspace/output/workspace/README.md
        
        >>> Container step-source-mkdir-workspace-pkh2n:
        
        >>> Container step-source-copy-workspace-dcvsp:
    build_logs.go:37: build logs 
        >>> Container step-git-source-workspace-rrg7m:
        
        >>> Container step-condition-check-file-exists:
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    init_test.go:135: Create namespace arendelle-d867z to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-d867z"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-resourcespec
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T08:52:06Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:52:06Z"
          name: pipeline-to-list-files
          namespace: arendelle-fcs8f
          resourceVersion: "5528194"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fcs8f/pipelines/pipeline-to-list-files
          uid: 47323e8b-886e-4b2d-bf42-485921fbf35b
        spec:
          params:
          - default: README.md
            name: path
            type: string
          resources:
          - name: pipeline-git
            type: git
          tasks:
          - name: list-files
            resources:
              inputs:
              - name: pipeline-git
                resource: pipeline-git
              outputs:
              - name: pipeline-git
                resource: pipeline-git
            taskRef:
              kind: Task
              name: task-to-list-files
          - conditions:
            - conditionRef: always-true-sample-condition
              resources:
              - name: pipeline-git
                resource: pipeline-git
            name: conditional-list-files
            resources:
              inputs:
              - name: pipeline-git
                resource: pipeline-git
              outputs:
              - name: pipeline-git
                resource: pipeline-git
            taskRef:
              kind: Task
              name: task-to-list-files
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T08:52:06Z"
          generation: 1
          labels:
            tekton.dev/pipeline: pipeline-to-list-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:52:06Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:demo-pipelinerun-with-resourcespec-conditional-list-files-fmh92:
                    .: {}
                    f:conditionChecks:
                      .: {}
                      f:demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb:
                        .: {}
                        f:conditionName: {}
                        f:status:
                          .: {}
                          f:check:
                            .: {}
                            f:terminated:
                              .: {}
                              f:containerID: {}
                              f:exitCode: {}
                              f:finishedAt: {}
                              f:reason: {}
                              f:startedAt: {}
                          f:completionTime: {}
                          f:conditions: {}
                          f:podName: {}
                          f:startTime: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
                  f:demo-pipelinerun-with-resourcespec-list-files-vnhft:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:resourcesResult: {}
                      f:startTime: {}
                      f:steps: {}
                      f:taskSpec:
                        .: {}
                        f:resources:
                          .: {}
                          f:inputs: {}
                          f:outputs: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:54Z"
          name: demo-pipelinerun-with-resourcespec
          namespace: arendelle-fcs8f
          resourceVersion: "5530531"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fcs8f/pipelineruns/demo-pipelinerun-with-resourcespec
          uid: 52d0e401-9963-4cc7-87f5-b7929cce3815
        spec:
          pipelineRef:
            name: pipeline-to-list-files
          resources:
          - name: pipeline-git
            resourceSpec:
              params:
              - name: revision
                value: main
              - name: url
                value: https://github.com/tektoncd/pipeline
              type: git
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:54:42Z"
            message: 'Tasks Completed: 1 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: README.md
              name: path
              type: string
            resources:
            - name: pipeline-git
              type: git
            tasks:
            - name: list-files
              resources:
                inputs:
                - name: pipeline-git
                  resource: pipeline-git
                outputs:
                - name: pipeline-git
                  resource: pipeline-git
              taskRef:
                kind: Task
                name: task-to-list-files
            - conditions:
              - conditionRef: always-true-sample-condition
                resources:
                - name: pipeline-git
                  resource: pipeline-git
              name: conditional-list-files
              resources:
                inputs:
                - name: pipeline-git
                  resource: pipeline-git
                outputs:
                - name: pipeline-git
                  resource: pipeline-git
              taskRef:
                kind: Task
                name: task-to-list-files
          startTime: "2021-09-27T08:52:06Z"
          taskRuns:
            demo-pipelinerun-with-resourcespec-conditional-list-files-fmh92:
              conditionChecks:
                demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb:
                  conditionName: always-true-sample-condition-0
                  status:
                    check:
                      terminated:
                        containerID: docker://515621e756b3c1869938bc0f6eca05d3a7e86fa1c2f0c18a056e2f92cf2275c4
                        exitCode: 0
                        finishedAt: "2021-09-27T08:53:13Z"
                        reason: Completed
                        startedAt: "2021-09-27T08:53:09Z"
                    completionTime: "2021-09-27T08:53:56Z"
                    conditions:
                    - lastTransitionTime: "2021-09-27T08:53:56Z"
                      message: All Steps have completed executing
                      reason: Succeeded
                      status: "True"
                      type: Succeeded
                    podName: demo-pipelinerun-with-resourcespec-conditional-list-files-8wrtr
                    startTime: "2021-09-27T08:52:10Z"
              pipelineTaskName: conditional-list-files
              status:
                conditions:
                - lastTransitionTime: "2021-09-27T08:54:51Z"
                  message: Not all Steps in the Task have finished executing
                  reason: Running
                  status: Unknown
                  type: Succeeded
                podName: demo-pipelinerun-with-resourcespec-conditional-list-files-dcvdb
                startTime: "2021-09-27T08:53:56Z"
                steps:
                - container: step-create-dir-pipeline-git-b7b2f
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-pipeline-git-b7b2f
                  terminated:
                    containerID: docker://f2e587ac2bbbf62b2a95cac4c72f66912b5c4678844d18df6bd42897757d53cf
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:53Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:53Z"
                - container: step-git-source-pipeline-git-gqf98
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-pipeline-git-gqf98
                  running:
                    startedAt: "2021-09-27T08:54:40Z"
                - container: step-list
                  imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
                  name: list
                  running:
                    startedAt: "2021-09-27T08:54:43Z"
                - container: step-source-mkdir-pipeline-git-q66hb
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-mkdir-pipeline-git-q66hb
                  running:
                    startedAt: "2021-09-27T08:54:47Z"
                - container: step-source-copy-pipeline-git-x995r
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-copy-pipeline-git-x995r
                  running:
                    startedAt: "2021-09-27T08:54:50Z"
                taskSpec:
                  resources:
                    inputs:
                    - name: pipeline-git
                      type: git
                    outputs:
                    - name: pipeline-git
                      type: git
                  steps:
                  - args:
                    - -c
                    - |
                      ls -al $(resources.inputs.pipeline-git.path)
                    command:
                    - bash
                    image: ubuntu
                    name: list
                    resources: {}
            demo-pipelinerun-with-resourcespec-list-files-vnhft:
              pipelineTaskName: list-files
              status:
                completionTime: "2021-09-27T08:54:42Z"
                conditions:
                - lastTransitionTime: "2021-09-27T08:54:42Z"
                  message: All Steps have completed executing
                  reason: Succeeded
                  status: "True"
                  type: Succeeded
                podName: demo-pipelinerun-with-resourcespec-list-files-vnhft-pod-fsc57
                resourcesResult:
                - key: commit
                  resourceName: pipeline-git
                  resourceRef:
                    name: pipeline-git
                  value: 5681ce99232cffebc42b4a097514bc0a3e14a6e5
                - key: url
                  resourceName: pipeline-git
                  resourceRef:
                    name: pipeline-git
                  value: https://github.com/tektoncd/pipeline
                startTime: "2021-09-27T08:52:10Z"
                steps:
                - container: step-create-dir-pipeline-git-gpspl
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: create-dir-pipeline-git-gpspl
                  terminated:
                    containerID: docker://630080c61490da8b911893c9c3695981298e218079e54f34942206b86a31a80e
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:14Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:14Z"
                - container: step-git-source-pipeline-git-gndp7
                  imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
                  name: git-source-pipeline-git-gndp7
                  terminated:
                    containerID: docker://c32da0b7a4f07f8ff83923ad6d0495c9ac44ddca0dc5164e844b37af74858a11
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:33Z"
                    message: '[{"key":"commit","value":"5681ce99232cffebc42b4a097514bc0a3e14a6e5","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}},{"key":"url","value":"https://github.com/tektoncd/pipeline","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}}]'
                    reason: Completed
                    startedAt: "2021-09-27T08:54:15Z"
                - container: step-list
                  imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
                  name: list
                  terminated:
                    containerID: docker://53f6ec8ce174e7dbdf9d900ad23bf020786996fbb4ed987511a6e35f140b550e
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:34Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:31Z"
                - container: step-source-mkdir-pipeline-git-99nmg
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-mkdir-pipeline-git-99nmg
                  terminated:
                    containerID: docker://cabf9b04dd1aee04097a063c0ef1c92630aa9865b3923c40f64cdb4705aeb1b2
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:37Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:34Z"
                - container: step-source-copy-pipeline-git-8cvvs
                  imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
                  name: source-copy-pipeline-git-8cvvs
                  terminated:
                    containerID: docker://ddae588054dc87b65281487a490a03c05fd07682aa04744cb14830ae344966de
                    exitCode: 0
                    finishedAt: "2021-09-27T08:54:37Z"
                    reason: Completed
                    startedAt: "2021-09-27T08:54:36Z"
                taskSpec:
                  resources:
                    inputs:
                    - name: pipeline-git
                      type: git
                    outputs:
                    - name: pipeline-git
                      type: git
                  steps:
                  - args:
                    - -c
                    - |
                      ls -al $(resources.inputs.pipeline-git.path)
                    command:
                    - bash
                    image: ubuntu
                    name: list
                    resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T08:52:06Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T08:52:06Z"
          name: task-to-list-files
          namespace: arendelle-fcs8f
          resourceVersion: "5528188"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fcs8f/tasks/task-to-list-files
          uid: 90e30282-1d6f-4cc4-bf63-848dcc1ba8e7
        spec:
          resources:
            inputs:
            - name: pipeline-git
              type: git
            outputs:
            - name: pipeline-git
              type: git
          steps:
          - args:
            - -c
            - |
              ls -al $(resources.inputs.pipeline-git.path)
            command:
            - bash
            image: ubuntu
            name: list
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:52:07Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb
            tekton.dev/conditionName: always-true-sample-condition
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: conditional-list-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"52d0e401-9963-4cc7-87f5-b7929cce3815"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:resourcesResult: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:53:56Z"
          name: demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb
          namespace: arendelle-fcs8f
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipelinerun-with-resourcespec
            uid: 52d0e401-9963-4cc7-87f5-b7929cce3815
          resourceVersion: "5529962"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fcs8f/taskruns/demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb
          uid: 9fff34b5-6867-4bc8-9074-a037e17a795f
        spec:
          resources:
            inputs:
            - name: pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
          serviceAccountName: default
          taskSpec:
            resources:
              inputs:
              - name: pipeline-git
                type: git
            steps:
            - args:
              - -c
              - |
                echo "Hello from Tekton Pipeline!"
              command:
              - bash
              image: ubuntu
              name: condition-check-always-true-sample-condition
              resources: {}
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:53:56Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:53:56Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: demo-pipelinerun-with-resourcespec-conditional-list-files-8wrtr
          resourcesResult:
          - key: commit
            resourceName: pipeline-git
            resourceRef:
              name: pipeline-git
            value: 5681ce99232cffebc42b4a097514bc0a3e14a6e5
          - key: url
            resourceName: pipeline-git
            resourceRef:
              name: pipeline-git
            value: https://github.com/tektoncd/pipeline
          startTime: "2021-09-27T08:52:10Z"
          steps:
          - container: step-git-source-pipeline-git-c9fht
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-pipeline-git-c9fht
            terminated:
              containerID: docker://f10345384e67d639330d86f3fcf96e594e86f0695c3f4b78734ffdf55d48d48f
              exitCode: 0
              finishedAt: "2021-09-27T08:53:13Z"
              message: '[{"key":"commit","value":"5681ce99232cffebc42b4a097514bc0a3e14a6e5","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}},{"key":"url","value":"https://github.com/tektoncd/pipeline","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}}]'
              reason: Completed
              startedAt: "2021-09-27T08:52:55Z"
          - container: step-condition-check-always-true-sample-condition
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: condition-check-always-true-sample-condition
            terminated:
              containerID: docker://515621e756b3c1869938bc0f6eca05d3a7e86fa1c2f0c18a056e2f92cf2275c4
              exitCode: 0
              finishedAt: "2021-09-27T08:53:13Z"
              reason: Completed
              startedAt: "2021-09-27T08:53:09Z"
          taskSpec:
            resources:
              inputs:
              - name: pipeline-git
                type: git
            steps:
            - args:
              - -c
              - |
                echo "Hello from Tekton Pipeline!"
              command:
              - bash
              image: ubuntu
              name: condition-check-always-true-sample-condition
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:53:56Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: conditional-list-files
            tekton.dev/task: task-to-list-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"52d0e401-9963-4cc7-87f5-b7929cce3815"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:54Z"
          name: demo-pipelinerun-with-resourcespec-conditional-list-files-fmh92
          namespace: arendelle-fcs8f
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipelinerun-with-resourcespec
            uid: 52d0e401-9963-4cc7-87f5-b7929cce3815
          resourceVersion: "5530530"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fcs8f/taskruns/demo-pipelinerun-with-resourcespec-conditional-list-files-fmh92
          uid: 41e65948-30fd-4bf2-88b3-f232792dc16f
        spec:
          resources:
            inputs:
            - name: pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
            outputs:
            - name: pipeline-git
              paths:
              - /pvc/conditional-list-files/pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
          serviceAccountName: default
          taskRef:
            kind: Task
            name: task-to-list-files
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T08:54:51Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: demo-pipelinerun-with-resourcespec-conditional-list-files-dcvdb
          startTime: "2021-09-27T08:53:56Z"
          steps:
          - container: step-create-dir-pipeline-git-b7b2f
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-pipeline-git-b7b2f
            terminated:
              containerID: docker://f2e587ac2bbbf62b2a95cac4c72f66912b5c4678844d18df6bd42897757d53cf
              exitCode: 0
              finishedAt: "2021-09-27T08:54:53Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:53Z"
          - container: step-git-source-pipeline-git-gqf98
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-pipeline-git-gqf98
            running:
              startedAt: "2021-09-27T08:54:40Z"
          - container: step-list
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: list
            running:
              startedAt: "2021-09-27T08:54:43Z"
          - container: step-source-mkdir-pipeline-git-q66hb
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-mkdir-pipeline-git-q66hb
            running:
              startedAt: "2021-09-27T08:54:47Z"
          - container: step-source-copy-pipeline-git-x995r
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-copy-pipeline-git-x995r
            running:
              startedAt: "2021-09-27T08:54:50Z"
          taskSpec:
            resources:
              inputs:
              - name: pipeline-git
                type: git
              outputs:
              - name: pipeline-git
                type: git
            steps:
            - args:
              - -c
              - |
                ls -al $(resources.inputs.pipeline-git.path)
              command:
              - bash
              image: ubuntu
              name: list
              resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T08:52:07Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: list-files
            tekton.dev/task: task-to-list-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"52d0e401-9963-4cc7-87f5-b7929cce3815"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                  f:outputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:resourcesResult: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                    f:outputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:42Z"
          name: demo-pipelinerun-with-resourcespec-list-files-vnhft
          namespace: arendelle-fcs8f
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-pipelinerun-with-resourcespec
            uid: 52d0e401-9963-4cc7-87f5-b7929cce3815
          resourceVersion: "5530403"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fcs8f/taskruns/demo-pipelinerun-with-resourcespec-list-files-vnhft
          uid: a0082200-1138-4aba-8b91-f44c35ee4c49
        spec:
          resources:
            inputs:
            - name: pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
            outputs:
            - name: pipeline-git
              paths:
              - /pvc/list-files/pipeline-git
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: https://github.com/tektoncd/pipeline
                type: git
          serviceAccountName: default
          taskRef:
            kind: Task
            name: task-to-list-files
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T08:54:42Z"
          conditions:
          - lastTransitionTime: "2021-09-27T08:54:42Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: demo-pipelinerun-with-resourcespec-list-files-vnhft-pod-fsc57
          resourcesResult:
          - key: commit
            resourceName: pipeline-git
            resourceRef:
              name: pipeline-git
            value: 5681ce99232cffebc42b4a097514bc0a3e14a6e5
          - key: url
            resourceName: pipeline-git
            resourceRef:
              name: pipeline-git
            value: https://github.com/tektoncd/pipeline
          startTime: "2021-09-27T08:52:10Z"
          steps:
          - container: step-create-dir-pipeline-git-gpspl
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: create-dir-pipeline-git-gpspl
            terminated:
              containerID: docker://630080c61490da8b911893c9c3695981298e218079e54f34942206b86a31a80e
              exitCode: 0
              finishedAt: "2021-09-27T08:54:14Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:14Z"
          - container: step-git-source-pipeline-git-gndp7
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            name: git-source-pipeline-git-gndp7
            terminated:
              containerID: docker://c32da0b7a4f07f8ff83923ad6d0495c9ac44ddca0dc5164e844b37af74858a11
              exitCode: 0
              finishedAt: "2021-09-27T08:54:33Z"
              message: '[{"key":"commit","value":"5681ce99232cffebc42b4a097514bc0a3e14a6e5","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}},{"key":"url","value":"https://github.com/tektoncd/pipeline","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}}]'
              reason: Completed
              startedAt: "2021-09-27T08:54:15Z"
          - container: step-list
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: list
            terminated:
              containerID: docker://53f6ec8ce174e7dbdf9d900ad23bf020786996fbb4ed987511a6e35f140b550e
              exitCode: 0
              finishedAt: "2021-09-27T08:54:34Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:31Z"
          - container: step-source-mkdir-pipeline-git-99nmg
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-mkdir-pipeline-git-99nmg
            terminated:
              containerID: docker://cabf9b04dd1aee04097a063c0ef1c92630aa9865b3923c40f64cdb4705aeb1b2
              exitCode: 0
              finishedAt: "2021-09-27T08:54:37Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:34Z"
          - container: step-source-copy-pipeline-git-8cvvs
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            name: source-copy-pipeline-git-8cvvs
            terminated:
              containerID: docker://ddae588054dc87b65281487a490a03c05fd07682aa04744cb14830ae344966de
              exitCode: 0
              finishedAt: "2021-09-27T08:54:37Z"
              reason: Completed
              startedAt: "2021-09-27T08:54:36Z"
          taskSpec:
            resources:
              inputs:
              - name: pipeline-git
                type: git
              outputs:
              - name: pipeline-git
                type: git
            steps:
            - args:
              - -c
              - |
                ls -al $(resources.inputs.pipeline-git.path)
              command:
              - bash
              image: ubuntu
              name: list
              resources: {}
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 3f37d3f43c62724aec685dcb17eb8331c976740e7ee4d923bbcd54b0b5c47ea0
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:52:11Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb
            tekton.dev/conditionName: always-true-sample-condition
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: conditional-list-files
            tekton.dev/taskRun: demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"9fff34b5-6867-4bc8-9074-a037e17a795f"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-condition-check-always-true-sample-condition"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-pipeline-git-c9fht"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:52:52Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.9"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:53:56Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:53:59Z"
          name: demo-pipelinerun-with-resourcespec-conditional-list-files-8wrtr
          namespace: arendelle-fcs8f
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipelinerun-with-resourcespec-conditional-list-files-6nksb
            uid: 9fff34b5-6867-4bc8-9074-a037e17a795f
          resourceVersion: "5529991"
          selfLink: /api/v1/namespaces/arendelle-fcs8f/pods/demo-pipelinerun-with-resourcespec-conditional-list-files-8wrtr
          uid: aedfb8a4-e119-407b-9eae-f28e80ccd070
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-pipeline-git-c9fht
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/pipeline-git
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-pipeline-git-c9fht
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-condition-check-always-true-sample-condition
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - bash
            - --
            - -c
            - |
              echo "Hello from Tekton Pipeline!"
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-condition-check-always-true-sample-condition
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-mmz9h
            secret:
              defaultMode: 420
              secretName: default-token-mmz9h
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:52:32Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:53:56Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:53:56Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:52:12Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://515621e756b3c1869938bc0f6eca05d3a7e86fa1c2f0c18a056e2f92cf2275c4
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-condition-check-always-true-sample-condition
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://515621e756b3c1869938bc0f6eca05d3a7e86fa1c2f0c18a056e2f92cf2275c4
                exitCode: 0
                finishedAt: "2021-09-27T08:53:13Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:53:09.342Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:52:50Z"
          - containerID: docker://f10345384e67d639330d86f3fcf96e594e86f0695c3f4b78734ffdf55d48d48f
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-pipeline-git-c9fht
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://f10345384e67d639330d86f3fcf96e594e86f0695c3f4b78734ffdf55d48d48f
                exitCode: 0
                finishedAt: "2021-09-27T08:53:13Z"
                message: '[{"key":"commit","value":"5681ce99232cffebc42b4a097514bc0a3e14a6e5","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}},{"key":"url","value":"https://github.com/tektoncd/pipeline","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}},{"key":"StartedAt","value":"2021-09-27T08:52:55.000Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:52:37Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://4f2d03c42a0abe42ad5ee8f49f2d424af41c82c0374ff9647fc092f97466adc2
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://4f2d03c42a0abe42ad5ee8f49f2d424af41c82c0374ff9647fc092f97466adc2
                exitCode: 0
                finishedAt: "2021-09-27T08:52:30Z"
                reason: Completed
                startedAt: "2021-09-27T08:52:30Z"
          phase: Succeeded
          podIP: 172.20.64.9
          podIPs:
          - ip: 172.20.64.9
          qosClass: BestEffort
          startTime: "2021-09-27T08:52:13Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 3e3d480a74f6a0c6ff9283a25e0add15ef823ca77c7887b27193c9ee68f20eef
            cni.projectcalico.org/podIP: 172.20.64.54/32
            cni.projectcalico.org/podIPs: 172.20.64.54/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:53:59Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: conditional-list-files
            tekton.dev/task: task-to-list-files
            tekton.dev/taskRun: demo-pipelinerun-with-resourcespec-conditional-list-files-fmh92
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:54:14Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"41e65948-30fd-4bf2-88b3-f232792dc16f"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-create-dir-pipeline-git-b7b2f"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-pipeline-git-gqf98"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-list"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-copy-pipeline-git-x995r"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-mkdir-pipeline-git-q66hb"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"demo-pipelinerun-with-resourcespec-pvc"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-4"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:51Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.54"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:54:54Z"
          name: demo-pipelinerun-with-resourcespec-conditional-list-files-dcvdb
          namespace: arendelle-fcs8f
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipelinerun-with-resourcespec-conditional-list-files-fmh92
            uid: 41e65948-30fd-4bf2-88b3-f232792dc16f
          resourceVersion: "5530529"
          selfLink: /api/v1/namespaces/arendelle-fcs8f/pods/demo-pipelinerun-with-resourcespec-conditional-list-files-dcvdb
          uid: 5b3293a4-b55a-4843-8b06-9f51e3769780
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-pipeline-git-b7b2f
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-pipeline-git-b7b2f
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-pipeline-git-gqf98
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/pipeline-git
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-pipeline-git-gqf98
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-list
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - bash
            - --
            - -c
            - |
              ls -al /workspace/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-list
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-mkdir-pipeline-git-q66hb
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - mkdir
            - --
            - -p
            - /pvc/conditional-list-files/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-mkdir-pipeline-git-q66hb
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: demo-pipelinerun-with-resourcespec-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/3
            - -post_file
            - /tekton/run/4
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-copy-pipeline-git-x995r
            - -step_metadata_dir_link
            - /tekton/steps/4
            - -entrypoint
            - cp
            - --
            - -r
            - /workspace/output/pipeline-git/.
            - /pvc/conditional-list-files/pipeline-git
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-copy-pipeline-git-x995r
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: demo-pipelinerun-with-resourcespec-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-4
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-4
          - name: demo-pipelinerun-with-resourcespec-pvc
            persistentVolumeClaim:
              claimName: demo-pipelinerun-with-resourcespec-pvc
          - name: default-token-mmz9h
            secret:
              defaultMode: 420
              secretName: default-token-mmz9h
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:19Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:54Z"
            message: 'containers with unready status: [step-create-dir-pipeline-git-b7b2f]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:54Z"
            message: 'containers with unready status: [step-create-dir-pipeline-git-b7b2f]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:53:59Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://f2e587ac2bbbf62b2a95cac4c72f66912b5c4678844d18df6bd42897757d53cf
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-pipeline-git-b7b2f
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://f2e587ac2bbbf62b2a95cac4c72f66912b5c4678844d18df6bd42897757d53cf
                exitCode: 0
                finishedAt: "2021-09-27T08:54:53Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:53.329Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:54:22Z"
          - containerID: docker://6926261b9d3afca3a651c94651ac20ea34a095d73215e3c930881170f24488fe
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-pipeline-git-gqf98
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:54:40Z"
          - containerID: docker://4b17c241f76ba9e3065d6b6f049c073a71a7098fa8ff463328fb7f02d75436ed
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-list
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:54:43Z"
          - containerID: docker://a3f515e0aeb19cfaf0c1eb8974cef69a2da33c670594386e1fa2e11a1be07651
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-copy-pipeline-git-x995r
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:54:50Z"
          - containerID: docker://b7e333b851866221fe8ae634caab0923cc3409725ff9165b0a33e1efbdef674b
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-mkdir-pipeline-git-q66hb
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T08:54:47Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://65016e9e1eaf5c734cf0b893d8cab64d9925314c415bb58fe18a769217f6089a
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://65016e9e1eaf5c734cf0b893d8cab64d9925314c415bb58fe18a769217f6089a
                exitCode: 0
                finishedAt: "2021-09-27T08:54:16Z"
                reason: Completed
                startedAt: "2021-09-27T08:54:15Z"
          phase: Running
          podIP: 172.20.64.54
          podIPs:
          - ip: 172.20.64.54
          qosClass: BestEffort
          startTime: "2021-09-27T08:54:00Z"
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: f3b2f2b45baae17865b2e276f57c692c11f3234c1e8edbf06dd2046fc85c2f12
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T08:52:10Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-to-list-files
            tekton.dev/pipelineRun: demo-pipelinerun-with-resourcespec
            tekton.dev/pipelineTask: list-files
            tekton.dev/task: task-to-list-files
            tekton.dev/taskRun: demo-pipelinerun-with-resourcespec-list-files-vnhft
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"a0082200-1138-4aba-8b91-f44c35ee4c49"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-create-dir-pipeline-git-gpspl"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-pipeline-git-gndp7"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-list"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-copy-pipeline-git-8cvvs"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-source-mkdir-pipeline-git-99nmg"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/pvc"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"demo-pipelinerun-with-resourcespec-pvc"}:
                    .: {}
                    f:name: {}
                    f:persistentVolumeClaim:
                      .: {}
                      f:claimName: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-2"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-3"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-4"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T08:54:12Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.45"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T08:54:42Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T08:54:43Z"
          name: demo-pipelinerun-with-resourcespec-list-files-vnhft-pod-fsc57
          namespace: arendelle-fcs8f
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-pipelinerun-with-resourcespec-list-files-vnhft
            uid: a0082200-1138-4aba-8b91-f44c35ee4c49
          resourceVersion: "5530419"
          selfLink: /api/v1/namespaces/arendelle-fcs8f/pods/demo-pipelinerun-with-resourcespec-list-files-vnhft-pod-fsc57
          uid: 4d401e66-776c-4801-b95c-431db4a6b744
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-create-dir-pipeline-git-gpspl
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - mkdir
            - --
            - -p
            - /workspace/output/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-create-dir-pipeline-git-gpspl
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-pipeline-git-gndp7
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/pipeline-git
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-pipeline-git-gndp7
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/1
            - -post_file
            - /tekton/run/2
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-list
            - -step_metadata_dir_link
            - /tekton/steps/2
            - -entrypoint
            - bash
            - --
            - -c
            - |
              ls -al /workspace/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-list
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-2
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/2
            - -post_file
            - /tekton/run/3
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-mkdir-pipeline-git-99nmg
            - -step_metadata_dir_link
            - /tekton/steps/3
            - -entrypoint
            - mkdir
            - --
            - -p
            - /pvc/list-files/pipeline-git
            command:
            - /tekton/bin/entrypoint
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-mkdir-pipeline-git-99nmg
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: demo-pipelinerun-with-resourcespec-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-3
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/3
            - -post_file
            - /tekton/run/4
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-source-copy-pipeline-git-8cvvs
            - -step_metadata_dir_link
            - /tekton/steps/4
            - -entrypoint
            - cp
            - --
            - -r
            - /workspace/output/pipeline-git/.
            - /pvc/list-files/pipeline-git
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: pipeline-git
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: step-source-copy-pipeline-git-8cvvs
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /pvc
              name: demo-pipelinerun-with-resourcespec-pvc
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-4
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-mmz9h
              readOnly: true
            workingDir: /
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-2
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-3
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-4
          - name: demo-pipelinerun-with-resourcespec-pvc
            persistentVolumeClaim:
              claimName: demo-pipelinerun-with-resourcespec-pvc
          - name: default-token-mmz9h
            secret:
              defaultMode: 420
              secretName: default-token-mmz9h
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:52:33Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:19Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:54:19Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T08:52:10Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://630080c61490da8b911893c9c3695981298e218079e54f34942206b86a31a80e
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-create-dir-pipeline-git-gpspl
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://630080c61490da8b911893c9c3695981298e218079e54f34942206b86a31a80e
                exitCode: 0
                finishedAt: "2021-09-27T08:54:14Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:14.127Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:52:39Z"
          - containerID: docker://c32da0b7a4f07f8ff83923ad6d0495c9ac44ddca0dc5164e844b37af74858a11
            image: sha256:cea0a16c57943c0b9d9577db4017eea2781174e455281a93cf2533e42c62ad5f
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            lastState: {}
            name: step-git-source-pipeline-git-gndp7
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://c32da0b7a4f07f8ff83923ad6d0495c9ac44ddca0dc5164e844b37af74858a11
                exitCode: 0
                finishedAt: "2021-09-27T08:54:33Z"
                message: '[{"key":"commit","value":"5681ce99232cffebc42b4a097514bc0a3e14a6e5","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}},{"key":"url","value":"https://github.com/tektoncd/pipeline","resourceName":"pipeline-git","resourceRef":{"name":"pipeline-git"}},{"key":"StartedAt","value":"2021-09-27T08:54:15.121Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:52:41Z"
          - containerID: docker://53f6ec8ce174e7dbdf9d900ad23bf020786996fbb4ed987511a6e35f140b550e
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-list
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://53f6ec8ce174e7dbdf9d900ad23bf020786996fbb4ed987511a6e35f140b550e
                exitCode: 0
                finishedAt: "2021-09-27T08:54:34Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:31.716Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:52:57Z"
          - containerID: docker://ddae588054dc87b65281487a490a03c05fd07682aa04744cb14830ae344966de
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-copy-pipeline-git-8cvvs
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://ddae588054dc87b65281487a490a03c05fd07682aa04744cb14830ae344966de
                exitCode: 0
                finishedAt: "2021-09-27T08:54:37Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:36.252Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:53:55Z"
          - containerID: docker://cabf9b04dd1aee04097a063c0ef1c92630aa9865b3923c40f64cdb4705aeb1b2
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: step-source-mkdir-pipeline-git-99nmg
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://cabf9b04dd1aee04097a063c0ef1c92630aa9865b3923c40f64cdb4705aeb1b2
                exitCode: 0
                finishedAt: "2021-09-27T08:54:37Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T08:54:34.492Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T08:53:35Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://4f94696488e72b23dfc60d06e125c513854701be3732308e31af1c0ae1abd514
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://4f94696488e72b23dfc60d06e125c513854701be3732308e31af1c0ae1abd514
                exitCode: 0
                finishedAt: "2021-09-27T08:52:24Z"
                reason: Completed
                startedAt: "2021-09-27T08:52:24Z"
          phase: Succeeded
          podIP: 172.20.64.45
          podIPs:
          - ip: 172.20.64.45
          qosClass: BestEffort
          startTime: "2021-09-27T08:52:12Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-fcs8f ###
    panic.go:636: #####################################################
    build_logs.go:37: build logs 
        >>> Container step-git-source-pipeline-git-c9fht:
        {"level":"info","ts":1632732782.7710006,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/tektoncd/pipeline @ 5681ce99232cffebc42b4a097514bc0a3e14a6e5 (grafted, HEAD, origin/main) in path /workspace/pipeline-git"}
        {"level":"info","ts":1632732783.4737759,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/pipeline-git"}
        
        >>> Container step-condition-check-always-true-sample-condition:
        Hello from Tekton Pipeline!
    build_logs.go:37: build logs 
        >>> Container step-create-dir-pipeline-git-b7b2f:
        
        >>> Container step-git-source-pipeline-git-gqf98:
        {"level":"info","ts":1632732899.5901268,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/tektoncd/pipeline @ 5681ce99232cffebc42b4a097514bc0a3e14a6e5 (grafted, HEAD, origin/main) in path /workspace/pipeline-git"}
        {"level":"info","ts":1632732899.6137238,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/pipeline-git"}
        
        >>> Container step-list:
        total 312
        drwxr-xr-x. 16 root root   4096 Sep 27 08:54 .
        drwxrwxrwx.  4 root root     40 Sep 27 08:54 ..
        -rw-r--r--.  1 root root    164 Sep 27 08:54 .errcheck.txt
        drwxr-xr-x.  8 root root    177 Sep 27 08:54 .git
        -rw-r--r--.  1 root root    347 Sep 27 08:54 .gitattributes
        drwxr-xr-x.  3 root root     60 Sep 27 08:54 .github
        -rw-r--r--.  1 root root    567 Sep 27 08:54 .gitignore
        -rw-r--r--.  1 root root    588 Sep 27 08:54 .golangci.yml
        -rw-r--r--.  1 root root    563 Sep 27 08:54 .ko.yaml
        -rw-r--r--.  1 root root    694 Sep 27 08:54 .yamllint
        -rw-r--r--.  1 root root   2643 Sep 27 08:54 CONTRIBUTING.md
        -rw-r--r--.  1 root root  20721 Sep 27 08:54 DEVELOPMENT.md
        -rw-r--r--.  1 root root  11358 Sep 27 08:54 LICENSE
        -rw-r--r--.  1 root root   5898 Sep 27 08:54 Makefile
        -rw-r--r--.  1 root root    104 Sep 27 08:54 OWNERS
        -rw-r--r--.  1 root root    510 Sep 27 08:54 OWNERS_ALIASES
        -rw-r--r--.  1 root root  18995 Sep 27 08:54 README.md
        -rw-r--r--.  1 root root   3835 Sep 27 08:54 api_compatibility_policy.md
        drwxr-xr-x. 10 root root    159 Sep 27 08:54 cmd
        -rw-r--r--.  1 root root   3247 Sep 27 08:54 code-of-conduct.md
        -rw-r--r--.  1 root root    119 Sep 27 08:54 codecov.yml
        drwxr-xr-x.  2 root root   4096 Sep 27 08:54 config
        drwxr-xr-x.  3 root root   4096 Sep 27 08:54 docs
        drwxr-xr-x.  4 root root     54 Sep 27 08:54 examples
        -rw-r--r--.  1 root root   1456 Sep 27 08:54 go.mod
        -rw-r--r--.  1 root root 157564 Sep 27 08:54 go.sum
        drwxr-xr-x.  5 root root    274 Sep 27 08:54 hack
        drwxr-xr-x.  5 root root     61 Sep 27 08:54 images
        drwxr-xr-x.  3 root root     21 Sep 27 08:54 internal
        -rw-r--r--.  1 root root   3466 Sep 27 08:54 pipe.png
        drwxr-xr-x. 22 root root   4096 Sep 27 08:54 pkg
        -rw-r--r--.  1 root root   4585 Sep 27 08:54 roadmap.md
        drwxr-xr-x.  2 root root    165 Sep 27 08:54 tekton
        drwxr-xr-x.  8 root root   4096 Sep 27 08:54 test
        drwxr-xr-x. 14 root root    255 Sep 27 08:54 third_party
        -rw-r--r--.  1 root root   4646 Sep 27 08:54 topical-ownership.md
        drwxr-xr-x. 14 root root    274 Sep 27 08:54 vendor
        
        >>> Container step-source-mkdir-pipeline-git-q66hb:
        
        >>> Container step-source-copy-pipeline-git-x995r:
    build_logs.go:37: build logs 
        >>> Container step-create-dir-pipeline-git-gpspl:
        
        >>> Container step-git-source-pipeline-git-gndp7:
        {"level":"info","ts":1632732862.6772997,"caller":"git/git.go:169","msg":"Successfully cloned https://github.com/tektoncd/pipeline @ 5681ce99232cffebc42b4a097514bc0a3e14a6e5 (grafted, HEAD, origin/main) in path /workspace/pipeline-git"}
        {"level":"info","ts":1632732862.7186062,"caller":"git/git.go:207","msg":"Successfully initialized and updated submodules in path /workspace/pipeline-git"}
        
        >>> Container step-list:
        total 312
        drwxr-xr-x. 16 root root   4096 Sep 27 08:54 .
        drwxrwxrwx.  4 root root     40 Sep 27 08:54 ..
        -rw-r--r--.  1 root root    164 Sep 27 08:54 .errcheck.txt
        drwxr-xr-x.  8 root root    177 Sep 27 08:54 .git
        -rw-r--r--.  1 root root    347 Sep 27 08:54 .gitattributes
        drwxr-xr-x.  3 root root     60 Sep 27 08:54 .github
        -rw-r--r--.  1 root root    567 Sep 27 08:54 .gitignore
        -rw-r--r--.  1 root root    588 Sep 27 08:54 .golangci.yml
        -rw-r--r--.  1 root root    563 Sep 27 08:54 .ko.yaml
        -rw-r--r--.  1 root root    694 Sep 27 08:54 .yamllint
        -rw-r--r--.  1 root root   2643 Sep 27 08:54 CONTRIBUTING.md
        -rw-r--r--.  1 root root  20721 Sep 27 08:54 DEVELOPMENT.md
        -rw-r--r--.  1 root root  11358 Sep 27 08:54 LICENSE
        -rw-r--r--.  1 root root   5898 Sep 27 08:54 Makefile
        -rw-r--r--.  1 root root    104 Sep 27 08:54 OWNERS
        -rw-r--r--.  1 root root    510 Sep 27 08:54 OWNERS_ALIASES
        -rw-r--r--.  1 root root  18995 Sep 27 08:54 README.md
        -rw-r--r--.  1 root root   3835 Sep 27 08:54 api_compatibility_policy.md
        drwxr-xr-x. 10 root root    159 Sep 27 08:54 cmd
        -rw-r--r--.  1 root root   3247 Sep 27 08:54 code-of-conduct.md
        -rw-r--r--.  1 root root    119 Sep 27 08:54 codecov.yml
        drwxr-xr-x.  2 root root   4096 Sep 27 08:54 config
        drwxr-xr-x.  3 root root   4096 Sep 27 08:54 docs
        drwxr-xr-x.  4 root root     54 Sep 27 08:54 examples
        -rw-r--r--.  1 root root   1456 Sep 27 08:54 go.mod
        -rw-r--r--.  1 root root 157564 Sep 27 08:54 go.sum
        drwxr-xr-x.  5 root root    274 Sep 27 08:54 hack
        drwxr-xr-x.  5 root root     61 Sep 27 08:54 images
        drwxr-xr-x.  3 root root     21 Sep 27 08:54 internal
        -rw-r--r--.  1 root root   3466 Sep 27 08:54 pipe.png
        drwxr-xr-x. 22 root root   4096 Sep 27 08:54 pkg
        -rw-r--r--.  1 root root   4585 Sep 27 08:54 roadmap.md
        drwxr-xr-x.  2 root root    165 Sep 27 08:54 tekton
        drwxr-xr-x.  8 root root   4096 Sep 27 08:54 test
        drwxr-xr-x. 14 root root    255 Sep 27 08:54 third_party
        -rw-r--r--.  1 root root   4646 Sep 27 08:54 topical-ownership.md
        drwxr-xr-x. 14 root root    274 Sep 27 08:54 vendor
        
        >>> Container step-source-mkdir-pipeline-git-99nmg:
        
        >>> Container step-source-copy-pipeline-git-8cvvs:
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
    init_test.go:135: Create namespace arendelle-7x5rd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7x5rd"
=== CONT  TestExamples/v1alpha1/taskruns/task-result
    examples_test.go:153: pipelinerun or taskrun not created for ../examples/v1alpha1/taskruns/task-result.yaml
    panic.go:636: Deleting namespace arendelle-6lr6h
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready
    init_test.go:135: Create namespace arendelle-tzh6n to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-tzh6n"
=== CONT  TestExamples/v1alpha1/taskruns/steps-run-in-order
    examples_test.go:169: Deleting namespace arendelle-x9mm9
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results
    init_test.go:135: Create namespace arendelle-hzchz to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-hzchz"
=== CONT  TestExamples/v1beta1/taskruns/home-is-set
    examples_test.go:169: Deleting namespace arendelle-d867z
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-interp
    init_test.go:135: Create namespace arendelle-jl87v to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-jl87v"
=== CONT  TestExamples/v1alpha1/taskruns/task-volume-args
    examples_test.go:169: Deleting namespace arendelle-cbhct
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
    init_test.go:135: Create namespace arendelle-4mfxs to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4mfxs"
=== CONT  TestExamples/v1beta1/pipelineruns/using-optional-workspaces-in-when-expressions
    examples_test.go:169: Deleting namespace arendelle-lmn6t
=== CONT  TestExamples/v1alpha1/pipelineruns/output-pipelinerun
    init_test.go:135: Create namespace arendelle-rgxzb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rgxzb"
=== CONT  TestExamples/v1beta1/taskruns/home-volume
    examples_test.go:169: Deleting namespace arendelle-xnzcl
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
    init_test.go:135: Create namespace arendelle-gdrhl to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gdrhl"
=== CONT  TestExamples/v1alpha1/taskruns/steptemplate-env-merge
    examples_test.go:169: Deleting namespace arendelle-6tpbs
=== CONT  TestExamples/v1alpha1/taskruns/secret-env
    init_test.go:135: Create namespace arendelle-vrmkc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vrmkc"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready
    examples_test.go:169: Deleting namespace arendelle-tzh6n
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume-params
    init_test.go:135: Create namespace arendelle-m97tb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-m97tb"
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume
    examples_test.go:169: Deleting namespace arendelle-4mfxs
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
    init_test.go:135: Create namespace arendelle-j8km2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-j8km2"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-interp
    examples_test.go:169: Deleting namespace arendelle-jl87v
=== CONT  TestExamples/v1beta1/pipelineruns/output-pipelinerun
    init_test.go:135: Create namespace arendelle-gbgsb to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gbgsb"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-results
    examples_test.go:169: Deleting namespace arendelle-hzchz
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    init_test.go:135: Create namespace arendelle-n28nw to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-n28nw"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-resourcespec
    examples_test.go:169: Deleting namespace arendelle-7x5rd
=== CONT  TestExamples/v1alpha1/taskruns/cloud-event
    init_test.go:135: Create namespace arendelle-w44g4 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-w44g4"
=== CONT  TestExamples/v1alpha1/taskruns/secret-env
    examples_test.go:169: Deleting namespace arendelle-vrmkc
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready-script
    init_test.go:135: Create namespace arendelle-9t7fv to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-9t7fv"
=== CONT  TestExamples/v1alpha1/taskruns/secret-volume-params
    examples_test.go:169: Deleting namespace arendelle-m97tb
=== CONT  TestExamples/v1beta1/taskruns/template-volume
    init_test.go:135: Create namespace arendelle-n2brd to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-n2brd"
=== CONT  TestExamples/v1beta1/taskruns/using_context_variables
    examples_test.go:169: Deleting namespace arendelle-n28nw
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    init_test.go:135: Create namespace arendelle-n4n7m to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-n4n7m"
=== CONT  TestExamples/v1alpha1/taskruns/optional-resources-with-clustertask
    examples_test.go:109: Deleting clustertask clustertask-with-optional-resources-v1alpha1
    examples_test.go:169: Deleting namespace arendelle-gdrhl
=== CONT  TestExamples/v1alpha1/taskruns/home-is-set
    init_test.go:135: Create namespace arendelle-wffpl to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-wffpl"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-params
    examples_test.go:169: Deleting namespace arendelle-j8km2
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
    init_test.go:135: Create namespace arendelle-bz62h to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-bz62h"
=== CONT  TestExamples/v1alpha1/taskruns/cloud-event
    examples_test.go:169: Deleting namespace arendelle-w44g4
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    init_test.go:135: Create namespace arendelle-gph2j to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-gph2j"
=== CONT  TestExamples/v1alpha1/taskruns/sidecar-ready-script
    examples_test.go:169: Deleting namespace arendelle-9t7fv
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
    init_test.go:135: Create namespace arendelle-kjgb2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-kjgb2"
=== CONT  TestExamples/v1beta1/taskruns/template-volume
    examples_test.go:169: Deleting namespace arendelle-n2brd
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
    init_test.go:135: Create namespace arendelle-84tj7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-84tj7"
=== CONT  TestExamples/v1alpha1/taskruns/home-is-set
    examples_test.go:169: Deleting namespace arendelle-wffpl
=== CONT  TestExamples/v1beta1/taskruns/git-resource
    init_test.go:135: Create namespace arendelle-k2bd2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-k2bd2"
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-same-condition-refer
    examples_test.go:169: Deleting namespace arendelle-n4n7m
=== CONT  TestExamples/v1alpha1/pipelineruns/task_results_example
    init_test.go:135: Create namespace arendelle-7nmxt to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7nmxt"
=== CONT  TestExamples/v1alpha1/pipelineruns/demo-optional-resources
    examples_test.go:169: Deleting namespace arendelle-bz62h
=== CONT  TestExamples/v1beta1/taskruns/gcs-resource
    multiarch_utils.go:164: skip for ppc64le architecture
=== CONT  TestExamples/v1alpha1/taskruns/home-volume
    init_test.go:135: Create namespace arendelle-qrjg8 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-qrjg8"
=== CONT  TestExamples/v1alpha1/pipelineruns/output-pipelinerun
    examples_test.go:169: Deleting namespace arendelle-rgxzb
=== CONT  TestExamples/v1beta1/pipelineruns/demo-optional-resources
    init_test.go:135: Create namespace arendelle-q6rr2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-q6rr2"
=== CONT  TestExamples/v1beta1/pipelineruns/output-pipelinerun
    examples_test.go:169: Deleting namespace arendelle-gbgsb
=== CONT  TestExamples/v1beta1/taskruns/task-result
    init_test.go:135: Create namespace arendelle-vhj75 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vhj75"
=== CONT  TestExamples/v1alpha1/pipelineruns/task_results_example
    examples_test.go:153: pipelinerun or taskrun not created for ../examples/v1alpha1/pipelineruns/task_results_example.yaml
    panic.go:636: Deleting namespace arendelle-7nmxt
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    init_test.go:135: Create namespace arendelle-297l7 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-297l7"
=== CONT  TestExamples/v1beta1/taskruns/task-volume-args
    examples_test.go:169: Deleting namespace arendelle-84tj7
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    init_test.go:135: Create namespace arendelle-bbwqk to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-bbwqk"
=== CONT  TestExamples/v1beta1/pipelineruns/demo-optional-resources
    examples_test.go:169: Deleting namespace arendelle-q6rr2
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    init_test.go:135: Create namespace arendelle-rvxxs to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rvxxs"
=== CONT  TestExamples/v1beta1/taskruns/git-resource
    examples_test.go:169: Deleting namespace arendelle-k2bd2
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    init_test.go:135: Create namespace arendelle-7wnjr to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7wnjr"
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-gph2j ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-rvxxs ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
    examples_test.go:55: Failed waiting for pipeline run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-kjgb2 ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-297l7 ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-bbwqk ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/taskruns/task-result
    examples_test.go:62: Failed waiting for task run done: etcdserver: request timed out
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-vhj75 ###
    panic.go:636: ############################################
=== CONT  TestExamples/v1beta1/pipelineruns/optional-workspaces
    init_test.go:172: Failed to get SA "default" in namespace "arendelle-7wnjr" for tests: etcdserver: request timed out
=== CONT  TestExamples/v1beta1/taskruns/clustertask
    init_test.go:135: Create namespace arendelle-vqkcc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-vqkcc"
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:03:29Z"
          generateName: creds-init-only-mounts-provided-credentials-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:03:29Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:03:30Z"
          name: creds-init-only-mounts-provided-credentials-fjnnl
          namespace: arendelle-bbwqk
          resourceVersion: "5536903"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-bbwqk/taskruns/creds-init-only-mounts-provided-credentials-fjnnl
          uid: bc6c84c8-3628-47af-830b-bf0d3a17d7c2
        spec:
          serviceAccountName: phony-ssh-key-service-account
          taskSpec:
            steps:
            - image: alpine
              name: check-credentials
              resources: {}
              script: |
                #!/usr/bin/env ash
                set -xe
        
                # We expect the ssh credential to show up because it's
                # declared on the service account above.
                test -f $HOME/.ssh/id_phony-ssh-key
        
                # We don't expect any docker credentials to appear in the container.
                test ! -d $HOME/.docker
        
                # We don't expect any git basic auth credentials or related
                # configuration to appear in the container.
                test ! -f $HOME/.git-credentials
                test ! -f $HOME/.gitconfig
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T09:03:30Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-tools place-scripts]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: creds-init-only-mounts-provided-credentials-fjnnl-pod-q84xn
          startTime: "2021-09-27T09:03:29Z"
          steps:
          - container: step-check-credentials
            name: check-credentials
            waiting:
              reason: PodInitializing
          taskSpec:
            steps:
            - image: alpine
              name: check-credentials
              resources: {}
              script: |
                #!/usr/bin/env ash
                set -xe
        
                # We expect the ssh credential to show up because it's
                # declared on the service account above.
                test -f $HOME/.ssh/id_phony-ssh-key
        
                # We don't expect any docker credentials to appear in the container.
                test ! -d $HOME/.docker
        
                # We don't expect any git basic auth credentials or related
                # configuration to appear in the container.
                test ! -f $HOME/.git-credentials
                test ! -f $HOME/.gitconfig
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 2801476cb5d9529e3e52279d9463675802c4c6ed44d0a4f4046d8b0a8b4d7e89
            cni.projectcalico.org/podIP: 172.20.64.25/32
            cni.projectcalico.org/podIPs: 172.20.64.25/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:03:29Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: creds-init-only-mounts-provided-credentials-fjnnl
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"bc6c84c8-3628-47af-830b-bf0d3a17d7c2"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-check-credentials"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/creds-secrets/phony-ssh-key"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-secret-volume-phony-ssh-key-kcjmm"}:
                    .: {}
                    f:name: {}
                    f:secret:
                      .: {}
                      f:defaultMode: {}
                      f:secretName: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:03:29Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T09:03:56Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.25"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T09:04:15Z"
          name: creds-init-only-mounts-provided-credentials-fjnnl-pod-q84xn
          namespace: arendelle-bbwqk
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: creds-init-only-mounts-provided-credentials-fjnnl
            uid: bc6c84c8-3628-47af-830b-bf0d3a17d7c2
          resourceVersion: "5537098"
          selfLink: /api/v1/namespaces/arendelle-bbwqk/pods/creds-init-only-mounts-provided-credentials-fjnnl-pod-q84xn
          uid: 507bfed0-c18d-4d87-8325-e35e6c9cb7e3
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-check-credentials
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -ssh-git=phony-ssh-key=localhost
            - -entrypoint
            - /tekton/scripts/script-0-pb86c
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine
            imagePullPolicy: Always
            name: step-check-credentials
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /tekton/creds-secrets/phony-ssh-key
              name: tekton-internal-secret-volume-phony-ssh-key-kcjmm
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: phony-ssh-key-service-account-token-lpv5t
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: phony-ssh-key-service-account-token-lpv5t
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-pb86c"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYXNoCnNldCAteGUKCiMgV2UgZXhwZWN0IHRoZSBzc2ggY3JlZGVudGlhbCB0byBzaG93IHVwIGJlY2F1c2UgaXQncwojIGRlY2xhcmVkIG9uIHRoZSBzZXJ2aWNlIGFjY291bnQgYWJvdmUuCnRlc3QgLWYgJEhPTUUvLnNzaC9pZF9waG9ueS1zc2gta2V5CgojIFdlIGRvbid0IGV4cGVjdCBhbnkgZG9ja2VyIGNyZWRlbnRpYWxzIHRvIGFwcGVhciBpbiB0aGUgY29udGFpbmVyLgp0ZXN0ICEgLWQgJEhPTUUvLmRvY2tlcgoKIyBXZSBkb24ndCBleHBlY3QgYW55IGdpdCBiYXNpYyBhdXRoIGNyZWRlbnRpYWxzIG9yIHJlbGF0ZWQKIyBjb25maWd1cmF0aW9uIHRvIGFwcGVhciBpbiB0aGUgY29udGFpbmVyLgp0ZXN0ICEgLWYgJEhPTUUvLmdpdC1jcmVkZW50aWFscwp0ZXN0ICEgLWYgJEhPTUUvLmdpdGNvbmZpZwo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: phony-ssh-key-service-account-token-lpv5t
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: phony-ssh-key-service-account
          serviceAccountName: phony-ssh-key-service-account
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - name: tekton-internal-secret-volume-phony-ssh-key-kcjmm
            secret:
              defaultMode: 420
              secretName: phony-ssh-key
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: phony-ssh-key-service-account-token-lpv5t
            secret:
              defaultMode: 420
              secretName: phony-ssh-key-service-account-token-lpv5t
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:30Z"
            message: 'containers with incomplete status: [place-scripts]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:30Z"
            message: 'containers with unready status: [step-check-credentials]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:30Z"
            message: 'containers with unready status: [step-check-credentials]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:29Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: alpine
            imageID: ""
            lastState: {}
            name: step-check-credentials
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://245da33cee6a477e9d9581af7d55c3ef83685df15db14241632e6135b3b48000
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://245da33cee6a477e9d9581af7d55c3ef83685df15db14241632e6135b3b48000
                exitCode: 0
                finishedAt: "2021-09-27T09:03:58Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:58Z"
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: place-scripts
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          podIP: 172.20.64.25
          podIPs:
          - ip: 172.20.64.25
          qosClass: BestEffort
          startTime: "2021-09-27T09:03:30Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-bbwqk ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/taskruns/task-result
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:02:40Z"
          generateName: print-date-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:description: {}
                  f:results: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:02:40Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:description: {}
                  f:results: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:03:59Z"
          name: print-date-pk8wf
          namespace: arendelle-vhj75
          resourceVersion: "5537038"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-vhj75/taskruns/print-date-pk8wf
          uid: 0d02c390-4529-4fba-81b9-a50be7bfada7
        spec:
          serviceAccountName: default
          taskSpec:
            description: |
              A simple task that prints the date.
            results:
            - description: The current date in unix timestamp format
              name: current-date-unix-timestamp
            - description: The current date in human readable format
              name: current-date-human-readable
            steps:
            - image: bash:latest
              name: print-date-unix-timestamp
              resources: {}
              script: |
                #!/usr/bin/env bash
                date +%s | tee /tekton/results/current-date-unix-timestamp
            - image: bash:latest
              name: print-date-human-readable
              resources: {}
              script: |
                #!/usr/bin/env bash
                date | tee /tekton/results/current-date-human-readable
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T09:03:59Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: print-date-pk8wf-pod-ddmt6
          startTime: "2021-09-27T09:02:42Z"
          steps:
          - container: step-print-date-unix-timestamp
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            name: print-date-unix-timestamp
            running:
              startedAt: "2021-09-27T09:03:26Z"
          - container: step-print-date-human-readable
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            name: print-date-human-readable
            running:
              startedAt: "2021-09-27T09:03:55Z"
          taskSpec:
            description: |
              A simple task that prints the date.
            results:
            - description: The current date in unix timestamp format
              name: current-date-unix-timestamp
            - description: The current date in human readable format
              name: current-date-human-readable
            steps:
            - image: bash:latest
              name: print-date-unix-timestamp
              resources: {}
              script: |
                #!/usr/bin/env bash
                date +%s | tee /tekton/results/current-date-unix-timestamp
            - image: bash:latest
              name: print-date-human-readable
              resources: {}
              script: |
                #!/usr/bin/env bash
                date | tee /tekton/results/current-date-human-readable
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 20e861c422d0fb48583ee24ea0ca5c908b310b24121b0ef8a1594f44ad5f92c3
            cni.projectcalico.org/podIP: 172.20.64.12/32
            cni.projectcalico.org/podIPs: 172.20.64.12/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T09:02:42Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: print-date-pk8wf
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T09:02:54Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0d02c390-4529-4fba-81b9-a50be7bfada7"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-print-date-human-readable"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-print-date-unix-timestamp"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:03:59Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.12"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T09:03:59Z"
          name: print-date-pk8wf-pod-ddmt6
          namespace: arendelle-vhj75
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: print-date-pk8wf
            uid: 0d02c390-4529-4fba-81b9-a50be7bfada7
          resourceVersion: "5537036"
          selfLink: /api/v1/namespaces/arendelle-vhj75/pods/print-date-pk8wf-pod-ddmt6
          uid: 0f26913d-d353-47e9-90ef-ffb655379dac
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-print-date-unix-timestamp
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -results
            - current-date-unix-timestamp,current-date-human-readable
            - -entrypoint
            - /tekton/scripts/script-0-tkfnb
            - --
            command:
            - /tekton/bin/entrypoint
            image: bash:latest
            imagePullPolicy: Always
            name: step-print-date-unix-timestamp
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-vfkhl
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-print-date-human-readable
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -results
            - current-date-unix-timestamp,current-date-human-readable
            - -entrypoint
            - /tekton/scripts/script-1-k2sl6
            - --
            command:
            - /tekton/bin/entrypoint
            image: bash:latest
            imagePullPolicy: Always
            name: step-print-date-human-readable
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-vfkhl
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-vfkhl
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-tkfnb"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApkYXRlICslcyB8IHRlZSAvdGVrdG9uL3Jlc3VsdHMvY3VycmVudC1kYXRlLXVuaXgtdGltZXN0YW1wCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-1-k2sl6"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApkYXRlIHwgdGVlIC90ZWt0b24vcmVzdWx0cy9jdXJyZW50LWRhdGUtaHVtYW4tcmVhZGFibGUK
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-vfkhl
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-vfkhl
            secret:
              defaultMode: 420
              secretName: default-token-vfkhl
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:13Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:59Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:59Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:02:42Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://753057299be0347345253a38c946ba616b3ca0df735c84e7bfd5c7255e1361d9
            image: bash:5.1.8
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            lastState: {}
            name: step-print-date-human-readable
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T09:03:55Z"
          - containerID: docker://42315d22b0e191acc0f4a59b005486f30c800aef23bc0e0a2fa3fba1c7f2568e
            image: bash:5.1.8
            imageID: docker-pullable://bash@sha256:377439330211c232e90d460bac26829aacd33f407b525f271295e0460a586b52
            lastState: {}
            name: step-print-date-unix-timestamp
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T09:03:26Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://d24e8a07a3ea23f51aa50e6d43d871a7c4521a6335a7cbc9773b7f8046c47b81
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://d24e8a07a3ea23f51aa50e6d43d871a7c4521a6335a7cbc9773b7f8046c47b81
                exitCode: 0
                finishedAt: "2021-09-27T09:02:56Z"
                reason: Completed
                startedAt: "2021-09-27T09:02:56Z"
          - containerID: docker://e6ca99b2b4d4fafee1a03d01f1ec1ad78f7a3b5b98d68bebbfd3a65ce769f04f
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://e6ca99b2b4d4fafee1a03d01f1ec1ad78f7a3b5b98d68bebbfd3a65ce769f04f
                exitCode: 0
                finishedAt: "2021-09-27T09:03:04Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:04Z"
          phase: Running
          podIP: 172.20.64.12
          podIPs:
          - ip: 172.20.64.12
          qosClass: BestEffort
          startTime: "2021-09-27T09:02:43Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-vhj75 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:02:43Z"
          generateName: custom-volume-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:02:43Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                .: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:15Z"
          name: custom-volume-fwtnc
          namespace: arendelle-297l7
          resourceVersion: "5537099"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-297l7/taskruns/custom-volume-fwtnc
          uid: d3835154-2e3d-406c-ade6-efe29947555c
        spec:
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo some stuff > /im/a/custom/mount/path/file
              volumeMounts:
              - mountPath: /im/a/custom/mount/path
                name: custom
            - image: ubuntu
              name: read
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /short/and/stout/file | grep stuff
              volumeMounts:
              - mountPath: /short/and/stout
                name: custom
            volumes:
            - emptyDir: {}
              name: custom
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T09:04:15Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: custom-volume-fwtnc-pod-qth2w
          startTime: "2021-09-27T09:02:46Z"
          steps:
          - container: step-write
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: write
            running:
              startedAt: "2021-09-27T09:03:28Z"
          - container: step-read
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: read
            running:
              startedAt: "2021-09-27T09:03:56Z"
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo some stuff > /im/a/custom/mount/path/file
              volumeMounts:
              - mountPath: /im/a/custom/mount/path
                name: custom
            - image: ubuntu
              name: read
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /short/and/stout/file | grep stuff
              volumeMounts:
              - mountPath: /short/and/stout
                name: custom
            volumes:
            - emptyDir: {}
              name: custom
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: ea39c36fdc6357d08ff21779f31bef09d0dfb008a65e5df6b402d9ead1752e6b
            cni.projectcalico.org/podIP: 172.20.64.10/32
            cni.projectcalico.org/podIPs: 172.20.64.10/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T09:02:47Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: custom-volume-fwtnc
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T09:03:00Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.10"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T09:04:03Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"d3835154-2e3d-406c-ade6-efe29947555c"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-read"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/short/and/stout"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-write"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/im/a/custom/mount/path"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"custom"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:13Z"
          name: custom-volume-fwtnc-pod-qth2w
          namespace: arendelle-297l7
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: custom-volume-fwtnc
            uid: d3835154-2e3d-406c-ade6-efe29947555c
          resourceVersion: "5537093"
          selfLink: /api/v1/namespaces/arendelle-297l7/pods/custom-volume-fwtnc-pod-qth2w
          uid: 674ebf9b-6839-4efd-a587-9ee4a55fa5f6
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-tw7dq
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /im/a/custom/mount/path
              name: custom
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-w2qh6
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-read
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-r2s4s
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-read
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /short/and/stout
              name: custom
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-w2qh6
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-w2qh6
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-tw7dq"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaAplY2hvIHNvbWUgc3R1ZmYgPiAvaW0vYS9jdXN0b20vbW91bnQvcGF0aC9maWxlCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-1-r2s4s"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApjYXQgL3Nob3J0L2FuZC9zdG91dC9maWxlIHwgZ3JlcCBzdHVmZgo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-w2qh6
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir: {}
            name: custom
          - name: default-token-w2qh6
            secret:
              defaultMode: 420
              secretName: default-token-w2qh6
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:17Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:04:01Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:04:01Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:02:47Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://fb8943a50cfbb97ae6166682ec81f1806c89a87be750f519ce176e6b913262f1
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-read
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T09:03:56Z"
          - containerID: docker://a8b171d574ab46840e026c9d6413cfaaf9c59405f6fc7968b8ee3153f0622844
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T09:03:28Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://d5b5eaa00f017e462afffac7633975f3fa1022c6c3b2bc18f6012df694d267a6
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://d5b5eaa00f017e462afffac7633975f3fa1022c6c3b2bc18f6012df694d267a6
                exitCode: 0
                finishedAt: "2021-09-27T09:03:05Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:05Z"
          - containerID: docker://17ea8a13711dc9d4e24b1b5e70f7b2f35746b7f25e87c1cdd59caf2dbedaeb9f
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://17ea8a13711dc9d4e24b1b5e70f7b2f35746b7f25e87c1cdd59caf2dbedaeb9f
                exitCode: 0
                finishedAt: "2021-09-27T09:03:14Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:14Z"
          phase: Running
          podIP: 172.20.64.10
          podIPs:
          - ip: 172.20.64.10
          qosClass: BestEffort
          startTime: "2021-09-27T09:02:48Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-297l7 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:03:32Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:inputs:
                    .: {}
                    f:resources: {}
                  f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:03:32Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:17Z"
          name: git-ssh-creds
          namespace: arendelle-rvxxs
          resourceVersion: "5537112"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-rvxxs/taskruns/git-ssh-creds
          uid: 7d05025d-c412-4913-96af-7fab33b4176e
        spec:
          resources:
            inputs:
            - name: gitssh
              resourceSpec:
                params:
                - name: revision
                  value: main
                - name: url
                  value: git@github.com:tektoncd/pipeline.git
                type: git
          serviceAccountName: robot-git-ssh
          taskSpec:
            resources:
              inputs:
              - name: gitssh
                type: git
            steps:
            - image: ubuntu
              name: config
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /workspace/gitssh/README.md
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T09:04:17Z"
            message: 'pod status "Initialized":"False"; message: "containers with incomplete
              status: [place-scripts]"'
            reason: Pending
            status: Unknown
            type: Succeeded
          podName: git-ssh-creds-pod-x4wjf
          startTime: "2021-09-27T09:03:54Z"
          steps:
          - container: step-git-source-gitssh-4zrxr
            name: git-source-gitssh-4zrxr
            waiting:
              reason: PodInitializing
          - container: step-config
            name: config
            waiting:
              reason: PodInitializing
          taskSpec:
            resources:
              inputs:
              - name: gitssh
                type: git
            steps:
            - image: ubuntu
              name: config
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /workspace/gitssh/README.md
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 38b92584ea3eeb3c694607bb6f1644a5a1071304947114cac0d31b4c34a0a786
            cni.projectcalico.org/podIP: 172.20.64.54/32
            cni.projectcalico.org/podIPs: 172.20.64.54/32
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:03:32Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: git-ssh-creds
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"7d05025d-c412-4913-96af-7fab33b4176e"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-config"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/creds-secrets/git-ssh"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-git-source-gitssh-4zrxr"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/creds-secrets/git-ssh"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-secret-volume-git-ssh-f5x2c"}:
                    .: {}
                    f:name: {}
                    f:secret:
                      .: {}
                      f:defaultMode: {}
                      f:secretName: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:03:32Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T09:03:58Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:message: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.54"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T09:04:04Z"
          name: git-ssh-creds-pod-x4wjf
          namespace: arendelle-rvxxs
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: git-ssh-creds
            uid: 7d05025d-c412-4913-96af-7fab33b4176e
          resourceVersion: "5537081"
          selfLink: /api/v1/namespaces/arendelle-rvxxs/pods/git-ssh-creds-pod-x4wjf
          uid: da573547-34bf-4160-b37e-d5ab76674f90
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-gitssh-4zrxr
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -ssh-git=git-ssh=github.com
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - git@github.com:tektoncd/pipeline.git
            - -path
            - /workspace/gitssh
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: gitssh
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-gitssh-4zrxr
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /tekton/creds-secrets/git-ssh
              name: tekton-internal-secret-volume-git-ssh-f5x2c
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: robot-git-ssh-token-ngx2q
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-config
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -ssh-git=git-ssh=github.com
            - -entrypoint
            - /tekton/scripts/script-1-4q8tm
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-config
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /tekton/creds-secrets/git-ssh
              name: tekton-internal-secret-volume-git-ssh-f5x2c
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: robot-git-ssh-token-ngx2q
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: robot-git-ssh-token-ngx2q
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-4q8tm"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApjYXQgL3dvcmtzcGFjZS9naXRzc2gvUkVBRE1FLm1kCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: robot-git-ssh-token-ngx2q
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: robot-git-ssh
          serviceAccountName: robot-git-ssh
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - name: tekton-internal-secret-volume-git-ssh-f5x2c
            secret:
              defaultMode: 420
              secretName: git-ssh
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: robot-git-ssh-token-ngx2q
            secret:
              defaultMode: 420
              secretName: robot-git-ssh-token-ngx2q
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:53Z"
            message: 'containers with incomplete status: [place-scripts]'
            reason: ContainersNotInitialized
            status: "False"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:53Z"
            message: 'containers with unready status: [step-git-source-gitssh-4zrxr step-config]'
            reason: ContainersNotReady
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:53Z"
            message: 'containers with unready status: [step-git-source-gitssh-4zrxr step-config]'
            reason: ContainersNotReady
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:32Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - image: ubuntu
            imageID: ""
            lastState: {}
            name: step-config
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          - image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imageID: ""
            lastState: {}
            name: step-git-source-gitssh-4zrxr
            ready: false
            restartCount: 0
            started: false
            state:
              waiting:
                reason: PodInitializing
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://0d5cd3e33082315197a4447d445dbd6c7d92836fb5389c1e5b6458d911a2c3f0
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://0d5cd3e33082315197a4447d445dbd6c7d92836fb5389c1e5b6458d911a2c3f0
                exitCode: 0
                finishedAt: "2021-09-27T09:03:59Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:59Z"
          - image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imageID: ""
            lastState: {}
            name: place-scripts
            ready: false
            restartCount: 0
            state:
              waiting:
                reason: PodInitializing
          phase: Pending
          podIP: 172.20.64.54
          podIPs:
          - ip: 172.20.64.54
          qosClass: BestEffort
          startTime: "2021-09-27T09:03:53Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-rvxxs ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:02:41Z"
          generateName: custom-volume-
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:generateName: {}
              f:spec:
                .: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:02:41Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
              f:status:
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                  f:volumes: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:03Z"
          name: custom-volume-xnkdj
          namespace: arendelle-gph2j
          resourceVersion: "5537071"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-gph2j/taskruns/custom-volume-xnkdj
          uid: 1a1e8f7a-24c8-4ccf-93de-e66257ad8099
        spec:
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo some stuff > /im/a/custom/mount/path/file
              volumeMounts:
              - mountPath: /im/a/custom/mount/path
                name: custom
            - image: ubuntu
              name: read
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /short/and/stout/file | grep stuff
              volumeMounts:
              - mountPath: /short/and/stout
                name: custom
            volumes:
            - emptyDir: {}
              name: custom
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T09:04:03Z"
            message: Not all Steps in the Task have finished executing
            reason: Running
            status: Unknown
            type: Succeeded
          podName: custom-volume-xnkdj-pod-thn2q
          startTime: "2021-09-27T09:02:45Z"
          steps:
          - container: step-write
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: write
            running:
              startedAt: "2021-09-27T09:03:54Z"
          - container: step-read
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            name: read
            running:
              startedAt: "2021-09-27T09:03:58Z"
          taskSpec:
            steps:
            - image: ubuntu
              name: write
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo some stuff > /im/a/custom/mount/path/file
              volumeMounts:
              - mountPath: /im/a/custom/mount/path
                name: custom
            - image: ubuntu
              name: read
              resources: {}
              script: |
                #!/usr/bin/env bash
                cat /short/and/stout/file | grep stuff
              volumeMounts:
              - mountPath: /short/and/stout
                name: custom
            volumes:
            - emptyDir: {}
              name: custom
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 20d0137658b86fd624ef056939e16d0eb32eb521661c8c1fa1ca135ea823fcbc
            cni.projectcalico.org/podIP: 172.20.64.45/32
            cni.projectcalico.org/podIPs: 172.20.64.45/32
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T09:02:45Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/taskRun: custom-volume-xnkdj
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T09:02:58Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.45"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T09:04:01Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"1a1e8f7a-24c8-4ccf-93de-e66257ad8099"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-read"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/short/and/stout"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"step-write"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/im/a/custom/mount/path"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"custom"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:03Z"
          name: custom-volume-xnkdj-pod-thn2q
          namespace: arendelle-gph2j
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: custom-volume-xnkdj
            uid: 1a1e8f7a-24c8-4ccf-93de-e66257ad8099
          resourceVersion: "5537062"
          selfLink: /api/v1/namespaces/arendelle-gph2j/pods/custom-volume-xnkdj-pod-thn2q
          uid: 410395a2-89d7-4074-bfeb-dac6f0e86427
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-write
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-fql44
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-write
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /im/a/custom/mount/path
              name: custom
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-49g55
              readOnly: true
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-read
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-vchrs
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-read
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /short/and/stout
              name: custom
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-49g55
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-49g55
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-fql44"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaAplY2hvIHNvbWUgc3R1ZmYgPiAvaW0vYS9jdXN0b20vbW91bnQvcGF0aC9maWxlCg==
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
              scriptfile="/tekton/scripts/script-1-vchrs"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvdXNyL2Jpbi9lbnYgYmFzaApjYXQgL3Nob3J0L2FuZC9zdG91dC9maWxlIHwgZ3JlcCBzdHVmZgo=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-49g55
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - emptyDir: {}
            name: custom
          - name: default-token-49g55
            secret:
              defaultMode: 420
              secretName: default-token-49g55
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:17Z"
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:04:01Z"
            status: "True"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:04:01Z"
            status: "True"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:02:45Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://5d6acb6acd4bd859c96c2f6463b748fee1fae6622757597ba0e5ea02f0b9e4cc
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-read
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T09:03:58Z"
          - containerID: docker://1be5834bd700638970bcbf6c2f5a885cd9ad1dd65a393612877fccd45b6a7398
            image: ubuntu:latest
            imageID: docker-pullable://ubuntu@sha256:8f083e3e070591f3f70ec51abd83d0e6e8b5c92fe4bc79775f50d0a22b8b7021
            lastState: {}
            name: step-write
            ready: true
            restartCount: 0
            started: true
            state:
              running:
                startedAt: "2021-09-27T09:03:54Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://58a1c6b5d1c057c262262c166e4c4e06c3e584a2007321517c1c0d8ae894b93d
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://58a1c6b5d1c057c262262c166e4c4e06c3e584a2007321517c1c0d8ae894b93d
                exitCode: 0
                finishedAt: "2021-09-27T09:02:59Z"
                reason: Completed
                startedAt: "2021-09-27T09:02:59Z"
          - containerID: docker://29f57266a1dac84245462bf74003ed776f22c5f5add8ee8724500580db0c0a90
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://29f57266a1dac84245462bf74003ed776f22c5f5add8ee8724500580db0c0a90
                exitCode: 0
                finishedAt: "2021-09-27T09:03:10Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:10Z"
          phase: Running
          podIP: 172.20.64.45
          podIPs:
          - ip: 172.20.64.45
          qosClass: BestEffort
          startTime: "2021-09-27T09:02:46Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-gph2j ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/taskruns/creds-init-only-mounts-provided-credentials
    build_logs.go:35: Could not get logs for pod creds-init-only-mounts-provided-credentials-fjnnl-pod-q84xn: container "step-check-credentials" in pod "creds-init-only-mounts-provided-credentials-fjnnl-pod-q84xn" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
=== CONT  TestExamples/v1alpha1/taskruns/git-ssh-creds
    build_logs.go:35: Could not get logs for pod git-ssh-creds-pod-x4wjf: container "step-git-source-gitssh-4zrxr" in pod "git-ssh-creds-pod-x4wjf" is waiting to start: PodInitializing
    build_logs.go:37: build logs 
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
=== CONT  TestExamples/v1beta1/taskruns/custom-volume
    build_logs.go:37: build logs 
        >>> Container step-write:
        
        >>> Container step-read:
=== CONT  TestExamples/v1beta1/taskruns/task-multiple-output-image
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    init_test.go:135: Create namespace arendelle-rsl2s to deploy to
=== CONT  TestExamples/v1beta1/taskruns/task-result
    build_logs.go:37: build logs 
        >>> Container step-print-date-unix-timestamp:
        1632733442
        
        >>> Container step-print-date-human-readable:
        Mon Sep 27 09:04:02 UTC 2021
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
=== CONT  TestExamples/v1alpha1/taskruns/custom-volume
    build_logs.go:37: build logs 
        >>> Container step-write:
        
        >>> Container step-read:
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-rsl2s"
=== CONT  TestExamples/v1beta1/taskruns/task-multiple-output-image
    init_test.go:135: Create namespace arendelle-fslp2 to deploy to
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Pipeline
        metadata:
          creationTimestamp: "2021-09-27T09:02:41Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:02:41Z"
          name: pipeline-list-pipeline-repo-files
          namespace: arendelle-kjgb2
          resourceVersion: "5535671"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-kjgb2/pipelines/pipeline-list-pipeline-repo-files
          uid: 42d4ef53-a699-4506-bfc0-495ef1552c3b
        spec:
          params:
          - default: README.md
            name: path
            type: string
          resources:
          - name: pipeline-source-repo
            type: git
          tasks:
          - conditions:
            - conditionRef: verify-no-file-exists-without-resource
              params:
              - name: path
                value: $(params.path)
            name: list-pipeline-repo-files-1
            resources:
              inputs:
              - name: optional-workspace
                resource: pipeline-source-repo
            taskRef:
              kind: Task
              name: list-pipeline-repo-files
        
        ---
        apiVersion: tekton.dev/v1alpha1
        kind: PipelineResource
        metadata:
          creationTimestamp: "2021-09-27T09:02:41Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:type: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:02:41Z"
          name: pipeline-git-repo
          namespace: arendelle-kjgb2
          resourceVersion: "5535666"
          selfLink: /apis/tekton.dev/v1alpha1/namespaces/arendelle-kjgb2/pipelineresources/pipeline-git-repo
          uid: 489db70c-c253-4939-a98e-9639b935c871
        spec:
          params:
          - name: revision
            value: main
          - name: url
            value: https://github.com/tektoncd/pipeline
          type: git
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T09:02:41Z"
          generation: 1
          labels:
            tekton.dev/pipeline: pipeline-list-pipeline-repo-files
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineRef:
                  .: {}
                  f:name: {}
                f:resources: {}
                f:serviceAccountName: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:02:41Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:resources: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:demo-conditional-pr-without-condition-resource-list-pipel-bsh4t:
                    .: {}
                    f:conditionChecks:
                      .: {}
                      f:demo-conditional-pr-without-condition-resource-list-pipel-cgf8k:
                        .: {}
                        f:conditionName: {}
                        f:status:
                          .: {}
                          f:check:
                            .: {}
                            f:terminated:
                              .: {}
                              f:containerID: {}
                              f:exitCode: {}
                              f:finishedAt: {}
                              f:reason: {}
                              f:startedAt: {}
                          f:completionTime: {}
                          f:conditions: {}
                          f:podName: {}
                          f:startTime: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:podName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:13Z"
          name: demo-conditional-pr-without-condition-resource
          namespace: arendelle-kjgb2
          resourceVersion: "5537094"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-kjgb2/pipelineruns/demo-conditional-pr-without-condition-resource
          uid: e72f909e-e2e1-4ea5-ad08-14acb35ac834
        spec:
          pipelineRef:
            name: pipeline-list-pipeline-repo-files
          resources:
          - name: pipeline-source-repo
            resourceRef:
              name: pipeline-git-repo
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T09:02:42Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: README.md
              name: path
              type: string
            resources:
            - name: pipeline-source-repo
              type: git
            tasks:
            - conditions:
              - conditionRef: verify-no-file-exists-without-resource
                params:
                - name: path
                  value: $(params.path)
              name: list-pipeline-repo-files-1
              resources:
                inputs:
                - name: optional-workspace
                  resource: pipeline-source-repo
              taskRef:
                kind: Task
                name: list-pipeline-repo-files
          startTime: "2021-09-27T09:02:42Z"
          taskRuns:
            demo-conditional-pr-without-condition-resource-list-pipel-bsh4t:
              conditionChecks:
                demo-conditional-pr-without-condition-resource-list-pipel-cgf8k:
                  conditionName: verify-no-file-exists-without-resource-0
                  status:
                    check:
                      terminated:
                        containerID: docker://52402c58d2b56a31d0c131c2487b8cfe492af6ff252d0bfe6f2ed66e786d2df9
                        exitCode: 0
                        finishedAt: "2021-09-27T09:04:00Z"
                        reason: Completed
                        startedAt: "2021-09-27T09:04:00Z"
                    completionTime: "2021-09-27T09:04:03Z"
                    conditions:
                    - lastTransitionTime: "2021-09-27T09:04:03Z"
                      message: All Steps have completed executing
                      reason: Succeeded
                      status: "True"
                      type: Succeeded
                    podName: demo-conditional-pr-without-condition-resource-list-pipel-pdddw
                    startTime: "2021-09-27T09:02:45Z"
              pipelineTaskName: list-pipeline-repo-files-1
              status:
                podName: ""
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: Task
        metadata:
          creationTimestamp: "2021-09-27T09:02:41Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1alpha1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:inputs:
                  .: {}
                  f:resources: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:02:41Z"
          name: list-pipeline-repo-files
          namespace: arendelle-kjgb2
          resourceVersion: "5535670"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-kjgb2/tasks/list-pipeline-repo-files
          uid: 9284ccf9-3451-4d45-b61c-fdab37c09710
        spec:
          resources:
            inputs:
            - name: optional-workspace
              optional: true
              type: git
          steps:
          - image: ubuntu
            name: run-ls
            resources: {}
            script: ls -al $(inputs.resources.optional-workspace.path)
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:04:03Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-list-pipeline-repo-files
            tekton.dev/pipelineRun: demo-conditional-pr-without-condition-resource
            tekton.dev/pipelineTask: list-pipeline-repo-files-1
            tekton.dev/task: list-pipeline-repo-files
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"e72f909e-e2e1-4ea5-ad08-14acb35ac834"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources:
                  .: {}
                  f:inputs: {}
                f:serviceAccountName: {}
                f:taskRef:
                  .: {}
                  f:kind: {}
                  f:name: {}
                f:timeout: {}
              f:status:
                .: {}
                f:podName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:17Z"
          name: demo-conditional-pr-without-condition-resource-list-pipel-bsh4t
          namespace: arendelle-kjgb2
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-conditional-pr-without-condition-resource
            uid: e72f909e-e2e1-4ea5-ad08-14acb35ac834
          resourceVersion: "5537111"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-kjgb2/taskruns/demo-conditional-pr-without-condition-resource-list-pipel-bsh4t
          uid: d5990fe5-8696-45a1-a429-55f54a6eac22
        spec:
          resources:
            inputs:
            - name: optional-workspace
              resourceRef:
                name: pipeline-git-repo
          serviceAccountName: default
          taskRef:
            kind: Task
            name: list-pipeline-repo-files
          timeout: 1h0m0s
        status:
          podName: ""
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:02:42Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: demo-conditional-pr-without-condition-resource-list-pipel-cgf8k
            tekton.dev/conditionName: verify-no-file-exists-without-resource
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-list-pipeline-repo-files
            tekton.dev/pipelineRun: demo-conditional-pr-without-condition-resource
            tekton.dev/pipelineTask: list-pipeline-repo-files-1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"e72f909e-e2e1-4ea5-ad08-14acb35ac834"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:steps: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:resources:
                    .: {}
                    f:inputs: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:03Z"
          name: demo-conditional-pr-without-condition-resource-list-pipel-cgf8k
          namespace: arendelle-kjgb2
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: demo-conditional-pr-without-condition-resource
            uid: e72f909e-e2e1-4ea5-ad08-14acb35ac834
          resourceVersion: "5537074"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-kjgb2/taskruns/demo-conditional-pr-without-condition-resource-list-pipel-cgf8k
          uid: 0ceaae72-56ad-4324-93d0-12517ef3155d
        spec:
          params:
          - name: path
            value: README.md
          resources: {}
          serviceAccountName: default
          taskSpec:
            params:
            - name: path
              type: string
            resources:
              inputs:
              - name: optional-workspace
                optional: true
                type: git
            steps:
            - image: alpine
              name: condition-check-verify-no-file-exists-without-resource
              resources: {}
              script: test ! -f $(resources.optional-workspace.path)/$(inputs.params.path)
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T09:04:03Z"
          conditions:
          - lastTransitionTime: "2021-09-27T09:04:03Z"
            message: All Steps have completed executing
            reason: Succeeded
            status: "True"
            type: Succeeded
          podName: demo-conditional-pr-without-condition-resource-list-pipel-pdddw
          startTime: "2021-09-27T09:02:45Z"
          steps:
          - container: step-condition-check-verify-no-file-exists-without-resource
            imageID: docker-pullable://192.168.143.246:5000/alpine@sha256:9bea59997a84beb47a8cc7ddb11abc957b141e8160852aa93b4cf60659016b53
            name: condition-check-verify-no-file-exists-without-resource
            terminated:
              containerID: docker://52402c58d2b56a31d0c131c2487b8cfe492af6ff252d0bfe6f2ed66e786d2df9
              exitCode: 0
              finishedAt: "2021-09-27T09:04:00Z"
              reason: Completed
              startedAt: "2021-09-27T09:04:00Z"
          taskSpec:
            params:
            - name: path
              type: string
            resources:
              inputs:
              - name: optional-workspace
                optional: true
                type: git
            steps:
            - image: alpine
              name: condition-check-verify-no-file-exists-without-resource
              resources: {}
              script: test ! -f $(resources.optional-workspace.path)/$(inputs.params.path)
        
        ---
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:04:17Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-list-pipeline-repo-files
            tekton.dev/pipelineRun: demo-conditional-pr-without-condition-resource
            tekton.dev/pipelineTask: list-pipeline-repo-files-1
            tekton.dev/task: list-pipeline-repo-files
            tekton.dev/taskRun: demo-conditional-pr-without-condition-resource-list-pipel-bsh4t
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/task: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"d5990fe5-8696-45a1-a429-55f54a6eac22"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-git-source-optional-workspace-q6vtd"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:env:
                      .: {}
                      k:{"name":"HOME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                      k:{"name":"TEKTON_RESOURCE_NAME"}:
                        .: {}
                        f:name: {}
                        f:value: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                  k:{"name":"step-run-ls"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-creds-init-home-1"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:04:16Z"
          name: demo-conditional-pr-without-condition-resource-list-pipel-2465m
          namespace: arendelle-kjgb2
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-conditional-pr-without-condition-resource-list-pipel-bsh4t
            uid: d5990fe5-8696-45a1-a429-55f54a6eac22
          resourceVersion: "5537109"
          selfLink: /api/v1/namespaces/arendelle-kjgb2/pods/demo-conditional-pr-without-condition-resource-list-pipel-2465m
          uid: d8515b97-e7a8-4845-a12b-773748f721b8
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-git-source-optional-workspace-q6vtd
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /ko-app/git-init
            - --
            - -url
            - https://github.com/tektoncd/pipeline
            - -path
            - /workspace/optional-workspace
            - -revision
            - main
            command:
            - /tekton/bin/entrypoint
            env:
            - name: TEKTON_RESOURCE_NAME
              value: optional-workspace
            - name: HOME
              value: /tekton/home
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/git-init-4874978a9786b6625dd8b6ef2a21aa70@sha256:c5cab2b09763e83d95d01df212b9666abfa6348a56b4496e0e7e914cfe150f5f
            imagePullPolicy: IfNotPresent
            name: step-git-source-optional-workspace-q6vtd
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-rkdff
              readOnly: true
            workingDir: /workspace
          - args:
            - -wait_file
            - /tekton/run/0
            - -post_file
            - /tekton/run/1
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-run-ls
            - -step_metadata_dir_link
            - /tekton/steps/1
            - -entrypoint
            - /tekton/scripts/script-1-wh2wv
            - --
            command:
            - /tekton/bin/entrypoint
            image: ubuntu
            imagePullPolicy: Always
            name: step-run-ls
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-1
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-rkdff
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-rkdff
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-1-wh2wv"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKbHMgLWFsIC93b3Jrc3BhY2Uvb3B0aW9uYWwtd29ya3NwYWNl
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-rkdff
              readOnly: true
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-1
          - name: default-token-rkdff
            secret:
              defaultMode: 420
              secretName: default-token-rkdff
        status:
          phase: Pending
          qosClass: BestEffort
        
        ---
        metadata:
          annotations:
            cni.projectcalico.org/containerID: 1f7c20c7d2cd6b84a8eb3fd6a12f01321055ef6098144e8d281886462def4c20
            cni.projectcalico.org/podIP: ""
            cni.projectcalico.org/podIPs: ""
            pipeline.tekton.dev/release: dd6a931
            tekton.dev/ready: READY
          creationTimestamp: "2021-09-27T09:02:46Z"
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/conditionCheck: demo-conditional-pr-without-condition-resource-list-pipel-cgf8k
            tekton.dev/conditionName: verify-no-file-exists-without-resource
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipeline-list-pipeline-repo-files
            tekton.dev/pipelineRun: demo-conditional-pr-without-condition-resource
            tekton.dev/pipelineTask: list-pipeline-repo-files-1
            tekton.dev/taskRun: demo-conditional-pr-without-condition-resource-list-pipel-cgf8k
          managedFields:
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                  f:tekton.dev/ready: {}
                f:labels:
                  .: {}
                  f:app.kubernetes.io/managed-by: {}
                  f:tekton.dev/conditionCheck: {}
                  f:tekton.dev/conditionName: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                  f:tekton.dev/taskRun: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"0ceaae72-56ad-4324-93d0-12517ef3155d"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                f:activeDeadlineSeconds: {}
                f:containers:
                  k:{"name":"step-condition-check-verify-no-file-exists-without-resource"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/creds"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/downward"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/home"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/results"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/run"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                        f:readOnly: {}
                      k:{"mountPath":"/tekton/steps"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/workspace"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                f:dnsPolicy: {}
                f:enableServiceLinks: {}
                f:initContainers:
                  .: {}
                  k:{"name":"place-scripts"}:
                    .: {}
                    f:args: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                      k:{"mountPath":"/tekton/scripts"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                  k:{"name":"place-tools"}:
                    .: {}
                    f:command: {}
                    f:image: {}
                    f:imagePullPolicy: {}
                    f:name: {}
                    f:resources: {}
                    f:terminationMessagePath: {}
                    f:terminationMessagePolicy: {}
                    f:volumeMounts:
                      .: {}
                      k:{"mountPath":"/tekton/bin"}:
                        .: {}
                        f:mountPath: {}
                        f:name: {}
                    f:workingDir: {}
                f:restartPolicy: {}
                f:schedulerName: {}
                f:securityContext: {}
                f:serviceAccount: {}
                f:serviceAccountName: {}
                f:terminationGracePeriodSeconds: {}
                f:volumes:
                  .: {}
                  k:{"name":"tekton-creds-init-home-0"}:
                    .: {}
                    f:emptyDir:
                      .: {}
                      f:medium: {}
                    f:name: {}
                  k:{"name":"tekton-internal-bin"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-downward"}:
                    .: {}
                    f:downwardAPI:
                      .: {}
                      f:defaultMode: {}
                      f:items: {}
                    f:name: {}
                  k:{"name":"tekton-internal-home"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-results"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-run"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-scripts"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-steps"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
                  k:{"name":"tekton-internal-workspace"}:
                    .: {}
                    f:emptyDir: {}
                    f:name: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:03:55Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  f:cni.projectcalico.org/containerID: {}
                  f:cni.projectcalico.org/podIP: {}
                  f:cni.projectcalico.org/podIPs: {}
            manager: calico
            operation: Update
            time: "2021-09-27T09:04:03Z"
          - apiVersion: v1
            fieldsType: FieldsV1
            fieldsV1:
              f:status:
                f:conditions:
                  k:{"type":"ContainersReady"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Initialized"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                  k:{"type":"Ready"}:
                    .: {}
                    f:lastProbeTime: {}
                    f:lastTransitionTime: {}
                    f:reason: {}
                    f:status: {}
                    f:type: {}
                f:containerStatuses: {}
                f:hostIP: {}
                f:initContainerStatuses: {}
                f:phase: {}
                f:podIP: {}
                f:podIPs:
                  .: {}
                  k:{"ip":"172.20.64.5"}:
                    .: {}
                    f:ip: {}
                f:startTime: {}
            manager: kubelet
            operation: Update
            time: "2021-09-27T09:04:03Z"
          name: demo-conditional-pr-without-condition-resource-list-pipel-pdddw
          namespace: arendelle-kjgb2
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: TaskRun
            name: demo-conditional-pr-without-condition-resource-list-pipel-cgf8k
            uid: 0ceaae72-56ad-4324-93d0-12517ef3155d
          resourceVersion: "5537075"
          selfLink: /api/v1/namespaces/arendelle-kjgb2/pods/demo-conditional-pr-without-condition-resource-list-pipel-pdddw
          uid: e4555ea6-b034-4c3e-9fa2-3f27563ced2d
        spec:
          activeDeadlineSeconds: 5400
          containers:
          - args:
            - -wait_file
            - /tekton/downward/ready
            - -wait_file_content
            - -post_file
            - /tekton/run/0
            - -termination_path
            - /tekton/termination
            - -step_metadata_dir
            - /tekton/steps/step-condition-check-verify-no-file-exists-without-resource
            - -step_metadata_dir_link
            - /tekton/steps/0
            - -entrypoint
            - /tekton/scripts/script-0-q496d
            - --
            command:
            - /tekton/bin/entrypoint
            image: alpine
            imagePullPolicy: Always
            name: step-condition-check-verify-no-file-exists-without-resource
            resources: {}
            terminationMessagePath: /tekton/termination
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
              readOnly: true
            - mountPath: /tekton/bin
              name: tekton-internal-bin
              readOnly: true
            - mountPath: /tekton/run
              name: tekton-internal-run
            - mountPath: /tekton/downward
              name: tekton-internal-downward
            - mountPath: /tekton/creds
              name: tekton-creds-init-home-0
            - mountPath: /workspace
              name: tekton-internal-workspace
            - mountPath: /tekton/home
              name: tekton-internal-home
            - mountPath: /tekton/results
              name: tekton-internal-results
            - mountPath: /tekton/steps
              name: tekton-internal-steps
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-rkdff
              readOnly: true
          dnsPolicy: ClusterFirst
          enableServiceLinks: true
          initContainers:
          - command:
            - /ko-app/entrypoint
            - cp
            - /ko-app/entrypoint
            - /tekton/bin/entrypoint
            image: ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            imagePullPolicy: IfNotPresent
            name: place-tools
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-rkdff
              readOnly: true
            workingDir: /
          - args:
            - -c
            - |
              scriptfile="/tekton/scripts/script-0-q496d"
              touch ${scriptfile} && chmod +x ${scriptfile}
              cat > ${scriptfile} << '_EOF_'
              IyEvYmluL3NoCnNldCAteGUKdGVzdCAhIC1mICQocmVzb3VyY2VzLm9wdGlvbmFsLXdvcmtzcGFjZS5wYXRoKS9SRUFETUUubWQ=
              _EOF_
              /tekton/bin/entrypoint decode-script "${scriptfile}"
            command:
            - sh
            image: gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            imagePullPolicy: IfNotPresent
            name: place-scripts
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /tekton/scripts
              name: tekton-internal-scripts
            - mountPath: /tekton/bin
              name: tekton-internal-bin
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: default-token-rkdff
              readOnly: true
          nodeName: snat-vm1
          preemptionPolicy: PreemptLowerPriority
          priority: 0
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoExecute
            key: node.kubernetes.io/not-ready
            operator: Exists
            tolerationSeconds: 300
          - effect: NoExecute
            key: node.kubernetes.io/unreachable
            operator: Exists
            tolerationSeconds: 300
          volumes:
          - emptyDir: {}
            name: tekton-internal-workspace
          - emptyDir: {}
            name: tekton-internal-home
          - emptyDir: {}
            name: tekton-internal-results
          - emptyDir: {}
            name: tekton-internal-steps
          - emptyDir: {}
            name: tekton-internal-scripts
          - emptyDir: {}
            name: tekton-internal-bin
          - emptyDir: {}
            name: tekton-internal-run
          - downwardAPI:
              defaultMode: 420
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.annotations['tekton.dev/ready']
                path: ready
            name: tekton-internal-downward
          - emptyDir:
              medium: Memory
            name: tekton-creds-init-home-0
          - name: default-token-rkdff
            secret:
              defaultMode: 420
              secretName: default-token-rkdff
        status:
          conditions:
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:03:17Z"
            reason: PodCompleted
            status: "True"
            type: Initialized
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:04:01Z"
            reason: PodCompleted
            status: "False"
            type: Ready
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:04:01Z"
            reason: PodCompleted
            status: "False"
            type: ContainersReady
          - lastProbeTime: null
            lastTransitionTime: "2021-09-27T09:02:46Z"
            status: "True"
            type: PodScheduled
          containerStatuses:
          - containerID: docker://52402c58d2b56a31d0c131c2487b8cfe492af6ff252d0bfe6f2ed66e786d2df9
            image: 192.168.143.246:5000/alpine:latest
            imageID: docker-pullable://192.168.143.246:5000/alpine@sha256:9bea59997a84beb47a8cc7ddb11abc957b141e8160852aa93b4cf60659016b53
            lastState: {}
            name: step-condition-check-verify-no-file-exists-without-resource
            ready: false
            restartCount: 0
            started: false
            state:
              terminated:
                containerID: docker://52402c58d2b56a31d0c131c2487b8cfe492af6ff252d0bfe6f2ed66e786d2df9
                exitCode: 0
                finishedAt: "2021-09-27T09:04:00Z"
                message: '[{"key":"StartedAt","value":"2021-09-27T09:04:00.739Z","type":3}]'
                reason: Completed
                startedAt: "2021-09-27T09:03:30Z"
          hostIP: 192.168.100.196
          initContainerStatuses:
          - containerID: docker://5d0bf1b2faa55f7e8b123a00d05203d447ce3b66997d8e105b3edde86607f6fc
            image: sha256:d975546f4bb18a7f980643e2b244701ceecc3e613dc20593a1ac98836f125993
            imageID: docker-pullable://ppc64le-cluster.bastion-p.svc.cluster.local:443/entrypoint-bff0a22da108bc2f16c818c97641a296@sha256:df99833a9fc55f041338a47a82b1af7aa4862c0481ec6e65c1516f018b438caf
            lastState: {}
            name: place-tools
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://5d0bf1b2faa55f7e8b123a00d05203d447ce3b66997d8e105b3edde86607f6fc
                exitCode: 0
                finishedAt: "2021-09-27T09:03:06Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:06Z"
          - containerID: docker://5d148c878c5f055c487a4417d8b6344845664c388bcd799c01fc11c3ee80f923
            image: sha256:2b725792e3b49e8cfdc1214f355219693d58ac02ef3751cfaa451da71a46f29d
            imageID: docker-pullable://gcr.io/distroless/base@sha256:aa4fd987555ea10e1a4ec8765da8158b5ffdfef1e72da512c7ede509bc9966c4
            lastState: {}
            name: place-scripts
            ready: true
            restartCount: 0
            state:
              terminated:
                containerID: docker://5d148c878c5f055c487a4417d8b6344845664c388bcd799c01fc11c3ee80f923
                exitCode: 0
                finishedAt: "2021-09-27T09:03:12Z"
                reason: Completed
                startedAt: "2021-09-27T09:03:12Z"
          phase: Succeeded
          podIP: 172.20.64.5
          podIPs:
          - ip: 172.20.64.5
          qosClass: BestEffort
          startTime: "2021-09-27T09:02:47Z"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-kjgb2 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:135: Create namespace arendelle-t2tj7 to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    init_test.go:135: Create namespace arendelle-7rmmw to deploy to
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    init_test.go:135: Create namespace arendelle-kpln7 to deploy to
=== CONT  TestExamples/v1beta1/taskruns/task-multiple-output-image
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fslp2"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-t2tj7"
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-7rmmw"
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-kpln7"
=== CONT  TestExamples/v1alpha1/pipelineruns/conditional-pipelinerun-with-optional-resources
    build_logs.go:37: build logs 
        >>> Container step-git-source-optional-workspace-q6vtd:
        
        >>> Container step-run-ls:
    build_logs.go:37: build logs 
        >>> Container step-condition-check-verify-no-file-exists-without-resource:
        + resources.optional-workspace.path
        /tekton/scripts/script-0-q496d: line 3: resources.optional-workspace.path: not found
        + test '!' -f /README.md
=== CONT  TestExamples/v1alpha1/taskruns/step-script
    init_test.go:135: Create namespace arendelle-q7852 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-q7852"
=== CONT  TestExamples/v1alpha1/taskruns/home-volume
    examples_test.go:169: Deleting namespace arendelle-qrjg8
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
    init_test.go:135: Create namespace arendelle-ngkcc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-ngkcc"
=== CONT  TestExamples/v1alpha1/taskruns/custom-env
    examples_test.go:169: Deleting namespace arendelle-kpln7
=== CONT  TestExamples/v1beta1/taskruns/steptemplate-env-merge
    init_test.go:135: Create namespace arendelle-jmlsv to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-jmlsv"
=== CONT  TestExamples/v1beta1/taskruns/clustertask
    examples_test.go:109: Deleting clustertask clustertask-v1beta1
    examples_test.go:169: Deleting namespace arendelle-vqkcc
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    init_test.go:135: Create namespace arendelle-2knzc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-2knzc"
=== CONT  TestExamples/v1alpha1/taskruns/step-script
    examples_test.go:169: Deleting namespace arendelle-q7852
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    init_test.go:135: Create namespace arendelle-fkpw5 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-fkpw5"
=== CONT  TestExamples/v1alpha1/taskruns/dind-sidecar
    examples_test.go:169: Deleting namespace arendelle-7rmmw
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-extra-params
    init_test.go:135: Create namespace arendelle-kfd6w to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-kfd6w"
=== CONT  TestExamples/v1alpha1/pipelineruns/pipelinerun-with-pipelinespec
    examples_test.go:169: Deleting namespace arendelle-t2tj7
=== CONT  TestExamples/v1beta1/pipelineruns/workspaces
    init_test.go:135: Create namespace arendelle-4fxhl to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-4fxhl"
=== CONT  TestExamples/v1beta1/pipelineruns/conditional-pipelinerun-with-optional-resources
    examples_test.go:169: Deleting namespace arendelle-ngkcc
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
    init_test.go:135: Create namespace arendelle-j6s5b to deploy to
=== CONT  TestExamples/v1beta1/taskruns/task-multiple-output-image
    examples_test.go:169: Deleting namespace arendelle-fslp2
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-using-different-subpaths-of-workspace
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-j6s5b"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-task-execution-status
    init_test.go:135: Create namespace arendelle-lkc59 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-lkc59"
=== CONT  TestExamples/v1beta1/taskruns/cloud-event
    examples_test.go:169: Deleting namespace arendelle-rsl2s
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-final-tasks
    init_test.go:135: Create namespace arendelle-sc4pc to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-sc4pc"
=== CONT  TestExamples/v1beta1/pipelineruns/pipelinerun-with-pipelinespec-and-taskspec
    examples_test.go:55: Failed waiting for pipeline run done: "pipelinerun-with-taskspec-to-echo-good-morning" failed
    panic.go:636: ############################################
    panic.go:636: ### Dumping objects from arendelle-fkpw5 ###
    panic.go:636: ############################################
    panic.go:636: 
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T09:13:26Z"
          generation: 1
          labels:
            tekton.dev/pipeline: pipelinerun-with-taskspec-to-echo-good-morning
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:13:26Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:pipelinerun-with-taskspec-to-echo-good-morning-echo-good--xcs8r:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:taskSpec:
                        .: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:13:37Z"
          name: pipelinerun-with-taskspec-to-echo-good-morning
          namespace: arendelle-fkpw5
          resourceVersion: "5540207"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fkpw5/pipelineruns/pipelinerun-with-taskspec-to-echo-good-morning
          uid: f0430607-58f0-445d-8070-4dd09db76e6b
        spec:
          pipelineSpec:
            tasks:
            - name: echo-good-morning
              taskSpec:
                metadata:
                  labels:
                    app: example
                spec: null
                steps:
                - image: ubuntu
                  name: echo
                  resources: {}
                  script: |
                    #!/usr/bin/env bash
                    echo "Good Morning!"
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T09:13:37Z"
          conditions:
          - lastTransitionTime: "2021-09-27T09:13:37Z"
            message: 'Tasks Completed: 1 (Failed: 1, Cancelled 0), Skipped: 0'
            reason: Failed
            status: "False"
            type: Succeeded
          pipelineSpec:
            tasks:
            - name: echo-good-morning
              taskSpec:
                metadata:
                  labels:
                    app: example
                spec: null
                steps:
                - image: ubuntu
                  name: echo
                  resources: {}
                  script: |
                    #!/usr/bin/env bash
                    echo "Good Morning!"
          startTime: "2021-09-27T09:13:27Z"
          taskRuns:
            pipelinerun-with-taskspec-to-echo-good-morning-echo-good--xcs8r:
              pipelineTaskName: echo-good-morning
              status:
                completionTime: "2021-09-27T09:13:37Z"
                conditions:
                - lastTransitionTime: "2021-09-27T09:13:37Z"
                  message: 'failed to create task run pod "pipelinerun-with-taskspec-to-echo-good-morning-echo-good--xcs8r":
                    No API token found for service account "default", retry after the token
                    is automatically created and added to the service account. Maybe invalid
                    TaskSpec'
                  reason: CouldntGetTask
                  status: "False"
                  type: Succeeded
                podName: ""
                startTime: "2021-09-27T09:13:27Z"
                taskSpec:
                  steps:
                  - image: ubuntu
                    name: echo
                    resources: {}
                    script: |
                      #!/usr/bin/env bash
                      echo "Good Morning!"
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T09:13:27Z"
          generation: 1
          labels:
            tekton.dev/pipeline: pipelinerun-with-taskspec-to-echo-greetings
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:pipelinerun-with-taskspec-to-echo-greetings-echo-greeting-rxw9h:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:podName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:13:27Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:13:27Z"
          name: pipelinerun-with-taskspec-to-echo-greetings
          namespace: arendelle-fkpw5
          resourceVersion: "5540134"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fkpw5/pipelineruns/pipelinerun-with-taskspec-to-echo-greetings
          uid: 66ef9d09-3a8e-4042-a264-fd4637e8671c
        spec:
          params:
          - name: GREETINGS
            value: Good Morning!
          pipelineSpec:
            params:
            - default: Hello World!
              description: Greetings, default is Hello World!
              name: GREETINGS
              type: string
            tasks:
            - name: echo-greetings
              params:
              - name: MESSAGE
                value: $(params.GREETINGS)
              taskSpec:
                metadata: {}
                params:
                - default: Hello World!
                  name: MESSAGE
                  type: string
                spec: null
                steps:
                - image: ubuntu
                  name: echo
                  resources: {}
                  script: |
                    #!/usr/bin/env bash
                    echo "$(params.MESSAGE)"
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          conditions:
          - lastTransitionTime: "2021-09-27T09:13:27Z"
            message: 'Tasks Completed: 0 (Failed: 0, Cancelled 0), Incomplete: 1, Skipped:
              0'
            reason: Running
            status: Unknown
            type: Succeeded
          pipelineSpec:
            params:
            - default: Hello World!
              description: Greetings, default is Hello World!
              name: GREETINGS
              type: string
            tasks:
            - name: echo-greetings
              params:
              - name: MESSAGE
                value: $(params.GREETINGS)
              taskSpec:
                metadata: {}
                params:
                - default: Hello World!
                  name: MESSAGE
                  type: string
                spec: null
                steps:
                - image: ubuntu
                  name: echo
                  resources: {}
                  script: |
                    #!/usr/bin/env bash
                    echo "$(params.MESSAGE)"
          startTime: "2021-09-27T09:13:27Z"
          taskRuns:
            pipelinerun-with-taskspec-to-echo-greetings-echo-greeting-rxw9h:
              pipelineTaskName: echo-greetings
              status:
                podName: ""
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: PipelineRun
        metadata:
          creationTimestamp: "2021-09-27T09:13:27Z"
          generation: 1
          labels:
            tekton.dev/pipeline: pipelinerun-with-taskspec-to-echo-message
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-27T09:13:27Z"
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/pipeline: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:pipelineSpec:
                  .: {}
                  f:params: {}
                  f:tasks: {}
                f:startTime: {}
                f:taskRuns:
                  .: {}
                  f:pipelinerun-with-taskspec-to-echo-message-echo-message-j7cmh:
                    .: {}
                    f:pipelineTaskName: {}
                    f:status:
                      .: {}
                      f:completionTime: {}
                      f:conditions: {}
                      f:podName: {}
                      f:startTime: {}
                      f:taskSpec:
                        .: {}
                        f:params: {}
                        f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:13:37Z"
          name: pipelinerun-with-taskspec-to-echo-message
          namespace: arendelle-fkpw5
          resourceVersion: "5540208"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fkpw5/pipelineruns/pipelinerun-with-taskspec-to-echo-message
          uid: abe73bcc-66e2-4b8e-a2e4-92425b632b12
        spec:
          params:
          - name: MESSAGE
            value: Good Morning!
          pipelineSpec:
            params:
            - default: Hello World!
              description: Message, default is Hello World!
              name: MESSAGE
              type: string
            tasks:
            - name: echo-message
              params:
              - name: MESSAGE
                value: $(params.MESSAGE)
              taskSpec:
                metadata: {}
                params:
                - default: Hello World!
                  name: MESSAGE
                  type: string
                spec: null
                steps:
                - image: ubuntu
                  name: echo
                  resources: {}
                  script: |
                    #!/usr/bin/env bash
                    echo "$(params.MESSAGE)"
          serviceAccountName: default
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T09:13:37Z"
          conditions:
          - lastTransitionTime: "2021-09-27T09:13:37Z"
            message: 'Tasks Completed: 1 (Failed: 1, Cancelled 0), Skipped: 0'
            reason: Failed
            status: "False"
            type: Succeeded
          pipelineSpec:
            params:
            - default: Hello World!
              description: Message, default is Hello World!
              name: MESSAGE
              type: string
            tasks:
            - name: echo-message
              params:
              - name: MESSAGE
                value: $(params.MESSAGE)
              taskSpec:
                metadata: {}
                params:
                - default: Hello World!
                  name: MESSAGE
                  type: string
                spec: null
                steps:
                - image: ubuntu
                  name: echo
                  resources: {}
                  script: |
                    #!/usr/bin/env bash
                    echo "$(params.MESSAGE)"
          startTime: "2021-09-27T09:13:27Z"
          taskRuns:
            pipelinerun-with-taskspec-to-echo-message-echo-message-j7cmh:
              pipelineTaskName: echo-message
              status:
                completionTime: "2021-09-27T09:13:37Z"
                conditions:
                - lastTransitionTime: "2021-09-27T09:13:37Z"
                  message: 'failed to create task run pod "pipelinerun-with-taskspec-to-echo-message-echo-message-j7cmh":
                    No API token found for service account "default", retry after the token
                    is automatically created and added to the service account. Maybe invalid
                    TaskSpec'
                  reason: CouldntGetTask
                  status: "False"
                  type: Succeeded
                podName: ""
                startTime: "2021-09-27T09:13:27Z"
                taskSpec:
                  params:
                  - default: Hello World!
                    name: MESSAGE
                    type: string
                  steps:
                  - image: ubuntu
                    name: echo
                    resources: {}
                    script: |
                      #!/usr/bin/env bash
                      echo "$(params.MESSAGE)"
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-20T08:50:19Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-20T08:50:19Z"
          name: cluster-task-pipeline-4
          resourceVersion: "1698975"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/cluster-task-pipeline-4
          uid: 0e1573dd-438c-4fc3-b529-cf1a4415a2f9
        spec:
          steps:
          - args:
            - -c
            - echo success
            command:
            - /bin/bash
            image: ubuntu
            name: task-two-step-one
            resources: {}
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: ClusterTask
        metadata:
          creationTimestamp: "2021-09-24T08:36:54Z"
          generation: 1
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:spec:
                .: {}
                f:params: {}
                f:steps: {}
            manager: kubectl-create
            operation: Update
            time: "2021-09-24T08:36:54Z"
          name: image-params
          resourceVersion: "3894866"
          selfLink: /apis/tekton.dev/v1beta1/clustertasks/image-params
          uid: 8a5f9f01-d5ee-4e85-907d-f83194e0f5db
        spec:
          params:
          - default: ubuntu
            name: image
            type: string
          - default: IfNotPresent
            name: imagePullPolicy
            type: string
          steps:
          - image: $(params.image)
            imagePullPolicy: $(params.imagePullPolicy)
            name: ""
            resources: {}
            script: echo hello
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:13:27Z"
          generation: 1
          labels:
            app: example
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipelinerun-with-taskspec-to-echo-good-morning
            tekton.dev/pipelineRun: pipelinerun-with-taskspec-to-echo-good-morning
            tekton.dev/pipelineTask: echo-good-morning
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:app: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"f0430607-58f0-445d-8070-4dd09db76e6b"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:13:37Z"
          name: pipelinerun-with-taskspec-to-echo-good-morning-echo-good--xcs8r
          namespace: arendelle-fkpw5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: pipelinerun-with-taskspec-to-echo-good-morning
            uid: f0430607-58f0-445d-8070-4dd09db76e6b
          resourceVersion: "5540197"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fkpw5/taskruns/pipelinerun-with-taskspec-to-echo-good-morning-echo-good--xcs8r
          uid: 1619067e-9faf-42bf-b6fc-1c8f85099db1
        spec:
          resources: {}
          serviceAccountName: default
          taskSpec:
            steps:
            - image: ubuntu
              name: echo
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo "Good Morning!"
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T09:13:37Z"
          conditions:
          - lastTransitionTime: "2021-09-27T09:13:37Z"
            message: 'failed to create task run pod "pipelinerun-with-taskspec-to-echo-good-morning-echo-good--xcs8r":
              No API token found for service account "default", retry after the token is automatically
              created and added to the service account. Maybe invalid TaskSpec'
            reason: CouldntGetTask
            status: "False"
            type: Succeeded
          podName: ""
          startTime: "2021-09-27T09:13:27Z"
          taskSpec:
            steps:
            - image: ubuntu
              name: echo
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo "Good Morning!"
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          creationTimestamp: "2021-09-27T09:13:27Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipelinerun-with-taskspec-to-echo-greetings
            tekton.dev/pipelineRun: pipelinerun-with-taskspec-to-echo-greetings
            tekton.dev/pipelineTask: echo-greetings
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"66ef9d09-3a8e-4042-a264-fd4637e8671c"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:podName: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:13:27Z"
          name: pipelinerun-with-taskspec-to-echo-greetings-echo-greeting-rxw9h
          namespace: arendelle-fkpw5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: pipelinerun-with-taskspec-to-echo-greetings
            uid: 66ef9d09-3a8e-4042-a264-fd4637e8671c
          resourceVersion: "5540126"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fkpw5/taskruns/pipelinerun-with-taskspec-to-echo-greetings-echo-greeting-rxw9h
          uid: 07c53581-64a7-41f8-9339-257d9f6c1563
        spec:
          params:
          - name: MESSAGE
            value: Good Morning!
          resources: {}
          serviceAccountName: default
          taskSpec:
            params:
            - default: Hello World!
              name: MESSAGE
              type: string
            steps:
            - image: ubuntu
              name: echo
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo "$(params.MESSAGE)"
          timeout: 1h0m0s
        status:
          podName: ""
        
        ---
        apiVersion: tekton.dev/v1beta1
        kind: TaskRun
        metadata:
          annotations:
            pipeline.tekton.dev/release: dd6a931
          creationTimestamp: "2021-09-27T09:13:27Z"
          generation: 1
          labels:
            app.kubernetes.io/managed-by: tekton-pipelines
            tekton.dev/memberOf: tasks
            tekton.dev/pipeline: pipelinerun-with-taskspec-to-echo-message
            tekton.dev/pipelineRun: pipelinerun-with-taskspec-to-echo-message
            tekton.dev/pipelineTask: echo-message
          managedFields:
          - apiVersion: tekton.dev/v1beta1
            fieldsType: FieldsV1
            fieldsV1:
              f:metadata:
                f:annotations:
                  .: {}
                  f:pipeline.tekton.dev/release: {}
                f:labels:
                  .: {}
                  f:tekton.dev/memberOf: {}
                  f:tekton.dev/pipeline: {}
                  f:tekton.dev/pipelineRun: {}
                  f:tekton.dev/pipelineTask: {}
                f:ownerReferences:
                  .: {}
                  k:{"uid":"abe73bcc-66e2-4b8e-a2e4-92425b632b12"}:
                    .: {}
                    f:apiVersion: {}
                    f:blockOwnerDeletion: {}
                    f:controller: {}
                    f:kind: {}
                    f:name: {}
                    f:uid: {}
              f:spec:
                .: {}
                f:params: {}
                f:resources: {}
                f:serviceAccountName: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
                f:timeout: {}
              f:status:
                .: {}
                f:completionTime: {}
                f:conditions: {}
                f:podName: {}
                f:startTime: {}
                f:taskSpec:
                  .: {}
                  f:params: {}
                  f:steps: {}
            manager: controller
            operation: Update
            time: "2021-09-27T09:13:37Z"
          name: pipelinerun-with-taskspec-to-echo-message-echo-message-j7cmh
          namespace: arendelle-fkpw5
          ownerReferences:
          - apiVersion: tekton.dev/v1beta1
            blockOwnerDeletion: true
            controller: true
            kind: PipelineRun
            name: pipelinerun-with-taskspec-to-echo-message
            uid: abe73bcc-66e2-4b8e-a2e4-92425b632b12
          resourceVersion: "5540201"
          selfLink: /apis/tekton.dev/v1beta1/namespaces/arendelle-fkpw5/taskruns/pipelinerun-with-taskspec-to-echo-message-echo-message-j7cmh
          uid: 62fafe17-9c96-4f1b-880c-d82c207f143f
        spec:
          params:
          - name: MESSAGE
            value: Good Morning!
          resources: {}
          serviceAccountName: default
          taskSpec:
            params:
            - default: Hello World!
              name: MESSAGE
              type: string
            steps:
            - image: ubuntu
              name: echo
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo "$(params.MESSAGE)"
          timeout: 1h0m0s
        status:
          completionTime: "2021-09-27T09:13:37Z"
          conditions:
          - lastTransitionTime: "2021-09-27T09:13:37Z"
            message: 'failed to create task run pod "pipelinerun-with-taskspec-to-echo-message-echo-message-j7cmh":
              No API token found for service account "default", retry after the token is automatically
              created and added to the service account. Maybe invalid TaskSpec'
            reason: CouldntGetTask
            status: "False"
            type: Succeeded
          podName: ""
          startTime: "2021-09-27T09:13:27Z"
          taskSpec:
            params:
            - default: Hello World!
              name: MESSAGE
              type: string
            steps:
            - image: ubuntu
              name: echo
              resources: {}
              script: |
                #!/usr/bin/env bash
                echo "$(params.MESSAGE)"
        
    panic.go:636: #####################################################
    panic.go:636: ### Dumping logs from Pods in the arendelle-fkpw5 ###
    panic.go:636: #####################################################
=== CONT  TestExamples/v1beta1/taskruns/steps-run-in-order
    init_test.go:135: Create namespace arendelle-zwsr2 to deploy to
    init_test.go:163: Verify SA "default" is created in namespace "arendelle-zwsr2"
panic: test timed out after 30m0s

goroutine 12814 [running]:
testing.(*M).startAlarm.func1()
	/usr/lib/golang/src/testing/testing.go:1618 +0x100
created by time.goFunc
	/usr/lib/golang/src/time/sleep.go:167 +0x48

goroutine 1 [chan receive, 29 minutes]:
testing.tRunner.func1(0xc000600f00)
	/usr/lib/golang/src/testing/testing.go:1088 +0x250
testing.tRunner(0xc000600f00, 0xc00074fb58)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
testing.runTests(0xc000471f20, 0x13433380, 0x6, 0x6, 0xc04c80d259da348d, 0x1a320c605df, 0x134cb880, 0x124068d8)
	/usr/lib/golang/src/testing/testing.go:1437 +0x57c
testing.(*M).Run(0xc000608500, 0x0)
	/usr/lib/golang/src/testing/testing.go:1345 +0x2e4
github.com/tektoncd/pipeline/test.TestMain(0xc000608500)
	/root/rohan/pipeline/test/init_test.go:180 +0xc4
main.main()
	_testmain.go:55 +0x224

goroutine 35 [chan receive]:
k8s.io/klog/v2.(*loggingT).flushDaemon(0x134cc020)
	/root/go/pkg/mod/k8s.io/klog/v2@v2.8.0/klog.go:1164 +0x90
created by k8s.io/klog/v2.init.0
	/root/go/pkg/mod/k8s.io/klog/v2@v2.8.0/klog.go:418 +0x1a8

goroutine 36 [select]:
go.opencensus.io/stats/view.(*worker).start(0xc000420980)
	/root/go/pkg/mod/go.opencensus.io@v0.23.0/stats/view/worker.go:276 +0x174
created by go.opencensus.io/stats/view.init.0
	/root/go/pkg/mod/go.opencensus.io@v0.23.0/stats/view/worker.go:34 +0xa8

goroutine 37 [chan receive]:
k8s.io/klog.(*loggingT).flushDaemon(0x134cbf40)
	/root/go/pkg/mod/k8s.io/klog@v1.0.0/klog.go:1010 +0x90
created by k8s.io/klog.init.0
	/root/go/pkg/mod/k8s.io/klog@v1.0.0/klog.go:411 +0x18c

goroutine 24 [chan receive, 11 minutes]:
testing.tRunner.func1(0xc000103800)
	/usr/lib/golang/src/testing/testing.go:1088 +0x250
testing.tRunner(0xc000103800, 0x12404168)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 40 [chan receive]:
knative.dev/pkg/metrics.(*metricsWorker).start(0xc0001a0050)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/metrics/metrics_worker.go:99 +0x54
created by knative.dev/pkg/metrics.init.0
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/metrics/exporter.go:39 +0xe4

goroutine 87 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000398300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000398300, 0xc0002ac3c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 27 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000103b00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103b00, 0x12404180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 260 [select, 29 minutes]:
knative.dev/pkg/test/logstream/v2.(*namespaceSource).watchPods.func1(0x1265cb60, 0xc000da4180, 0xc00010e580)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:97 +0x1cc
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).watchPods
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:92 +0x1e0

goroutine 47 [chan receive, 29 minutes]:
testing.runTests.func1.1(0xc000600f00)
	/usr/lib/golang/src/testing/testing.go:1444 +0x4c
created by testing.runTests.func1
	/usr/lib/golang/src/testing/testing.go:1444 +0xcc

goroutine 126 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc000d59660, 0xc0014e3a98, 0xc00128a3c0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc000d59660, 0xc000d73a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc000d59660, 0xc000d73a98, 0xc000d59660, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc000d73a98, 0xc000d73a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000f7f340, 0xc000600900, 0xc001508d30, 0xf, 0x126d6e60, 0xc0012258c0)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000f7f340, 0xc000600900, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000600900)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000600900, 0xc0001addc0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 127 [chan send, 3 minutes]:
testing.tRunner.func1(0xc000600c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000600c00, 0xc0001adec0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 128 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000601200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000601200, 0xc0001adfc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 129 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000601680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000601680)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000601680, 0x1236da16, 0x28, 0xc00042db68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000a20a40, 0xc000601680, 0xc0007b0900, 0xc000b7dd00, 0x13)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000601680)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000601680, 0xc000b3c0c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 130 [chan send, 13 minutes]:
testing.tRunner.func1(0xc000601980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000601980)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000601980, 0x1237087d, 0x29, 0xc0000e7e58, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000601980)
	/root/rohan/pipeline/test/examples_test.go:153 +0x958
testing.tRunner(0xc000601980, 0xc000b3c1c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 131 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000601c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000601c80, 0xc000b3c2c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 132 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000001980)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000001980)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000001980, 0xc000b3c3c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 133 [chan send, 15 minutes]:
testing.tRunner.func1(0xc000b40180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b40180, 0xc000b3c4c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 134 [chan send, 22 minutes]:
testing.tRunner.func1(0xc000b40480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b40480, 0xc000b3c5c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 135 [chan send, 22 minutes]:
testing.tRunner.func1(0xc000b40780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b40780, 0xc000b3c6c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 136 [chan send, 8 minutes]:
testing.tRunner.func1(0xc000b40a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b40a80, 0xc000b3c7c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 137 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000b40d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000b40d80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000b40d80, 0x12367481, 0x24, 0xc000733b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000906540, 0xc000b40d80, 0xc001414f30, 0xc000f8c960, 0x13)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000b40d80)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000b40d80, 0xc000b3c8c0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 138 [chan send, 7 minutes]:
testing.tRunner.func1(0xc000b41080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b41080, 0xc000b3c9c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 139 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000b41380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000b41380)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000b41380, 0x12355c05, 0x18, 0xc000b4ead0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc000b41380)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000c4c1c0, 0xc000b41380, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000b41380)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000b41380, 0xc000b3cac0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 140 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000b41680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b41680, 0xc000b3cbc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 141 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000b41980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000b41980)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000b41980, 0x12367481, 0x24, 0xc00100fb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc00111e540, 0xc000b41980, 0xc000f95a70, 0xc000c2ca00, 0xd)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000b41980)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000b41980, 0xc000b3ccc0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 142 [chan send, 27 minutes]:
testing.tRunner.func1(0xc000b41c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b41c80, 0xc000b3cdc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 143 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000b78000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b78000, 0xc000b3cec0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 144 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000b78300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b78300, 0xc000b3cfc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 145 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000b78600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b78600, 0xc000b3d0c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 146 [chan send, 27 minutes]:
testing.tRunner.func1(0xc000b78900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b78900, 0xc000b3d1c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 147 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000b78c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b78c00, 0xc000b3d2c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 148 [chan send, 16 minutes]:
testing.tRunner.func1(0xc000b78f00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b78f00, 0xc000b3d3c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 88 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000398480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000398480, 0xc0002ac4c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 149 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000c82300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c82300, 0xc000c90080)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 150 [chan send, 15 minutes]:
testing.tRunner.func1(0xc000c82600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c82600, 0xc000c90180)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 151 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000c82900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c82900, 0xc000c90280)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 152 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000c82c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c82c00, 0xc000c90380)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 153 [chan send, 7 minutes]:
testing.tRunner.func1(0xc000c82f00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c82f00, 0xc000c90480)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 154 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000c83200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c83200, 0xc000c90580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 155 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000c83500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000c83500, 0xc000c90680)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 156 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000c83800)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000c83800)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000c83800, 0xc000c90780)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 157 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000c83b00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000c83b00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000c83b00, 0xc000c90880)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 158 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000c83e00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000c83e00)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000c83e00, 0x1237087d, 0x29, 0xc000955e58, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000c83e00)
	/root/rohan/pipeline/test/examples_test.go:153 +0x958
testing.tRunner(0xc000c83e00, 0xc000c90980)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 159 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000b79380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b79380, 0xc000c90a80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 160 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000b79680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000b79680, 0xc000c90b80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 161 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000b79980)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000b79980)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000b79980, 0xc000c90c80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 162 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000b79c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000b79c80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000b79c80, 0x12380466, 0x31, 0xc001265a68, 0x3, 0x3)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc001082840, 0xc000b79c80, 0xc000dd8760, 0xf, 0x126d6e60, 0xc00108ac60)
	/root/rohan/pipeline/test/init_test.go:172 +0x294
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc001082840, 0xc000b79c80, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000b79c80)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000b79c80, 0xc000c90d80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 163 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000187200)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000187200)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000187200, 0xc000c90e80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 164 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000187500)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000187500)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000187500, 0xc000c90f80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 165 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000187800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000187800)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000187800, 0x12367481, 0x24, 0xc001239b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000a7a200, 0xc000187800, 0xc0007b0480, 0xc000c25e60, 0x13)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000187800)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000187800, 0xc000c91080)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 166 [chan send, 23 minutes]:
testing.tRunner.func1(0xc000187b00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000187b00)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000187b00, 0x12345608, 0xd, 0xc000ef9e68, 0x2, 0x2)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000187b00)
	/root/rohan/pipeline/test/examples_test.go:144 +0x4dc
testing.tRunner(0xc000187b00, 0xc000c91180)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 167 [chan send, 2 minutes]:
testing.tRunner.func1(0xc000187e00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000187e00, 0xc000c91280)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 168 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000154d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000154d80, 0xc000c91380)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 169 [chan send, 20 minutes]:
testing.tRunner.func1(0xc000155080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000155080)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000155080, 0x1236da16, 0x28, 0xc00016fb68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000c0b140, 0xc000155080, 0xc000df50e0, 0xc0007c41e0, 0xe)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000155080)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000155080, 0xc000c91480)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 170 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000155380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000155380, 0xc000c91580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 171 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000155680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000155680)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000155680, 0x12380466, 0x31, 0xc00100ba68, 0x3, 0x3)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc001208c00, 0xc000155680, 0xc0011f38d0, 0xf, 0x126d6e60, 0xc0010474a0)
	/root/rohan/pipeline/test/init_test.go:172 +0x294
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc001208c00, 0xc000155680, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000155680)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000155680, 0xc000c91680)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 172 [chan send, 13 minutes]:
testing.tRunner.func1(0xc000155980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000155980, 0xc000c91780)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 173 [chan send, 24 minutes]:
testing.tRunner.func1(0xc000155c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000155c80, 0xc000c91880)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 174 [chan send, 28 minutes]:
testing.tRunner.func1(0xc000103500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103500, 0xc000c91980)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 175 [chan send, 17 minutes]:
testing.tRunner.func1(0xc000103e00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000103e00, 0xc000c91a80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 176 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc001408200, 0xc000429a98, 0xc0009c2300, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc001408200, 0xc001437a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc001408200, 0xc001437a98, 0xc001408200, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc001437a98, 0xc001437a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc0012839c0, 0xc0001de480, 0xc001402630, 0xf, 0x126d6e60, 0xc0012e9760)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc0012839c0, 0xc0001de480, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001de480)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc0001de480, 0xc000c91b80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 177 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc00091b8c0, 0xc00042da98, 0xc000cc1080, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc00091b8c0, 0xc000733a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc00091b8c0, 0xc000733a98, 0xc00091b8c0, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc000733a98, 0xc000733a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc00138e5c0, 0xc0001de780, 0xc001392720, 0xf, 0x126d6e60, 0xc001380f20)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc00138e5c0, 0xc0001de780, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001de780)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc0001de780, 0xc000c91c80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 178 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc001556460, 0xc0013dfa98, 0xc0009c3500, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc001556460, 0xc000edba98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc001556460, 0xc000edba98, 0xc001556460, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc000edba98, 0xc000edba48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc001080cc0, 0xc0001dea80, 0xc0005edbf0, 0xf, 0x126d6e60, 0xc0010d29a0)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc001080cc0, 0xc0001dea80, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001dea80)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc0001dea80, 0xc000c91d80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 179 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc001396180, 0xc000639a98, 0xc00124a1e0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc001396180, 0xc0015a3a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc001396180, 0xc0015a3a98, 0xc001396180, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0015a3a98, 0xc0015a3a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000d54540, 0xc0001ded80, 0xc0015160a0, 0xf, 0x126d6e60, 0xc000ae6420)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000d54540, 0xc0001ded80, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001ded80)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc0001ded80, 0xc000c91e80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 180 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0001df080)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001df080)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0001df080, 0xc000c91f80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 181 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0001df380)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001df380)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0001df380, 0xc00004e100)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 182 [chan send, 2 minutes]:
testing.tRunner.func1(0xc0001df680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc0001df680)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc0001df680, 0x1236da16, 0x28, 0xc000733b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000f59980, 0xc0001df680, 0xc0011a0630, 0xc0011a96e0, 0x2e)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001df680)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0001df680, 0xc00004e440)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 183 [chan send, 22 minutes]:
testing.tRunner.func1(0xc0001df980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0001df980, 0xc00004e580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 184 [chan send, 20 minutes]:
testing.tRunner.func1(0xc0001dfc80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc0001dfc80)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc0001dfc80, 0x1236da16, 0x28, 0xc000d71b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidatePipelineRunDone(0x126a0360, 0xc000b06a80, 0xc0001dfc80, 0xc000b66510, 0xc001125260, 0x22)
	/root/rohan/pipeline/test/examples_test.go:55 +0xfc
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0001dfc80)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc0001dfc80, 0xc00004eb40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 185 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0004eaf00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004eaf00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0004eaf00, 0xc00004ef40)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 186 [chan send, 21 minutes]:
testing.tRunner.func1(0xc0004eb200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc0004eb200)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc0004eb200, 0x12355c05, 0x18, 0xc000bdbad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc0004eb200)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000da5380, 0xc0004eb200, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0004eb200)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc0004eb200, 0xc00004f040)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 187 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000bde000)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bde000)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000bde000, 0xc00004f200)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 188 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000bde300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bde300, 0xc00004f300)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 189 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000bde600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bde600)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bde600, 0x12380466, 0x31, 0xc000b03a68, 0x3, 0x3)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc0007ae200, 0xc000bde600, 0xc0008396d0, 0xf, 0x126d6e60, 0xc0006ae160)
	/root/rohan/pipeline/test/init_test.go:172 +0x294
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc0007ae200, 0xc000bde600, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bde600)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000bde600, 0xc00004f440)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 190 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000bde900)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bde900)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000bde900, 0xc00004f540)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 191 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000bdec00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bdec00, 0xc00004f740)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 192 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0010c8220, 0xc00016fa98, 0xc00122a420, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0010c8220, 0xc00016ba98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0010c8220, 0xc00016ba98, 0xc0010c8220, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc00016ba98, 0xc00016ba48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc0011535c0, 0xc000bdef00, 0xc000895260, 0xf, 0x126d6e60, 0xc00128e2c0)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc0011535c0, 0xc000bdef00, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bdef00)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000bdef00, 0xc00004f840)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 193 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000bdf200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bdf200, 0xc00004f9c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 259 [sync.Cond.Wait, 29 minutes]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc0001eaca0, 0xc000000000)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc0001eac90)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc0001eac88, 0xc000560001, 0x3dff, 0x3dff, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc0001eac60, 0xc000560001, 0x3dff, 0x3dff, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
encoding/json.(*Decoder).refill(0xc0001eadc0, 0xa, 0x9)
	/usr/lib/golang/src/encoding/json/stream.go:165 +0x150
encoding/json.(*Decoder).readValue(0xc0001eadc0, 0x0, 0x0, 0x7fffc9d83ca8)
	/usr/lib/golang/src/encoding/json/stream.go:140 +0x388
encoding/json.(*Decoder).Decode(0xc0001eadc0, 0x12086fa0, 0xc00068e240, 0x1073aeec, 0x0)
	/usr/lib/golang/src/encoding/json/stream.go:63 +0x98
k8s.io/apimachinery/pkg/util/framer.(*jsonFrameReader).Read(0xc000252570, 0xc000c6c000, 0x4000, 0x4a80, 0x0, 0xc000591480, 0x40)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/framer/framer.go:152 +0x2f4
k8s.io/apimachinery/pkg/runtime/serializer/streaming.(*decoder).Decode(0xc000da20a0, 0x0, 0x1265c720, 0xc000591480, 0x0, 0x0, 0x0, 0xc000136f60, 0xc000a6a400)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/runtime/serializer/streaming/streaming.go:77 +0xd0
k8s.io/client-go/rest/watch.(*Decoder).Decode(0xc000da60a0, 0xc000787d08, 0x2, 0x1, 0xc000a6a400, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/client-go@v0.21.4/rest/watch/decoder.go:49 +0xc4
k8s.io/apimachinery/pkg/watch.(*StreamWatcher).receive(0xc000da4180)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/watch/streamwatcher.go:105 +0x108
created by k8s.io/apimachinery/pkg/watch.NewStreamWatcher
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/watch/streamwatcher.go:76 +0x19c

goroutine 210 [chan send, 2 minutes]:
testing.tRunner.func1(0xc000bdf500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bdf500, 0xc00004fac0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 211 [chan send, 8 minutes]:
testing.tRunner.func1(0xc000bdf800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bdf800, 0xc00004fbc0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 212 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000bdfb00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bdfb00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000bdfb00, 0xc00004fcc0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 213 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000bdfe00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bdfe00)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bdfe00, 0x12367481, 0x24, 0xc0007a1b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000ce4600, 0xc000bdfe00, 0xc000f65d40, 0xc0014001c0, 0x31)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bdfe00)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bdfe00, 0xc00004fdc0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 214 [chan send, 25 minutes]:
testing.tRunner.func1(0xc000bf6180)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bf6180, 0xc00004fec0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 215 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000bf6480)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bf6480)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bf6480, 0x12367481, 0x24, 0xc000639b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc0005912c0, 0xc000bf6480, 0xc001056900, 0xc000f8ce40, 0x13)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bf6480)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000bf6480, 0xc00004ffc0)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 216 [chan send, 26 minutes]:
testing.tRunner.func1(0xc000bf6780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bf6780, 0xc000a5c380)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 217 [chan send, 14 minutes]:
testing.tRunner.func1(0xc000bf6a80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).SkipNow(0xc000bf6a80)
	/usr/lib/golang/src/testing/testing.go:832 +0x54
testing.(*common).Skipf(0xc000bf6a80, 0x12355c05, 0x18, 0xc000bf8ad0, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:818 +0x80
github.com/tektoncd/pipeline/test.skipIfExcluded(0xc000bf6a80)
	/root/rohan/pipeline/test/multiarch_utils.go:164 +0x12c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc0010bd280, 0xc000bf6a80, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:56 +0x34
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bf6a80)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000bf6a80, 0xc000a5c480)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 218 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000bf6d80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bf6d80, 0xc000a5c580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 219 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000bf7080)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000bf7080)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000bf7080, 0x12380466, 0x31, 0xc000affa68, 0x3, 0x3)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc0009e9580, 0xc000bf7080, 0xc0010994a0, 0xf, 0x126d6e60, 0xc00108be40)
	/root/rohan/pipeline/test/init_test.go:172 +0x294
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc0009e9580, 0xc000bf7080, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bf7080)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000bf7080, 0xc000a5c680)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 220 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000bf7380)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bf7380)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000bf7380, 0xc000a5c780)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 221 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000bf7680)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000bf7680)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000bf7680, 0xc000a5c880)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 222 [chan send, 19 minutes]:
testing.tRunner.func1(0xc000bf7980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bf7980, 0xc000a5c980)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 223 [chan send, 18 minutes]:
testing.tRunner.func1(0xc000bf7c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000bf7c80, 0xc000a5ca80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 224 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000034000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000034000)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000034000, 0x12380466, 0x31, 0xc0010cba68, 0x3, 0x3)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000a5ad40, 0xc000034000, 0xc0007d7cc0, 0xf, 0x126d6e60, 0xc000b65e40)
	/root/rohan/pipeline/test/init_test.go:172 +0x294
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000a5ad40, 0xc000034000, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000034000)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000034000, 0xc000a5cb80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 225 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000034300)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000034300, 0xc000a5cc80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 226 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000034600)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000034600)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000034600, 0xc000a5cd80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 227 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000034900)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000034900)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000034900, 0xc000a5ce80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 228 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000034c00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000034c00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000034c00, 0xc000a5cf80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 229 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000034f00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000034f00, 0xc000a5d080)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 230 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000035200)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000035200)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000035200, 0xc000a5d180)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 231 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000035500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000035500)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000035500, 0x12380466, 0x31, 0xc001261a68, 0x3, 0x3)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000e2b540, 0xc000035500, 0xc000c935a0, 0xf, 0x126d6e60, 0xc00073e840)
	/root/rohan/pipeline/test/init_test.go:172 +0x294
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000e2b540, 0xc000035500, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000035500)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000035500, 0xc000a5d280)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 232 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000035800)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000035800)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000035800, 0x12380466, 0x31, 0xc000d6da68, 0x3, 0x3)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000a19ac0, 0xc000035800, 0xc000b12fb0, 0xf, 0x126d6e60, 0xc00060cc60)
	/root/rohan/pipeline/test/init_test.go:172 +0x294
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000a19ac0, 0xc000035800, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000035800)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000035800, 0xc000a5d380)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 233 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000035b00)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000035b00)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000035b00, 0xc000a5d480)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 234 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000035e00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000035e00, 0xc000a5d580)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 235 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000166180)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000166180)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000166180, 0xc000a5d680)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 236 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000166480)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000166480)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000166480, 0xc000a5d780)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 237 [chan send, 21 minutes]:
testing.tRunner.func1(0xc000166780)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000166780, 0xc000a5d880)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 238 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc000166a80)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000166a80)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc000166a80, 0xc000a5d980)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 239 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc0012b2c60, 0xc0013e3a98, 0xc00128b6e0, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc0012b2c60, 0xc0011dda98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc0012b2c60, 0xc0011dda98, 0xc0012b2c60, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc0011dda98, 0xc0011dda48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000e85880, 0xc000166d80, 0xc000f6cab0, 0xf, 0x126d6e60, 0xc001028160)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000e85880, 0xc000166d80, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000166d80)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000166d80, 0xc000a5da80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 240 [select]:
k8s.io/apimachinery/pkg/util/wait.WaitFor(0xc00084f900, 0xc0014dfa98, 0xc00121af60, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:539 +0x124
k8s.io/apimachinery/pkg/util/wait.pollInternal(0xc00084f900, 0xc001433a98, 0x0, 0x0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:427 +0x94
k8s.io/apimachinery/pkg/util/wait.pollImmediateInternal(0xc00084f900, 0xc001433a98, 0xc00084f900, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:452 +0x7c
k8s.io/apimachinery/pkg/util/wait.PollImmediate(0x3b9aca00, 0x8bb2c97000, 0xc001433a98, 0xc001433a48, 0x2)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:441 +0x4c
github.com/tektoncd/pipeline/test.verifyServiceAccountExistence(0x126a0360, 0xc000591380, 0xc000167080, 0xc001110b90, 0xf, 0x126d6e60, 0xc00039a420)
	/root/rohan/pipeline/test/init_test.go:165 +0x19c
github.com/tektoncd/pipeline/test.setup(0x126a0360, 0xc000591380, 0xc000167080, 0x0, 0x0, 0x0, 0x1019012f, 0x0, 0x128d5000)
	/root/rohan/pipeline/test/init_test.go:69 +0x220
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000167080)
	/root/rohan/pipeline/test/examples_test.go:127 +0xf8
testing.tRunner(0xc000167080, 0xc000a5db80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 241 [chan send, 2 minutes]:
testing.tRunner.func1(0xc000167380)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000167380, 0xc000a5dc80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 242 [chan send, 23 minutes]:
testing.tRunner.func1(0xc000167680)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000167680, 0xc000a5dd80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 243 [chan send, 11 minutes]:
testing.tRunner.func1(0xc000167980)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
runtime.Goexit()
	/usr/lib/golang/src/runtime/panic.go:636 +0x140
testing.(*common).FailNow(0xc000167980)
	/usr/lib/golang/src/testing/testing.go:732 +0x54
testing.(*common).Fatalf(0xc000167980, 0x12367481, 0x24, 0xc0007a5b68, 0x1, 0x1)
	/usr/lib/golang/src/testing/testing.go:806 +0x80
github.com/tektoncd/pipeline/test.waitValidateTaskRunDone(0x126a0360, 0xc000efaa00, 0xc000167980, 0xc000fb0870, 0xc0011101f0, 0x10)
	/root/rohan/pipeline/test/examples_test.go:62 +0xf0
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc000167980)
	/root/rohan/pipeline/test/examples_test.go:168 +0x624
testing.tRunner(0xc000167980, 0xc000a5de80)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 244 [chan send, 12 minutes]:
testing.tRunner.func1(0xc000167c80)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc000167c80, 0xc000a5df80)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 245 [chan send, 15 minutes]:
testing.tRunner.func1(0xc0002b4000)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002b4000, 0xc0005912c0)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 246 [chan receive, 29 minutes]:
testing.(*testContext).waitParallel(0xc0001819a0)
	/usr/lib/golang/src/testing/testing.go:1226 +0x138
testing.(*T).Parallel(0xc0002b4300)
	/usr/lib/golang/src/testing/testing.go:1006 +0x2c4
github.com/tektoncd/pipeline/test.exampleTest.func1(0xc0002b4300)
	/root/rohan/pipeline/test/examples_test.go:120 +0x6c
testing.tRunner(0xc0002b4300, 0xc000591400)
	/usr/lib/golang/src/testing/testing.go:1123 +0x180
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 247 [chan send, 16 minutes]:
testing.tRunner.func1(0xc0002b4600)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002b4600, 0xc000591500)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 248 [chan send, 29 minutes]:
testing.tRunner.func1(0xc0002b4900)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002b4900, 0xc000591680)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 249 [chan send, 29 minutes]:
testing.tRunner.func1(0xc0002b4c00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002b4c00, 0xc000591780)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 250 [chan send, 29 minutes]:
testing.tRunner.func1(0xc0002b4f00)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002b4f00, 0xc000591900)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 251 [chan send, 29 minutes]:
testing.tRunner.func1(0xc0002b5200)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002b5200, 0xc000591a40)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 252 [chan send, 28 minutes]:
testing.tRunner.func1(0xc0002b5500)
	/usr/lib/golang/src/testing/testing.go:1113 +0x3ac
testing.tRunner(0xc0002b5500, 0xc0001ac400)
	/usr/lib/golang/src/testing/testing.go:1127 +0x1a0
created by testing.(*T).Run
	/usr/lib/golang/src/testing/testing.go:1168 +0x4a4

goroutine 258 [IO wait]:
internal/poll.runtime_pollWait(0x7ffff74e5fb0, 0x72, 0x134435a8)
	/usr/lib/golang/src/runtime/netpoll.go:222 +0x50
internal/poll.(*pollDesc).wait(0xc00000c218, 0x72, 0x1264e200, 0x134435a8, 0x0)
	/usr/lib/golang/src/internal/poll/fd_poll_runtime.go:87 +0xe4
internal/poll.(*pollDesc).waitRead(...)
	/usr/lib/golang/src/internal/poll/fd_poll_runtime.go:92
internal/poll.(*FD).Read(0xc00000c200, 0xc000a22000, 0x9988, 0x9988, 0x0, 0x0, 0x0)
	/usr/lib/golang/src/internal/poll/fd_unix.go:159 +0x1bc
net.(*netFD).Read(0xc00000c200, 0xc000a22000, 0x9988, 0x9988, 0x9983, 0xc0002cd4e0, 0xc)
	/usr/lib/golang/src/net/fd_posix.go:55 +0x50
net.(*conn).Read(0xc0001a0018, 0xc000a22000, 0x9988, 0x9988, 0x101721bc, 0x7, 0x1049ec68)
	/usr/lib/golang/src/net/net.go:182 +0xac
crypto/tls.(*atLeastReader).Read(0xc001387040, 0xc000a22000, 0x9988, 0x9988, 0xeb, 0x12648340, 0xd5)
	/usr/lib/golang/src/crypto/tls/conn.go:779 +0x8c
bytes.(*Buffer).ReadFrom(0xc000594600, 0x12648140, 0xc001387040, 0xeb, 0xc000a22005, 0xc000a22005)
	/usr/lib/golang/src/bytes/buffer.go:204 +0x120
crypto/tls.(*Conn).readFromUntil(0xc000594380, 0x1264c200, 0xc0001a0018, 0x5, 0xc0001a0018, 0xd5)
	/usr/lib/golang/src/crypto/tls/conn.go:801 +0x1ac
crypto/tls.(*Conn).readRecordOrCCS(0xc000594380, 0x0, 0x0, 0x100475f0)
	/usr/lib/golang/src/crypto/tls/conn.go:608 +0x348
crypto/tls.(*Conn).readRecord(...)
	/usr/lib/golang/src/crypto/tls/conn.go:576
crypto/tls.(*Conn).Read(0xc000594380, 0xc000da9000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
	/usr/lib/golang/src/crypto/tls/conn.go:1252 +0x188
bufio.(*Reader).Read(0xc000360000, 0xc000daa038, 0x9, 0x9, 0x0, 0x0, 0x1074f638)
	/usr/lib/golang/src/bufio/bufio.go:227 +0x5d8
io.ReadAtLeast(0x12647f60, 0xc000360000, 0xc000daa038, 0x9, 0x9, 0x9, 0x10774d68, 0xc001257a00, 0x12648340)
	/usr/lib/golang/src/io/io.go:314 +0x88
io.ReadFull(...)
	/usr/lib/golang/src/io/io.go:333
golang.org/x/net/http2.readFrameHeader(0xc000daa038, 0x9, 0x9, 0x12647f60, 0xc000360000, 0x0, 0x0, 0xc001198d20, 0x1007ede0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/frame.go:237 +0x68
golang.org/x/net/http2.(*Framer).ReadFrame(0xc000daa000, 0xc001198d20, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/frame.go:492 +0xbc
golang.org/x/net/http2.(*clientConnReadLoop).run(0xc001257fa8, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:1828 +0x144
golang.org/x/net/http2.(*ClientConn).readLoop(0xc000da0000)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:1750 +0x78
created by golang.org/x/net/http2.(*Transport).newClientConn
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:704 +0xa08

goroutine 254 [syscall, 29 minutes]:
os/signal.signal_recv(0x0)
	/usr/lib/golang/src/runtime/sigqueue.go:147 +0xf8
os/signal.loop()
	/usr/lib/golang/src/os/signal/signal_unix.go:23 +0x28
created by os/signal.Notify.func1.1
	/usr/lib/golang/src/os/signal/signal.go:150 +0x7c

goroutine 255 [chan receive, 29 minutes]:
knative.dev/pkg/test.waitForInterrupt.func1(0xc0006782a0)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/cleanup.go:38 +0x38
created by knative.dev/pkg/test.waitForInterrupt
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/cleanup.go:37 +0xb4

goroutine 281 [sync.Cond.Wait, 1 minutes]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc00076c1a0, 0xc000002106)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc00076c190)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc00076c188, 0xc0005ea777, 0x889, 0x889, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc00076c160, 0xc0005ea777, 0x889, 0x889, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
bufio.(*Scanner).Scan(0xc000bd3f00, 0x43a)
	/usr/lib/golang/src/bufio/scan.go:214 +0x134
knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod.func1(0xc0003ffa30, 0x7, 0xc00010e580, 0xc000057a10, 0x10, 0xc000d31ec0, 0x29, 0xc000ae5fa0)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:165 +0x320
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:148 +0x24c

goroutine 257 [sync.Cond.Wait, 1 minutes]:
runtime.goparkunlock(...)
	/usr/lib/golang/src/runtime/proc.go:312
sync.runtime_notifyListWait(0xc00063e9e0, 0xc000000e72)
	/usr/lib/golang/src/runtime/sema.go:513 +0x104
sync.(*Cond).Wait(0xc00063e9d0)
	/usr/lib/golang/src/sync/cond.go:56 +0x84
golang.org/x/net/http2.(*pipe).Read(0xc00063e9c8, 0xc00097a364, 0xc9c, 0xc9c, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/pipe.go:65 +0xa8
golang.org/x/net/http2.transportResponseBody.Read(0xc00063e9a0, 0xc00097a364, 0xc9c, 0xc9c, 0x0, 0x0, 0x0)
	/root/go/pkg/mod/golang.org/x/net@v0.0.0-20210903162142-ad29c8ab022f/http2/transport.go:2117 +0x98
bufio.(*Scanner).Scan(0xc00066df00, 0x1b7)
	/usr/lib/golang/src/bufio/scan.go:214 +0x134
knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod.func1(0xc0005c6040, 0x1b, 0xc00010e580, 0xc000b12ee0, 0x10, 0xc0005a7110, 0x2c, 0xc000caa080)
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:165 +0x320
created by knative.dev/pkg/test/logstream/v2.(*namespaceSource).startForPod
	/root/go/pkg/mod/knative.dev/pkg@v0.0.0-20210827184538-2bd91f75571c/test/logstream/v2/stream.go:148 +0x24c

goroutine 11678 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc000cc1140, 0x3b9aca00, 0x8bb2c97000, 0xc000cc10e0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11555 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc00122a4e0, 0x3b9aca00, 0x8bb2c97000, 0xc00122a480)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 9394 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc0009c35c0, 0x3b9aca00, 0x8bb2c97000, 0xc0009c3560)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11664 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc0009c23c0, 0x3b9aca00, 0x8bb2c97000, 0xc0009c2360)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 9052 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc00128a480, 0x3b9aca00, 0x8bb2c97000, 0xc00128a420)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11518 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc00124a2a0, 0x3b9aca00, 0x8bb2c97000, 0xc00124a240)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 9064 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc00121b020, 0x3b9aca00, 0x8bb2c97000, 0xc00121afc0)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88

goroutine 11767 [select]:
k8s.io/apimachinery/pkg/util/wait.poller.func1.1(0xc00128b7a0, 0x3b9aca00, 0x8bb2c97000, 0xc00128b740)
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:588 +0x16c
created by k8s.io/apimachinery/pkg/util/wait.poller.func1
	/root/go/pkg/mod/k8s.io/apimachinery@v0.21.4/pkg/util/wait/wait.go:571 +0x88
FAIL	github.com/tektoncd/pipeline/test	1800.172s
FAIL
